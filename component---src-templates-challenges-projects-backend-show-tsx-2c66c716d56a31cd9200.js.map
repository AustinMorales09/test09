{"version":3,"file":"component---src-templates-challenges-projects-backend-show-tsx-2c66c716d56a31cd9200.js","mappings":"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","sources":["webpack://@freecodecamp/client/./src/templates/Challenges/projects/backend/show.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\nimport { graphql } from 'gatsby';\nimport React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport { withTranslation } from 'react-i18next';\nimport type { TFunction } from 'i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row } from '@freecodecamp/ui';\n\nimport Spacer from '../../../../components/helpers/spacer';\nimport LearnLayout from '../../../../components/layouts/learn';\nimport { isSignedInSelector } from '../../../../redux/selectors';\nimport {\n  ChallengeMeta,\n  ChallengeNode,\n  Test\n} from '../../../../redux/prop-types';\nimport ChallengeDescription from '../../components/challenge-description';\nimport Hotkeys from '../../components/hotkeys';\nimport ChallengeTitle from '../../components/challenge-title';\nimport CompletionModal from '../../components/completion-modal';\nimport HelpModal from '../../components/help-modal';\nimport Output from '../../components/output';\nimport TestSuite from '../../components/test-suite';\nimport {\n  challengeMounted,\n  executeChallenge,\n  initConsole,\n  initTests,\n  updateChallengeMeta,\n  updateSolutionFormValues\n} from '../../redux/actions';\nimport {\n  challengeTestsSelector,\n  consoleOutputSelector,\n  isChallengeCompletedSelector\n} from '../../redux/selectors';\nimport { getGuideUrl } from '../../utils';\nimport SolutionForm from '../solution-form';\nimport ProjectToolPanel from '../tool-panel';\n\nimport '../../components/test-frame.css';\n\n// Redux Setup\nconst mapStateToProps = createSelector(\n  consoleOutputSelector,\n  challengeTestsSelector,\n  isChallengeCompletedSelector,\n  isSignedInSelector,\n  (\n    output: string[],\n    tests: Test[],\n    isChallengeCompleted: boolean,\n    isSignedIn: boolean\n  ) => ({\n    tests,\n    output,\n    isChallengeCompleted,\n    isSignedIn\n  })\n);\n\nconst mapDispatchToActions = {\n  challengeMounted,\n  executeChallenge,\n  initConsole,\n  initTests,\n  updateChallengeMeta,\n  updateSolutionFormValues\n};\n\n// Types\ninterface BackEndProps {\n  challengeMounted: (arg0: string) => void;\n  data: { challengeNode: ChallengeNode };\n  description: string;\n  executeChallenge: (options: { showCompletionModal: boolean }) => void;\n  forumTopicId: number;\n  id: string;\n  initConsole: () => void;\n  initTests: (tests: Test[]) => void;\n  isChallengeCompleted: boolean;\n  isSignedIn: boolean;\n  output: string[];\n  pageContext: {\n    challengeMeta: ChallengeMeta;\n  };\n  t: TFunction;\n  tests: Test[];\n  title: string;\n  updateChallengeMeta: (arg0: ChallengeMeta) => void;\n  updateSolutionFormValues: () => void;\n}\n\n// Component\nclass BackEnd extends Component<BackEndProps> {\n  static displayName: string;\n  private container: React.RefObject<HTMLElement> = React.createRef();\n\n  constructor(props: BackEndProps) {\n    super(props);\n    this.state = {};\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.initializeComponent();\n    window.addEventListener('resize', () => this.updateDimensions());\n    this.container.current?.focus();\n  }\n\n  updateDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.updateDimensions());\n  }\n\n  componentDidUpdate(prevProps: BackEndProps) {\n    const {\n      data: {\n        challengeNode: {\n          challenge: {\n            title: prevTitle,\n            fields: { tests: prevTests }\n          }\n        }\n      }\n    } = prevProps;\n    const {\n      data: {\n        challengeNode: {\n          challenge: {\n            title: currentTitle,\n            fields: { tests: currTests }\n          }\n        }\n      }\n    } = this.props;\n    if (prevTitle !== currentTitle || prevTests !== currTests) {\n      this.initializeComponent();\n    }\n  }\n\n  initializeComponent() {\n    const {\n      challengeMounted,\n      initConsole,\n      initTests,\n      updateChallengeMeta,\n      data: {\n        challengeNode: {\n          challenge: {\n            fields: { tests },\n            title,\n            challengeType,\n            helpCategory\n          }\n        }\n      },\n      pageContext: { challengeMeta }\n    } = this.props;\n    initConsole();\n    initTests(tests);\n    updateChallengeMeta({\n      ...challengeMeta,\n      title,\n      challengeType,\n      helpCategory\n    });\n    challengeMounted(challengeMeta.id);\n  }\n\n  handleSubmit({\n    showCompletionModal\n  }: {\n    showCompletionModal: boolean;\n  }): void {\n    this.props.executeChallenge({\n      showCompletionModal\n    });\n  }\n\n  render() {\n    const {\n      data: {\n        challengeNode: {\n          challenge: {\n            fields: { blockName },\n            challengeType,\n            forumTopicId,\n            title,\n            description,\n            instructions,\n            translationPending,\n            superBlock,\n            block\n          }\n        }\n      },\n      isChallengeCompleted,\n      output,\n      pageContext: {\n        challengeMeta: { nextChallengePath, prevChallengePath }\n      },\n      t,\n      tests,\n      updateSolutionFormValues\n    } = this.props;\n\n    const blockNameTitle = `${t(\n      `intro:${superBlock}.blocks.${block}.title`\n    )} - ${title}`;\n\n    return (\n      <Hotkeys\n        containerRef={this.container}\n        nextChallengePath={nextChallengePath}\n        prevChallengePath={prevChallengePath}\n      >\n        <LearnLayout>\n          <Helmet\n            title={`${blockNameTitle} | ${t('learn.learn')} | freeCodeCamp.org`}\n          />\n          <Container>\n            <Row>\n              <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n                <Spacer size='medium' />\n                <ChallengeTitle\n                  isCompleted={isChallengeCompleted}\n                  translationPending={translationPending}\n                >\n                  {title}\n                </ChallengeTitle>\n                <ChallengeDescription\n                  description={description}\n                  instructions={instructions}\n                />\n                <SolutionForm\n                  challengeType={challengeType}\n                  // eslint-disable-next-line @typescript-eslint/unbound-method\n                  onSubmit={this.handleSubmit}\n                  updateSolutionForm={updateSolutionFormValues}\n                />\n                <ProjectToolPanel\n                  guideUrl={getGuideUrl({ forumTopicId, title })}\n                />\n                <br />\n                <Output\n                  defaultOutput={`/**\n*\n* ${t('learn.test-output')}\n*\n*\n*/`}\n                  output={output}\n                />\n                <TestSuite tests={tests} />\n                <Spacer size='medium' />\n              </Col>\n              <CompletionModal />\n              <HelpModal challengeTitle={title} challengeBlock={blockName} />\n            </Row>\n          </Container>\n        </LearnLayout>\n      </Hotkeys>\n    );\n  }\n}\n\nBackEnd.displayName = 'BackEnd';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToActions\n)(withTranslation()(BackEnd));\n\nexport const query = graphql`\n  query BackendChallenge($slug: String!) {\n    challengeNode(challenge: { fields: { slug: { eq: $slug } } }) {\n      challenge {\n        forumTopicId\n        title\n        description\n        instructions\n        challengeType\n        helpCategory\n        superBlock\n        block\n        translationPending\n        fields {\n          blockName\n          slug\n          tests {\n            text\n            testString\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["mapStateToProps","createSelector","consoleOutputSelector","challengeTestsSelector","isChallengeCompletedSelector","isSignedInSelector","output","tests","isChallengeCompleted","isSignedIn","mapDispatchToActions","challengeMounted","executeChallenge","initConsole","initTests","updateChallengeMeta","updateSolutionFormValues","BackEnd","Component","constructor","props","super","container","React","this","state","updateDimensions","bind","handleSubmit","componentDidMount","_this$container$curre","initializeComponent","window","addEventListener","current","focus","setState","width","innerWidth","height","innerHeight","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","data","challengeNode","challenge","title","prevTitle","fields","prevTests","currentTitle","currTests","challengeType","helpCategory","pageContext","challengeMeta","id","_ref","showCompletionModal","render","blockName","forumTopicId","description","instructions","translationPending","superBlock","block","nextChallengePath","prevChallengePath","t","blockNameTitle","Hotkeys","containerRef","LearnLayout","Helmet","Container","Row","Col","md","mdOffset","sm","smOffset","xs","Spacer","size","ChallengeTitle","isCompleted","ChallengeDescription","SolutionForm","onSubmit","updateSolutionForm","ProjectToolPanel","guideUrl","getGuideUrl","Output","defaultOutput","TestSuite","CompletionModal","HelpModal","challengeTitle","challengeBlock","displayName","connect","withTranslation"],"sourceRoot":""}