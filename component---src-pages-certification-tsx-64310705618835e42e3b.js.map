{"version":3,"file":"component---src-pages-certification-tsx-64310705618835e42e3b.js","mappings":"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AAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAE,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACprBqD,EAAOxD,4BAA8B,CAAC,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAE,EAA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","sources":["webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createFind.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/find.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/findIndex.js","webpack://@freecodecamp/client/./src/components/SolutionViewer/project-modal.tsx","webpack://@freecodecamp/client/./src/components/SolutionViewer/solution-viewer.tsx","webpack://@freecodecamp/client/./src/components/create-redirect.ts","webpack://@freecodecamp/client/./src/components/redirect-home.ts","webpack://@freecodecamp/client/../node_modules/.pnpm/qrcode.react@3.1.0_react@16.14.0/node_modules/qrcode.react/lib/esm/index.js","webpack://@freecodecamp/client/./src/assets/images/ribbon.svg","webpack://@freecodecamp/client/./src/client-only-routes/show-project-links.tsx","webpack://@freecodecamp/client/./src/client-only-routes/show-certification.tsx","webpack://@freecodecamp/client/./src/pages/certification.tsx"],"sourcesContent":["import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function (key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\nexport default createFind;","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\nexport default find;","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\nexport default findIndex;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Modal } from '@freecodecamp/ui';\n\nimport { CompletedChallenge } from '../../redux/prop-types';\nimport SolutionViewer from './solution-viewer';\n\ntype ProjectModalProps = {\n  challengeFiles: CompletedChallenge['challengeFiles'] | null;\n  handleSolutionModalHide: () => void;\n  isOpen: boolean;\n  projectTitle: string;\n  solution?: string;\n};\n\nconst ProjectModal = ({\n  isOpen,\n  projectTitle,\n  challengeFiles,\n  solution,\n  handleSolutionModalHide\n}: ProjectModalProps): JSX.Element => {\n  const { t } = useTranslation();\n  return (\n    <Modal onClose={handleSolutionModalHide} open={isOpen} size='large'>\n      <Modal.Header showCloseButton={true} closeButtonClassNames='close'>\n        {t('settings.labels.solution-for', { projectTitle })}\n      </Modal.Header>\n      <Modal.Body alignment='left'>\n        <SolutionViewer challengeFiles={challengeFiles} solution={solution} />\n      </Modal.Body>\n      <Modal.Footer alignment='end'>\n        <Button\n          data-cy='solution-viewer-close-btn'\n          onClick={handleSolutionModalHide}\n        >\n          {t('buttons.close')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nProjectModal.displayName = 'ProjectModal';\n\nexport default ProjectModal;\n","import Prism from 'prismjs';\nimport React from 'react';\nimport { Panel } from '@freecodecamp/ui';\n\nimport type { ChallengeFile } from '../../redux/prop-types';\n\ntype Props = {\n  challengeFiles: Solution[] | null;\n  solution?: string;\n};\ntype Solution = Pick<ChallengeFile, 'ext' | 'contents' | 'fileKey'>;\n\nfunction SolutionViewer({ challengeFiles, solution }: Props): JSX.Element {\n  const isLegacy = !challengeFiles || !challengeFiles.length;\n  const solutions = isLegacy\n    ? [\n        {\n          ext: 'js',\n          contents:\n            solution ?? '// The solution is not available for this project',\n          fileKey: 'script.js'\n        }\n      ]\n    : challengeFiles;\n\n  return (\n    <>\n      {solutions.map(({ fileKey, ext, contents }) => (\n        <Panel variant='primary' className='solution-viewer' key={fileKey}>\n          <Panel.Heading>{ext.toUpperCase()}</Panel.Heading>\n          <Panel.Body>\n            <pre>\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: Prism.highlight(\n                    contents.trim(),\n                    Prism.languages[ext],\n                    ext\n                  )\n                }}\n              />\n            </pre>\n          </Panel.Body>\n        </Panel>\n      ))}\n    </>\n  );\n}\nexport default SolutionViewer;\n","import { navigate } from 'gatsby';\nimport type { RouteComponentProps } from '@reach/router';\n\nconst createRedirect =\n  (to = '/'): ((_props: RouteComponentProps) => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;\n","import { withPrefix } from 'gatsby';\nimport createRedirect from './create-redirect';\n\nexport default createRedirect(withPrefix('/'));\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n(qrcodegen2 => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION) throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7) throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++) row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl) {\n      let minVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let maxVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;\n      let mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n      let boostEcl = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7) throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion;; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion) throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8) ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData()) bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17) appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length) dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0)) this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++) rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++) this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++) this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++) this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++) this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7) return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++) rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size) this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++) this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl)) throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks) dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks) result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8)) throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6) right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7) throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert) this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5) result += _QrCode.PENALTY_N1;else if (runX > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor) result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5) result += _QrCode.PENALTY_N1;else if (runY > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor) result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1]) result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules) dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1) return [];else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step) result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION) throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7) result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255) throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++) result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length) result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map(_ => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0) throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0) currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [[-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [[-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25], [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49], [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68], [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0) throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--) bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond) throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0) throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data) appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits)) throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length;) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text)) throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length) appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\") return [];else if (_QrSegment.isNumeric(text)) return [_QrSegment.makeNumeric(text)];else if (_QrSegment.isAlphanumeric(text)) return [_QrSegment.makeAlphanumeric(text)];else return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0) throw new RangeError(\"ECI assignment value out of range\");else if (assignVal < 1 << 7) appendBits(assignVal, 8, bb);else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits) return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\") result.push(str.charCodeAt(i));else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n(qrcodegen2 => {\n  let QrCode;\n  (QrCode2 => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n(qrcodegen2 => {\n  let QrSegment;\n  (QrSegment2 => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules) {\n  let margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const ops = [];\n  modules.forEach(function (row, y) {\n    let start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = {\n      x: floorX,\n      y: floorY,\n      w: ceilW,\n      h: ceilH\n    };\n  }\n  return {\n    x,\n    y,\n    h,\n    w,\n    excavation\n  };\n}\nvar SUPPORTS_PATH2D = function () {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props,\n    {\n      value,\n      size = DEFAULT_SIZE,\n      level = DEFAULT_LEVEL,\n      bgColor = DEFAULT_BGCOLOR,\n      fgColor = DEFAULT_FGCOLOR,\n      includeMargin = DEFAULT_INCLUDEMARGIN,\n      style,\n      imageSettings\n    } = _a,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"style\", \"imageSettings\"]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({\n    height: size,\n    width: size\n  }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: {\n        display: \"none\"\n      },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props,\n    {\n      value,\n      size = DEFAULT_SIZE,\n      level = DEFAULT_LEVEL,\n      bgColor = DEFAULT_BGCOLOR,\n      fgColor = DEFAULT_FGCOLOR,\n      includeMargin = DEFAULT_INCLUDEMARGIN,\n      imageSettings\n    } = _a,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"imageSettings\"]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n  }, otherProps), /* @__PURE__ */React.createElement(\"path\", {\n    fill: bgColor,\n    d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\"),\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = props => {\n  const _a = props,\n    {\n      renderAs\n    } = _a,\n    otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport { QRCodeCanvas, QRCodeSVG, QRCode as default };","export default __webpack_public_path__ + \"static/ribbon-f4307732bf92855b215beb8c6dbde5cc.svg\";","import { find } from 'lodash-es';\nimport React, { useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Table } from '@freecodecamp/ui';\n\nimport { Link, Spacer } from '../components/helpers';\nimport ProjectModal from '../components/SolutionViewer/project-modal';\nimport type { CompletedChallenge, User } from '../redux/prop-types';\nimport {\n  certsToProjects,\n  type CertTitle\n} from '../../config/cert-and-project-map';\n\nimport { SolutionDisplayWidget } from '../components/solution-display-widget';\nimport ProjectPreviewModal from '../templates/Challenges/components/project-preview-modal';\nimport ExamResultsModal from '../components/SolutionViewer/exam-results-modal';\n\nimport { openModal } from '../templates/Challenges/redux/actions';\n\nimport { regeneratePathAndHistory } from '../../../shared/utils/polyvinyl';\nimport '../components/layouts/project-links.css';\ninterface ShowProjectLinksProps {\n  certName: string;\n  name: string;\n  user: User;\n  openModal: (arg: string) => void;\n}\n\ntype SolutionState = {\n  projectTitle: string;\n  completedChallenge: CompletedChallenge | null;\n  showCode: boolean;\n};\n\nconst initSolutionState: SolutionState = {\n  projectTitle: '',\n  completedChallenge: null,\n  showCode: false\n};\n\nconst mapDispatchToProps = {\n  openModal\n};\n\nconst ShowProjectLinks = (props: ShowProjectLinksProps): JSX.Element => {\n  const [solutionState, setSolutionState] = useState(initSolutionState);\n\n  const handleSolutionModalHide = () => setSolutionState(initSolutionState);\n\n  const { t } = useTranslation();\n\n  const getProjectSolution = (projectId: string, projectTitle: string) => {\n    const {\n      user: { completedChallenges },\n      openModal\n    } = props;\n    const completedProject = find(\n      completedChallenges,\n      ({ id }) => projectId === id\n    );\n\n    if (!completedProject) {\n      return null;\n    }\n\n    const showUserCode = () =>\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: true\n      });\n\n    const showProjectPreview = () => {\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: false\n      });\n      openModal('projectPreview');\n    };\n\n    const showExamResults = () => {\n      setSolutionState({\n        projectTitle,\n        completedChallenge: completedProject,\n        showCode: false\n      });\n      openModal('examResults');\n    };\n\n    return (\n      <SolutionDisplayWidget\n        completedChallenge={completedProject}\n        projectTitle={projectTitle}\n        displayContext='certification'\n        showUserCode={showUserCode}\n        showProjectPreview={showProjectPreview}\n        showExamResults={showExamResults}\n      ></SolutionDisplayWidget>\n    );\n  };\n\n  const ProjectsFor = ({ certName }: { certName: CertTitle }) => {\n    if (certName === 'Legacy Full Stack') {\n      const certs = [\n        { title: 'Responsive Web Design' },\n        { title: 'Legacy JavaScript Algorithms and Data Structures' },\n        { title: 'Front End Development Libraries' },\n        { title: 'Data Visualization' },\n        { title: 'Back End Development and APIs' },\n        { title: 'Legacy Information Security and Quality Assurance' }\n      ] as const;\n\n      return (\n        <>\n          {certs.map((cert, ind) => {\n            const projects = certsToProjects[cert.title];\n            const { certSlug } = projects[0];\n            const certLocation = `/certification/${username}/${certSlug}`;\n            return (\n              <tr key={ind}>\n                <td>\n                  <Link className='project-link' to={certLocation} external>\n                    {t(`certification.title.${cert.title}`, cert.title)}\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </>\n      );\n    }\n\n    const projects = certsToProjects[certName];\n    return (\n      <>\n        {projects.map(({ link, title, id }) => (\n          <tr key={id}>\n            <td>\n              <Link to={link}>\n                {t(`certification.projects.title.${title}`, title)}\n              </Link>\n            </td>\n            <td colSpan={2}>{getProjectSolution(id, title)}</td>\n          </tr>\n        ))}\n      </>\n    );\n  };\n\n  const {\n    certName,\n    name,\n    user: { username }\n  } = props;\n  const { completedChallenge, showCode, projectTitle } = solutionState;\n  const examResults = completedChallenge?.examResults;\n\n  const getCertHeading = (certName: string) => {\n    if (certName == 'Legacy Full Stack') {\n      return 'certification.project.heading-legacy-full-stack';\n    } else if (certName == 'Foundational C# with Microsoft') {\n      return 'certification.project.heading-exam';\n    } else {\n      return 'certification.project.heading';\n    }\n  };\n\n  const challengeData: CompletedChallenge | null = completedChallenge\n    ? {\n        ...completedChallenge,\n        // // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        challengeFiles:\n          completedChallenge?.challengeFiles?.map(regeneratePathAndHistory) ??\n          null\n      }\n    : null;\n\n  const isCertName = (maybeCertName: string): maybeCertName is CertTitle => {\n    if (maybeCertName === 'Legacy Full Stack') return true;\n    return maybeCertName in certsToProjects;\n  };\n  if (!isCertName(certName)) return <div> Unknown Certification</div>;\n\n  return (\n    <div data-cy='solution-widget' data-playwright-test-label='project-links'>\n      {t(getCertHeading(certName), { user: name })}\n      <Spacer size='medium' />\n      <Table striped>\n        <thead>\n          <tr>\n            <th>\n              <span className='sr-only'>{t('settings.headings.certs')}</span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <ProjectsFor certName={certName} />\n        </tbody>\n      </Table>\n      <Spacer size='medium' />\n      <ProjectModal\n        challengeFiles={completedChallenge?.challengeFiles ?? null}\n        handleSolutionModalHide={handleSolutionModalHide}\n        isOpen={showCode}\n        projectTitle={projectTitle}\n        // 'solution' is theoretically never 'null', if it a JsAlgoData cert\n        // which is the only time we use the modal\n        solution={completedChallenge?.solution as undefined | string}\n      />\n      <ProjectPreviewModal\n        challengeData={challengeData}\n        closeText={t('buttons.close')}\n        previewTitle={projectTitle}\n        showProjectPreview={true}\n      />\n      <ExamResultsModal projectTitle={projectTitle} examResults={examResults} />\n\n      {certName != 'Foundational C# with Microsoft' && (\n        <Trans i18nKey='certification.project.footnote'>\n          If you suspect that any of these projects violate the{' '}\n          <a\n            href='https://www.freecodecamp.org/news/academic-honesty-policy/'\n            rel='noreferrer'\n            target='_blank'\n          >\n            academic honesty policy\n          </a>\n          , please{' '}\n          <a\n            href={`/user/${username}/report-user`}\n            rel='noreferrer'\n            target='_blank'\n          >\n            report this to our team\n          </a>\n          .\n        </Trans>\n      )}\n    </div>\n  );\n};\n\nShowProjectLinks.displayName = 'ShowProjectLinks';\n\nexport default connect(null, mapDispatchToProps)(ShowProjectLinks);\n","import { isEmpty } from 'lodash-es';\nimport { QRCodeSVG } from 'qrcode.react';\nimport React, { useEffect, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Image, Button } from '@freecodecamp/ui';\n\nimport envData from '../../config/env.json';\nimport { getLangCode } from '../../../shared/config/i18n';\nimport FreeCodeCampLogo from '../assets/icons/freecodecamp';\nimport MicrosoftLogo from '../assets/icons/microsoft-logo';\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { Loader, Spacer } from '../components/helpers';\nimport RedirectHome from '../components/redirect-home';\nimport { Themes } from '../components/settings/theme';\nimport { showCert, fetchProfileForUser } from '../redux/actions';\nimport {\n  showCertSelector,\n  showCertFetchStateSelector,\n  userFetchStateSelector,\n  isDonatingSelector,\n  userByNameSelector,\n  usernameSelector\n} from '../redux/selectors';\nimport { UserFetchState, User } from '../redux/prop-types';\nimport { liveCerts } from '../../config/cert-and-project-map';\nimport {\n  certificateMissingErrorMessage,\n  reallyWeirdErrorMessage,\n  standardErrorMessage\n} from '../utils/error-messages';\n\nimport { PaymentContext } from '../../../shared/config/donation-settings';\nimport ribbon from '../assets/images/ribbon.svg';\nimport {\n  CertSlug,\n  certTypes,\n  certTypeTitleMap,\n  linkedInCredentialIds\n} from '../../../shared/config/certification-settings';\nimport MultiTierDonationForm from '../components/Donation/multi-tier-donation-form';\nimport callGA from '../analytics/call-ga';\nimport ShowProjectLinks from './show-project-links';\n\nconst { clientLocale } = envData;\n\nconst localeCode = getLangCode(clientLocale);\ntype Cert = {\n  username: string;\n  name: string;\n  certSlug: CertSlug;\n  certTitle: string;\n  completionTime: number;\n  date: number;\n};\ninterface ShowCertificationProps {\n  cert: Cert;\n  certDashedName: string;\n  certSlug: string;\n  createFlashMessage: typeof createFlashMessage;\n  fetchProfileForUser: (username: string) => void;\n  fetchState: {\n    pending: boolean;\n    complete: boolean;\n    errored: boolean;\n  };\n  isDonating: boolean;\n  isValidCert: boolean;\n  location: {\n    pathname: string;\n  };\n  showCert: ({\n    username,\n    certSlug\n  }: {\n    username: string;\n    certSlug: string;\n  }) => void;\n  signedInUserName: string;\n  user: User;\n  userFetchState: UserFetchState;\n  userFullName: string;\n  username: string;\n}\n\nconst requestedUserSelector = (state: unknown, { username = '' }) =>\n  userByNameSelector(username.toLowerCase())(state) as User;\n\nconst mapStateToProps = (state: unknown, props: ShowCertificationProps) => {\n  const isValidCert = liveCerts.some(\n    ({ certSlug }) => String(certSlug) === props.certSlug\n  );\n  return createSelector(\n    showCertSelector,\n    showCertFetchStateSelector,\n    usernameSelector,\n    userFetchStateSelector,\n    isDonatingSelector,\n    requestedUserSelector,\n    (\n      cert: Cert,\n      fetchState: ShowCertificationProps['fetchState'],\n      signedInUserName: string,\n      userFetchState: UserFetchState,\n      isDonating: boolean,\n      user: User\n    ) => ({\n      cert,\n      fetchState,\n      isValidCert,\n      signedInUserName,\n      userFetchState,\n      isDonating,\n      user\n    })\n  );\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    { createFlashMessage, showCert, fetchProfileForUser },\n    dispatch\n  );\n\nconst ShowCertification = (props: ShowCertificationProps): JSX.Element => {\n  const { t } = useTranslation();\n  const [isDonationSubmitted, setIsDonationSubmitted] = useState(false);\n  const [isDonationDisplayed, setIsDonationDisplayed] = useState(false);\n  const [isDonationClosed, setIsDonationClosed] = useState(false);\n\n  useEffect(() => {\n    const { username, certSlug, isValidCert, showCert } = props;\n    if (isValidCert) {\n      showCert({ username, certSlug });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const {\n      userFetchState: { complete: userComplete },\n      signedInUserName,\n      isDonating,\n      cert: { username = '' },\n      fetchProfileForUser,\n      user\n    } = props;\n\n    if (!signedInUserName || signedInUserName !== username) {\n      if (isEmpty(user) && username) {\n        fetchProfileForUser(username);\n      }\n    }\n\n    if (\n      !isDonationDisplayed &&\n      userComplete &&\n      signedInUserName &&\n      signedInUserName === username &&\n      !isDonating\n    ) {\n      setIsDonationDisplayed(true);\n      callGA({\n        event: 'donation_view',\n        action: 'Displayed Certificate Donation'\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    isDonationDisplayed,\n    props.userFetchState,\n    props.signedInUserName,\n    props.isDonating,\n    props.cert\n  ]);\n\n  const hideDonationSection = () => {\n    setIsDonationDisplayed(false);\n    setIsDonationClosed(true);\n  };\n\n  const handleProcessing = () => {\n    setIsDonationSubmitted(true);\n  };\n\n  const {\n    cert,\n    fetchState,\n    isValidCert,\n    createFlashMessage,\n    signedInUserName,\n    location: { pathname }\n  } = props;\n  const { pending, complete, errored } = fetchState;\n\n  useEffect(() => {\n    if (!isValidCert) {\n      createFlashMessage(certificateMissingErrorMessage);\n    } else if (!pending && errored) {\n      createFlashMessage(standardErrorMessage);\n    } else if (!pending && !complete && !errored) {\n      createFlashMessage(reallyWeirdErrorMessage);\n    }\n  }, [isValidCert, createFlashMessage, pending, errored, complete]);\n\n  if (!isValidCert) {\n    return <RedirectHome />;\n  }\n\n  if (pending) {\n    return <Loader fullScreen={true} />;\n  }\n\n  if (errored || !complete) {\n    return <RedirectHome />;\n  }\n\n  const {\n    date,\n    name: userFullName = null,\n    username,\n    certTitle,\n    certSlug,\n    completionTime\n  } = cert;\n\n  const { user } = props;\n\n  const displayName = userFullName ?? username;\n\n  const certDate = new Date(date);\n  const certYear = certDate.getFullYear();\n  const certMonth = certDate.getMonth();\n  const certURL = `https://freecodecamp.org${pathname}`;\n\n  const donationCloseBtn = (\n    <div>\n      <Button\n        block={true}\n        size='small'\n        variant='primary'\n        onClick={hideDonationSection}\n      >\n        {t('buttons.close')}\n      </Button>\n    </div>\n  );\n\n  const donationSection = (\n    <div\n      className='donation-section'\n      data-playwright-test-label='donation-section'\n    >\n      <Spacer size='large' />\n      {!isDonationSubmitted && (\n        <Row>\n          <Col lg={8} lgOffset={2} sm={10} smOffset={1} xs={12}>\n            <p data-playwright-test-label='donation-text'>\n              {t('donate.only-you')}\n            </p>\n          </Col>\n        </Row>\n      )}\n      <Row>\n        <Col\n          lg={8}\n          lgOffset={2}\n          sm={10}\n          smOffset={1}\n          xs={12}\n          data-playwright-test-label='donation-form'\n        >\n          <MultiTierDonationForm\n            defaultTheme={Themes.Default}\n            handleProcessing={handleProcessing}\n            isMinimalForm={true}\n            paymentContext={PaymentContext.Certificate}\n          />\n        </Col>\n      </Row>\n      <Spacer size='medium' />\n      <Row>\n        <Col sm={4} smOffset={4} xs={6} xsOffset={3}>\n          {isDonationSubmitted && donationCloseBtn}\n        </Col>\n      </Row>\n      <Spacer size='large' />\n    </div>\n  );\n\n  const urlFriendlyCertTitle = encodeURIComponent(certTitle);\n  const linkedInCredentialId = `${username}-${linkedInCredentialIds[certSlug]}`;\n\n  const shareCertBtns = (\n    <Row className='text-center'>\n      <Col xs={12}>\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://www.linkedin.com/profile/add?startTask=CERTIFICATION_NAME&name=${urlFriendlyCertTitle}&organizationId=4831032&issueYear=${certYear}&issueMonth=${\n            certMonth + 1\n          }&certUrl=${certURL}&certId=${linkedInCredentialId}`}\n          target='_blank'\n          data-playwright-test-label='linkedin-share-btn'\n        >\n          {t('profile.add-linkedin')}\n        </Button>\n        <Spacer size='medium' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`https://twitter.com/intent/tweet?text=${t('profile.tweet', {\n            certTitle: urlFriendlyCertTitle,\n            certURL: certURL\n          })}`}\n          target='_blank'\n          data-playwright-test-label='twitter-share-btn'\n        >\n          {t('profile.add-twitter')}\n        </Button>\n      </Col>\n      <Spacer size='large' />\n    </Row>\n  );\n\n  const isMicrosoftCert =\n    certTitle === certTypeTitleMap[certTypes.foundationalCSharpV8];\n\n  return (\n    <Container className='certificate-outer-wrapper'>\n      {isDonationDisplayed && !isDonationClosed ? donationSection : ''}\n      <div\n        className='certificate-wrapper'\n        data-playwright-test-label='cert-wrapper'\n      >\n        <div className='certification-namespace'>\n          <header data-playwright-test-label='cert-header'>\n            <Col sm={12}>\n              {isMicrosoftCert ? (\n                <>\n                  <div\n                    className='dual-logo fcc-logo'\n                    data-playwright-test-label='cert-fcc-logo'\n                  >\n                    <FreeCodeCampLogo aria-hidden='true' />\n                  </div>\n                  <div\n                    className='dual-logo ms-logo'\n                    data-playwright-test-label='cert-microsoft-logo'\n                  >\n                    <MicrosoftLogo aria-hidden='true' />\n                  </div>\n                </>\n              ) : (\n                <div\n                  className='logo'\n                  data-playwright-test-label='cert-fcc-logo'\n                >\n                  <FreeCodeCampLogo aria-hidden='true' />\n                </div>\n              )}\n            </Col>\n          </header>\n          <main className='information'>\n            <div\n              className='information-container'\n              data-playwright-test-label='cert-info-container'\n            >\n              <Trans\n                i18nKey={\n                  isMicrosoftCert\n                    ? 'certification.fulltextNoHours'\n                    : 'certification.fulltext'\n                }\n                title={certTitle}\n              >\n                <h3>placeholder</h3>\n                <h1>\n                  <strong>{{ user: displayName }}</strong>\n                </h1>\n                <h3 data-playwright-test-label='successful-completion'>\n                  placeholder\n                </h3>\n                <h1 data-playwright-test-label='certification-title'>\n                  <strong>\n                    {{\n                      title: t(`certification.title.${certTitle}`, certTitle)\n                    }}\n                  </strong>\n                </h1>\n                <h4\n                  data-cy={'issue-date'}\n                  data-playwright-test-label='issue-date'\n                >\n                  {{\n                    time: certDate.toLocaleString([localeCode, 'en-US'], {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric'\n                    })\n                  }}\n                </h4>\n                <h5 style={{ marginTop: '15px' }}>{{ completionTime }}</h5>\n              </Trans>\n            </div>\n          </main>\n          <footer data-playwright-test-label='cert-footer'>\n            <div className='signatures'>\n              {isMicrosoftCert ? (\n                <>\n                  <div>\n                    <Image\n                      data-cy='quincy-signature'\n                      data-playwright-test-label='quincy-signature'\n                      alt=\"Quincy Larson's Signature\"\n                      src={\n                        'https://cdn.freecodecamp.org' +\n                        '/platform/english/images/quincy-larson-signature.svg'\n                      }\n                    />\n                    <p className='signee-name'>\n                      <strong>Quincy Larson</strong>\n                    </p>\n                    <p className='signee-role'>\n                      {t('certification.executive')}\n                    </p>\n                  </div>\n                  <div className='microsoft-signature'>\n                    <Image\n                      data-cy='microsoft-signature'\n                      data-playwright-test-label='microsoft-signature'\n                      alt=\"Julia Liusons's Signature\"\n                      src={\n                        'https://cdn.freecodecamp.org' +\n                        '/platform/english/images/microsoft-signature.png'\n                      }\n                    />\n                    <div className='signature-underline'></div>\n                    <p className='signee-name'>\n                      <strong>Julia Liuson</strong>\n                    </p>\n                    <p className='signee-role'>\n                      {t('certification.ms-president')}\n                    </p>\n                  </div>\n                </>\n              ) : (\n                <div>\n                  <Image\n                    data-cy='quincy-signature'\n                    data-playwright-test-label='quincy-signature'\n                    alt=\"Quincy Larson's Signature\"\n                    src={\n                      'https://cdn.freecodecamp.org' +\n                      '/platform/english/images/quincy-larson-signature.svg'\n                    }\n                  />\n                  <p className='signee-name'>\n                    <strong>Quincy Larson</strong>\n                  </p>\n                  <p className='signee-role'>{t('certification.executive')}</p>\n                </div>\n              )}\n            </div>\n            {!isMicrosoftCert && (\n              <>\n                <span className='ribbon-wrap'>\n                  <Image alt='' className='ribbon' src={ribbon} />\n                </span>\n                <span className='qr-wrap'>\n                  <QRCodeSVG className='qr-code' value={certURL} />\n                </span>\n              </>\n            )}\n            <Row>\n              <p className='verify'>\n                {t('certification.verify')}\n                <br />\n                {certURL}\n              </p>\n            </Row>\n          </footer>\n        </div>\n      </div>\n      <div\n        className='row certificate-links'\n        data-playwright-test-label='cert-links'\n      >\n        <Spacer size='large' />\n        {signedInUserName === username ? shareCertBtns : ''}\n        <Spacer size='large' />\n        <ShowProjectLinks certName={certTitle} name={displayName} user={user} />\n        <Spacer size='large' />\n      </div>\n    </Container>\n  );\n};\n\nShowCertification.displayName = 'ShowCertification';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowCertification);\n","import { Router } from '@reach/router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowCertification from '../client-only-routes/show-certification';\nimport RedirectHome from '../components/redirect-home';\n\nimport './certification.css';\n\nfunction Certification(): JSX.Element {\n  return (\n    <Router>\n      <ShowCertification\n        // Error from installing @types/react-helmet and @types/react-redux\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        path={withPrefix('/certification/:username/:certSlug')}\n      />\n\n      <RedirectHome default />\n    </Router>\n  );\n}\n\nexport default Certification;\n"],"names":["findIndexFunc","collection","predicate","fromIndex","iterable","Object","isArrayLike","iteratee","keys","key","index","undefined","nativeMax","Math","max","array","length","ProjectModal","_ref","isOpen","projectTitle","challengeFiles","solution","handleSolutionModalHide","t","useTranslation","React","Modal","onClose","open","size","Header","showCloseButton","closeButtonClassNames","Body","alignment","SolutionViewer","Footer","Button","onClick","displayName","solutions","ext","contents","fileKey","map","_ref2","Panel","variant","className","Heading","toUpperCase","dangerouslySetInnerHTML","__html","Prism","trim","to","window","navigate","createRedirect","withPrefix","qrcodegen","__defProp","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","encodeText","text","ecl","segs","QrSegment","makeSegments","encodeSegments","encodeBinary","data","seg","makeBytes","dataUsedBits","minVersion","arguments","maxVersion","boostEcl","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","forEach","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","makeNumeric","digits","isNumeric","parseInt","substr","NUMERIC","makeAlphanumeric","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","toUtf8ByteArray","makeEci","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","Path2D","addPath","e","QRCodeSVG","props","_a","level","bgColor","fgColor","otherProps","calculatedImageSettings","image","xlinkHref","src","preserveAspectRatio","fgPath","viewBox","fill","d","shapeRendering","initSolutionState","completedChallenge","showCode","mapDispatchToProps","openModal","ShowProjectLinks","_completedChallenge$c","_completedChallenge$c2","_completedChallenge$c3","solutionState","setSolutionState","useState","ProjectsFor","certName","certs","title","cert","ind","projects","certsToProjects","certSlug","certLocation","username","Link","external","_ref3","link","id","colSpan","getProjectSolution","projectId","user","completedChallenges","completedProject","_find","SolutionDisplayWidget","displayContext","showUserCode","showProjectPreview","showExamResults","name","examResults","challengeData","regeneratePathAndHistory","maybeCertName","getCertHeading","Spacer","Table","striped","ProjectPreviewModal","closeText","previewTitle","ExamResultsModal","Trans","i18nKey","href","rel","connect","clientLocale","envData","localeCode","getLangCode","requestedUserSelector","state","userByNameSelector","toLowerCase","ShowCertification","isDonationSubmitted","setIsDonationSubmitted","isDonationDisplayed","setIsDonationDisplayed","isDonationClosed","setIsDonationClosed","useEffect","isValidCert","showCert","userFetchState","complete","userComplete","signedInUserName","isDonating","fetchProfileForUser","_isEmpty","callGA","event","action","fetchState","createFlashMessage","location","pathname","pending","errored","standardErrorMessage","reallyWeirdErrorMessage","certificateMissingErrorMessage","RedirectHome","Loader","fullScreen","date","userFullName","certTitle","completionTime","certDate","Date","certYear","getFullYear","certMonth","getMonth","certURL","donationCloseBtn","hideDonationSection","donationSection","Row","Col","lg","lgOffset","sm","smOffset","xs","MultiTierDonationForm","defaultTheme","Themes","Default","handleProcessing","isMinimalForm","paymentContext","PaymentContext","Certificate","xsOffset","urlFriendlyCertTitle","encodeURIComponent","linkedInCredentialId","linkedInCredentialIds","shareCertBtns","isMicrosoftCert","certTypeTitleMap","certTypes","foundationalCSharpV8","Container","FreeCodeCampLogo","MicrosoftLogo","time","toLocaleString","year","month","day","style","marginTop","Image","alt","ribbon","mapStateToProps","liveCerts","some","String","createSelector","showCertSelector","showCertFetchStateSelector","usernameSelector","userFetchStateSelector","isDonatingSelector","dispatch","bindActionCreators","Router","path","default"],"sourceRoot":""}