{"version":3,"file":"sass-compile-bbcc8067ab61b7969f72.js","mappings":"MAQA,MAAMA,EACJC,KAEGD,EAAIE,SACNF,EAAIE,OAAqB,CACxBC,gBAAiB,SAAUC,GACzB,IAAK,IAAIC,EAAI,EAAGC,EAAIF,EAAMG,OAAQF,EAAIC,EAAGD,IACvCD,EAAMC,GAAKG,KAAKC,MAAsB,IAAhBD,KAAKE,UAE7B,OAAON,CACT,IAIJJ,EAAIW,cAAc,oBAElBX,EAAIY,UAAYC,IACd,MAAMC,EAAgBD,EAAEC,KACxBd,EAAIe,KAAKC,QAAQF,GAAOG,IACA,IAAlBA,EAAOC,OACTlB,EAAImB,YAAYF,EAAOG,MAEvBpB,EAAImB,YAAY,CACdE,KAAM,QACNP,KAAM,CAAEQ,QAASL,EAAOM,YAE5B,GACA,EAGJvB,EAAImB,YAAY,CAAEE,KAAM,iB","sources":["webpack://@freecodecamp/browser-scripts/./sass-compile.ts"],"sourcesContent":["// work around for SASS error in Edge\n// https://github.com/medialize/sass.js/issues/96#issuecomment-424386171\ninterface WorkerWithSass extends Worker {\n  Sass: {\n    compile(data: unknown, callback: unknown): void;\n  };\n}\n\nconst ctx: WorkerWithSass & typeof globalThis =\n  self as unknown as WorkerWithSass & typeof globalThis;\n\nif (!ctx.crypto) {\n  (ctx.crypto as unknown) = {\n    getRandomValues: function (array: number[]) {\n      for (let i = 0, l = array.length; i < l; i++) {\n        array[i] = Math.floor(Math.random() * 256);\n      }\n      return array;\n    }\n  };\n}\n\nctx.importScripts('/js/sass.sync.js');\n\nctx.onmessage = e => {\n  const data: unknown = e.data;\n  ctx.Sass.compile(data, (result: Record<string, unknown>) => {\n    if (result.status === 0) {\n      ctx.postMessage(result.text);\n    } else {\n      ctx.postMessage({\n        type: 'error',\n        data: { message: result.formatted }\n      });\n    }\n  });\n};\n\nctx.postMessage({ type: 'contentLoaded' });\n"],"names":["ctx","self","crypto","getRandomValues","array","i","l","length","Math","floor","random","importScripts","onmessage","e","data","Sass","compile","result","status","postMessage","text","type","message","formatted"],"sourceRoot":""}