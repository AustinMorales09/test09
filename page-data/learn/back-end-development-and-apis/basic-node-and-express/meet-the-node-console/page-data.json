{
    "componentChunkName": "component---src-templates-challenges-projects-backend-show-tsx",
    "path": "/learn/back-end-development-and-apis/basic-node-and-express/meet-the-node-console",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":301515,"title":"Meet the Node console","description":"<section id=\"description\">\n<p>Working on these challenges will involve you writing your code using one of the following methods:</p>\n<ul>\n<li>Clone <a href=\"https://github.com/freeCodeCamp/boilerplate-express/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">this GitHub repo</a> and complete these challenges locally.</li>\n<li>Use <a href=\"https://gitpod.io/?autostart=true#https://github.com/freeCodeCamp/boilerplate-express/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">our Gitpod starter project</a> to complete these challenges.</li>\n<li>Use a site builder of your choice to complete the project. Be sure to incorporate all the files from our GitHub repo.</li>\n</ul>\n<p>During the development process, it is important to be able to check whatâ€™s going on in your code.</p>\n<p>Node is just a JavaScript environment. Like client side JavaScript, you can use the console to display useful debug information. On your local machine, you would see console output in a terminal. On Gitpod, a terminal is open at the bottom of the editor by default.</p>\n<p>We recommend to keep the terminal open while working at these challenges. By reading the output in the terminal, you can see any errors that may occur.</p>\n<p>The server must be restarted after making changes to its files.</p>\n<p>You can stop the server from the terminal using <code>Ctrl + C</code> and start it using Node directly (<code>node mainEntryFile.js</code>) or using a run script in the <code>package.json</code> file with <code>npm run</code>.</p>\n<p>For example, the <code>\"start\": \"node server.js\"</code> script would be run from the terminal using <code>npm run start</code>.</p>\n<p>To implement server auto restarting on file save Node provides the <code>--watch</code> flag you can add to your start script <code>\"start\": \"node --watch server.js\"</code> or you can install an npm package like <code>nodemon</code>. We will leave this to you as an exercise.</p>\n</section>","instructions":"<section id=\"instructions\">\n<p>Modify the <code>myApp.js</code> file to log \"Hello World\" to the console.</p>\n</section>","challengeType":2,"helpCategory":"JavaScript","superBlock":"back-end-development-and-apis","block":"basic-node-and-express","translationPending":false,"fields":{"blockName":"basic-node-and-express","slug":"/learn/back-end-development-and-apis/basic-node-and-express/meet-the-node-console","tests":[{"text":"<p><code>\"Hello World\"</code> should be in the console</p>","testString":"(getUserInput) =>\n  $.get(getUserInput('url') + '/_api/hello-console').then(\n    (data) => {\n      assert.isTrue(data.passed, '\"Hello World\" is not in the server console');\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/back-end-development-and-apis/#basic-node-and-express","dashedName":"meet-the-node-console","certification":"back-end-development-and-apis","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"back-end-development-and-apis","block":"basic-node-and-express","isFirstStep":true,"template":null,"required":[],"nextBlock":"basic-node-and-express","nextChallengePath":"/learn/back-end-development-and-apis/basic-node-and-express/start-a-working-express-server","prevChallengePath":"/learn/back-end-development-and-apis/managing-packages-with-npm/remove-a-package-from-your-dependencies","id":"587d7fb0367417b2b2512bed"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":2,"challengeFiles":[]}},"slug":"/learn/back-end-development-and-apis/basic-node-and-express/meet-the-node-console"}},
    "staticQueryHashes": ["1800977889","4268002518"]}