{
    "componentChunkName": "component---src-templates-challenges-projects-backend-show-tsx",
    "path": "/learn/back-end-development-and-apis/mongodb-and-mongoose/create-many-records-with-model-create",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":301537,"title":"Create Many Records with model.create()","description":"<section id=\"description\">\n<p>Sometimes you need to create many instances of your models, e.g. when seeding a database with initial data. <code>Model.create()</code> takes an array of objects like <code>[{name: 'John', ...}, {...}, ...]</code> as the first argument, and saves them all in the db.</p>\n</section>","instructions":"<section id=\"instructions\">\n<p>Modify the <code>createManyPeople</code> function to create many people using <code>Model.create()</code> with the argument <code>arrayOfPeople</code>.</p>\n<p><strong>Note:</strong> You can reuse the model you instantiated in the previous exercise.</p>\n</section>","challengeType":2,"helpCategory":"JavaScript","superBlock":"back-end-development-and-apis","block":"mongodb-and-mongoose","translationPending":false,"fields":{"blockName":"mongodb-and-mongoose","slug":"/learn/back-end-development-and-apis/mongodb-and-mongoose/create-many-records-with-model-create","tests":[{"text":"<p>Creating many db items at once should succeed</p>","testString":"(getUserInput) =>\n  $.ajax({\n    url: getUserInput('url') + '/_api/create-many-people',\n    type: 'POST',\n    contentType: 'application/json',\n    data: JSON.stringify([\n      { name: 'John', age: 24, favoriteFoods: ['pizza', 'salad'] },\n      { name: 'Mary', age: 21, favoriteFoods: ['onions', 'chicken'] }\n    ])\n  }).then(\n    (data) => {\n      assert.isArray(data, 'the response should be an array');\n      assert.equal(\n        data.length,\n        2,\n        'the response does not contain the expected number of items'\n      );\n      assert.equal(data[0].name, 'John', 'The first item is not correct');\n      assert.equal(\n        data[0].__v,\n        0,\n        'The first item should be not previously edited'\n      );\n      assert.equal(data[1].name, 'Mary', 'The second item is not correct');\n      assert.equal(\n        data[1].__v,\n        0,\n        'The second item should be not previously edited'\n      );\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/back-end-development-and-apis/#mongodb-and-mongoose","dashedName":"create-many-records-with-model-create","certification":"back-end-development-and-apis","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"back-end-development-and-apis","block":"mongodb-and-mongoose","isFirstStep":false,"template":null,"required":[],"nextBlock":"mongodb-and-mongoose","nextChallengePath":"/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-find-to-search-your-database","prevChallengePath":"/learn/back-end-development-and-apis/mongodb-and-mongoose/create-and-save-a-record-of-a-model","id":"587d7fb7367417b2b2512c0a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":2,"challengeFiles":[]}},"slug":"/learn/back-end-development-and-apis/mongodb-and-mongoose/create-many-records-with-model-create"}},
    "staticQueryHashes": ["1800977889","4268002518"]}