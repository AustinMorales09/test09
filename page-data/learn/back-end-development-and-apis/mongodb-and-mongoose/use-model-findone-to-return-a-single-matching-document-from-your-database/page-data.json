{
    "componentChunkName": "component---src-templates-challenges-projects-backend-show-tsx",
    "path": "/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-findone-to-return-a-single-matching-document-from-your-database",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":301545,"title":"Use model.findOne() to Return a Single Matching Document from Your Database","description":"<section id=\"description\">\n<p><code>Model.findOne()</code> behaves like <code>Model.find()</code>, but it returns only one document (not an array), even if there are multiple items. It is especially useful when searching by properties that you have declared as unique.</p>\n</section>","instructions":"<section id=\"instructions\">\n<p>Modify the <code>findOneByFood</code> function to find just one person which has a certain food in the person's favorites, using <code>Model.findOne() -> Person</code>. Use the function argument <code>food</code> as search key.</p>\n</section>","challengeType":2,"helpCategory":"JavaScript","superBlock":"back-end-development-and-apis","block":"mongodb-and-mongoose","translationPending":false,"fields":{"blockName":"mongodb-and-mongoose","slug":"/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-findone-to-return-a-single-matching-document-from-your-database","tests":[{"text":"<p>Find one item should succeed</p>","testString":"(getUserInput) =>\n  $.post(getUserInput('url') + '/_api/find-one-by-food', {\n    name: 'Gary',\n    age: 46,\n    favoriteFoods: ['chicken salad']\n  }).then(\n    (data) => {\n      assert.equal(data.name, 'Gary', 'item.name is not what expected');\n      assert.deepEqual(\n        data.favoriteFoods,\n        ['chicken salad'],\n        'item.favoriteFoods is not what expected'\n      );\n      assert.equal(data.__v, 0, 'The item should be not previously edited');\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/back-end-development-and-apis/#mongodb-and-mongoose","dashedName":"use-model-findone-to-return-a-single-matching-document-from-your-database","certification":"back-end-development-and-apis","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"back-end-development-and-apis","block":"mongodb-and-mongoose","isFirstStep":false,"template":null,"required":[],"nextBlock":"mongodb-and-mongoose","nextChallengePath":"/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-findbyid-to-search-your-database-by-id","prevChallengePath":"/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-find-to-search-your-database","id":"587d7fb7367417b2b2512c0c"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":2,"challengeFiles":[]}},"slug":"/learn/back-end-development-and-apis/mongodb-and-mongoose/use-model-findone-to-return-a-single-matching-document-from-your-database"}},
    "staticQueryHashes": ["1800977889","4268002518"]}