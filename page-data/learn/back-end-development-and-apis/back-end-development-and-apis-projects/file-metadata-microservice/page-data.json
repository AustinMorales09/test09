{
    "componentChunkName": "component---src-templates-challenges-projects-backend-show-tsx",
    "path": "/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":301506,"title":"File Metadata Microservice","description":"<section id=\"description\">\n<p>Build a full stack JavaScript app that is functionally similar to this: <a href=\"https://file-metadata-microservice.freecodecamp.rocks\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://file-metadata-microservice.freecodecamp.rocks</a>. Working on this project will involve you writing your code using one of the following methods:</p>\n<ul>\n<li>Clone <a href=\"https://github.com/freeCodeCamp/boilerplate-project-filemetadata/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">this GitHub repo</a> and complete your project locally.</li>\n<li>Use <a href=\"https://gitpod.io/?autostart=true#https://github.com/freeCodeCamp/boilerplate-project-filemetadata/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">our Gitpod starter project</a> to complete your project.</li>\n<li>Use a site builder of your choice to complete the project. Be sure to incorporate all the files from our GitHub repo.</li>\n</ul>\n</section>","instructions":"<section id=\"instructions\">\n<p><strong>HINT:</strong> You can use the <code>multer</code> npm package to handle file uploading.</p>\n</section>","challengeType":4,"helpCategory":"JavaScript","superBlock":"back-end-development-and-apis","block":"back-end-development-and-apis-projects","translationPending":false,"fields":{"blockName":"back-end-development-and-apis-projects","slug":"/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice","tests":[{"text":"<p>You should provide your own project, not the example URL.</p>","testString":"(getUserInput) => {\n  assert(\n    !/.*\\/file-metadata-microservice\\.freecodecamp\\.rocks/.test(\n      getUserInput('url')\n    )\n  );\n};"},{"text":"<p>You can submit a form that includes a file upload.</p>","testString":"async (getUserInput) => {\n  const site = await fetch(getUserInput('url'));\n  const data = await site.text();\n  const doc = new DOMParser().parseFromString(data, 'text/html');\n  assert(doc.querySelector('input[type=\"file\"]'));\n};"},{"text":"<p>The form file input field has the <code>name</code> attribute set to <code>upfile</code>.</p>","testString":"async (getUserInput) => {\n  const site = await fetch(getUserInput('url'));\n  const data = await site.text();\n  const doc = new DOMParser().parseFromString(data, 'text/html');\n  assert(doc.querySelector('input[name=\"upfile\"]'));\n};"},{"text":"<p>When you submit a file, you receive the file <code>name</code>, <code>type</code>, and <code>size</code> in bytes within the JSON response.</p>","testString":"async (getUserInput) => {\n  const formData = new FormData();\n  const fileData = await fetch(\n    'https://cdn.freecodecamp.org/weather-icons/01d.png'\n  );\n  const file = await fileData.blob();\n  formData.append('upfile', file, 'icon');\n  const data = await fetch(getUserInput('url') + '/api/fileanalyse', {\n    method: 'POST',\n    body: formData\n  });\n  const parsed = await data.json();\n  assert.property(parsed, 'size');\n  assert.equal(parsed.name, 'icon');\n  assert.equal(parsed.type, 'image/png');\n};"}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/back-end-development-and-apis/#back-end-development-and-apis-projects","dashedName":"file-metadata-microservice","certification":"back-end-development-and-apis","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"back-end-development-and-apis","block":"back-end-development-and-apis-projects","isFirstStep":false,"template":null,"required":[],"nextBlock":"quality-assurance-and-testing-with-chai","nextChallengePath":"/learn/quality-assurance/quality-assurance-and-testing-with-chai/learn-how-javascript-assertions-work","prevChallengePath":"/learn/back-end-development-and-apis/back-end-development-and-apis-projects/exercise-tracker","id":"bd7158d8c443edefaeb5bd0f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":4,"challengeFiles":[]}},"slug":"/learn/back-end-development-and-apis/back-end-development-and-apis-projects/file-metadata-microservice"}},
    "staticQueryHashes": ["1800977889","4268002518"]}