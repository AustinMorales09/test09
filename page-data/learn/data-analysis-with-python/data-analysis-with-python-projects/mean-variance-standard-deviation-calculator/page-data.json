{
    "componentChunkName": "component---src-templates-challenges-projects-frontend-show-tsx",
    "path": "/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":462366,"title":"Mean-Variance-Standard Deviation Calculator","description":"<section id=\"description\">\n<p>You will be <a href=\"https://gitpod.io/?autostart=true#https://github.com/freeCodeCamp/boilerplate-mean-variance-standard-deviation-calculator/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">working on this project with our Gitpod starter code</a>.</p>\n<p>We are still developing the interactive instructional part of the Python curriculum. For now, here are some videos on the freeCodeCamp.org YouTube channel that will teach you everything you need to know to complete this project:</p>\n<ul>\n<li>\n<p><a href=\"https://www.freecodecamp.org/news/python-for-everybody/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Python for Everybody Video Course</a> (14 hours)</p>\n</li>\n<li>\n<p><a href=\"https://www.freecodecamp.org/news/how-to-analyze-data-with-python-pandas/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">How to Analyze Data with Python Pandas</a> (10 hours)</p>\n</li>\n</ul>\n</section>","instructions":"<section id=\"instructions\">\n<p>Create a function named <code>calculate()</code> in <code>mean_var_std.py</code> that uses Numpy to output the mean, variance, standard deviation, max, min, and sum of the rows, columns, and elements in a 3 x 3 matrix.</p>\n<p>The input of the function should be a list containing 9 digits. The function should convert the list into a 3 x 3 Numpy array, and then return a dictionary containing the mean, variance, standard deviation, max, min, and sum along both axes and for the flattened matrix.</p>\n<p>The returned dictionary should follow this format:</p>\n<pre><code class=\"language-py\">{\n  'mean': [axis1, axis2, flattened],\n  'variance': [axis1, axis2, flattened],\n  'standard deviation': [axis1, axis2, flattened],\n  'max': [axis1, axis2, flattened],\n  'min': [axis1, axis2, flattened],\n  'sum': [axis1, axis2, flattened]\n}\n</code></pre>\n<p>If a list containing less than 9 elements is passed into the function, it should raise a <code>ValueError</code> exception with the message: \"List must contain nine numbers.\" The values in the returned dictionary should be lists and not Numpy arrays.</p>\n<p>For example, <code>calculate([0,1,2,3,4,5,6,7,8])</code> should return:</p>\n<pre><code class=\"language-py\">{\n  'mean': [[3.0, 4.0, 5.0], [1.0, 4.0, 7.0], 4.0],\n  'variance': [[6.0, 6.0, 6.0], [0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 6.666666666666667],\n  'standard deviation': [[2.449489742783178, 2.449489742783178, 2.449489742783178], [0.816496580927726, 0.816496580927726, 0.816496580927726], 2.581988897471611],\n  'max': [[6, 7, 8], [2, 5, 8], 8],\n  'min': [[0, 1, 2], [0, 3, 6], 0],\n  'sum': [[9, 12, 15], [3, 12, 21], 36]\n}\n</code></pre>\n<h2>Development</h2>\n<p>Write your code in <code>mean_var_std.py</code>. For development, you can use <code>main.py</code> to test your code.</p>\n<h2>Testing</h2>\n<p>The unit tests for this project are in <code>test_module.py</code>. We imported the tests from <code>test_module.py</code> to <code>main.py</code> for your convenience.</p>\n<h2>Submitting</h2>\n<p>Copy your project's URL and submit it to freeCodeCamp.</p>\n</section>","challengeType":10,"helpCategory":"Python","superBlock":"data-analysis-with-python","block":"data-analysis-with-python-projects","translationPending":false,"fields":{"blockName":"data-analysis-with-python-projects","slug":"/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator","tests":[{"text":"<p>It should pass all Python tests.</p>","testString":""}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-analysis-with-python/#data-analysis-with-python-projects","dashedName":"mean-variance-standard-deviation-calculator","certification":"data-analysis-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-analysis-with-python","block":"data-analysis-with-python-projects","isFirstStep":true,"template":null,"required":[],"nextBlock":"data-analysis-with-python-projects","nextChallengePath":"/learn/data-analysis-with-python/data-analysis-with-python-projects/demographic-data-analyzer","prevChallengePath":"/learn/data-analysis-with-python/numpy/loading-data-and-advanced-indexing","id":"5e46f7e5ac417301a38fb928"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":10,"challengeFiles":[]}},"slug":"/learn/data-analysis-with-python/data-analysis-with-python-projects/mean-variance-standard-deviation-calculator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}