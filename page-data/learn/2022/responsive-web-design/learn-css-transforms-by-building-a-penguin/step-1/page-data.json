{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-1",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-css-transforms-by-building-a-penguin","title":"Step 1","description":"<section id=\"description\">\n<p>You will be building a happy Flappy Penguin, and further exploring CSS transforms and animations in the process.</p>\n<p>Begin with your basic HTML boilerplate. Include the <code>DOCTYPE</code> declaration, <code>html</code> element with a language set to English, the appropriate <code>meta</code> tags, a <code>head</code>, <code>body</code>, and <code>title</code> element. Also, link your stylesheet to the page.</p>\n</section>","id":"619665c9abd72906f3ad30f9","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"HTML-CSS","videoUrl":null,"superBlock":"2022/responsive-web-design","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-css-transforms-by-building-a-penguin","slug":"/learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-1","tests":[{"text":"<p>Your code should have a <code>&#x3C;!DOCTYPE html></code> declaration.</p>","testString":"assert(code.match(/<!DOCTYPE html>/i));"},{"text":"<p>Your code should have an <code>html</code> element.</p>","testString":"assert.equal(document.querySelectorAll('html')?.length, 1);"},{"text":"<p>Your <code>html</code> element should have an opening tag with a <code>lang</code> attribute of <code>en</code>.</p>","testString":"assert(code.match(/<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/gi));"},{"text":"<p>Your <code>html</code> element should have a closing tag.</p>","testString":"assert(code.match(/<\\/html\\s*>/gi));"},{"text":"<p>Your code should have a <code>head</code> element within the <code>html</code> element.</p>","testString":"assert.equal(document.querySelectorAll('head')?.length, 1);"},{"text":"<p>Your code should have a <code>body</code> element within the <code>html</code> element.</p>","testString":"assert.equal(document.querySelectorAll('body')?.length, 1);"},{"text":"<p>Your <code>head</code> element should come before your <code>body</code> element.</p>","testString":"assert.equal(document.querySelector('body')?.previousElementSibling?.tagName, 'HEAD');"},{"text":"<p>You should have two <code>meta</code> elements.</p>","testString":"const meta = document.querySelectorAll('meta');\nassert.equal(meta?.length, 2);"},{"text":"<p>One <code>meta</code> element should have a <code>name</code> set to <code>viewport</code>, and <code>content</code> set to <code>width=device-width, initial-scale=1.0</code>.</p>","testString":"const meta = [...document.querySelectorAll('meta')];\nconst target = meta?.find(m => m?.getAttribute('name') === 'viewport' && m?.getAttribute('content') === 'width=device-width, initial-scale=1.0' && !m?.getAttribute('charset'));\nassert.exists(target);"},{"text":"<p>The other <code>meta</code> element should have the <code>charset</code> attribute set to <code>UTF-8</code>.</p>","testString":"const meta = [...document.querySelectorAll('meta')];\nconst target = meta?.find(m => !m?.getAttribute('name') && !m?.getAttribute('content') && m?.getAttribute('charset')?.toLowerCase() === 'utf-8');\nassert.exists(target);"},{"text":"<p>Your code should have a <code>title</code> element.</p>","testString":"const title = document.querySelector('title');\nassert.exists(title);"},{"text":"<p>Your <code>title</code> should have some text.</p>","testString":"const title = document.querySelector('title');\nassert.isAtLeast(title?.textContent?.length, 1);"},{"text":"<p>Your code should have a <code>link</code> element.</p>","testString":"assert.exists(document.querySelector('link'));"},{"text":"<p>Your <code>link</code> element should be within your <code>head</code> element.</p>","testString":"assert(code.match(/<head>[\\w\\W\\s]*<link[\\w\\W\\s]*\\/?>[\\w\\W\\s]*<\\/head>/i));"},{"text":"<p>Your <code>link</code> element should have a <code>rel</code> attribute with the value <code>stylesheet</code>.</p>","testString":"const link_element = document.querySelector('link');\nconst rel = link_element.getAttribute(\"rel\");\nassert.equal(rel, \"stylesheet\");"},{"text":"<p>Your <code>link</code> element should have an <code>href</code> attribute with the value <code>styles.css</code>.</p>","testString":"const link = document.querySelector('link');\nassert.equal(link.dataset.href, \"styles.css\");"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"","head":"","tail":"","editableRegionBoundaries":[0,2],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/2022/responsive-web-design/#learn-css-transforms-by-building-a-penguin","dashedName":"step-1","certification":"responsive-web-design","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"2022/responsive-web-design","block":"learn-css-transforms-by-building-a-penguin","isFirstStep":true,"template":null,"required":[],"nextBlock":"learn-css-transforms-by-building-a-penguin","nextChallengePath":"/learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-2","prevChallengePath":"/learn/2022/responsive-web-design/learn-css-animation-by-building-a-ferris-wheel/step-29","id":"619665c9abd72906f3ad30f9"},"projectPreview":{"showProjectPreview":true,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n    <title>Penguin</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n\n  <body>\n    <div class=\"left-mountain\"></div>\n    <div class=\"back-mountain\"></div>\n    <div class=\"sun\"></div>\n    <div class=\"penguin\">\n      <div class=\"penguin-head\">\n        <div class=\"face left\"></div>\n        <div class=\"face right\"></div>\n        <div class=\"chin\"></div>\n        <div class=\"eye left\">\n          <div class=\"eye-lid\"></div>\n        </div>\n        <div class=\"eye right\">\n          <div class=\"eye-lid\"></div>\n        </div>\n        <div class=\"blush left\"></div>\n        <div class=\"blush right\"></div>\n        <div class=\"beak top\"></div>\n        <div class=\"beak bottom\"></div>\n      </div>\n      <div class=\"shirt\">\n        <div>ðŸ’œ</div>\n        <p>I CSS</p>\n      </div> \n      <div class=\"penguin-body\">\n        <div class=\"arm left\"></div>\n        <div class=\"arm right\"></div>\n        <div class=\"foot left\"></div>\n        <div class=\"foot right\"></div>\n      </div>\n    </div>\n\n    <div class=\"ground\"></div>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":":root {\n  --penguin-face: white;\n  --penguin-picorna: orange;\n  --penguin-skin: gray;\n}\n\nbody {\n  background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n}\n\n.left-mountain {\n  width: 300px;\n  height: 300px;\n  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));\n  position: absolute;\n  transform: skew(0deg, 44deg);\n  z-index: 2;\n  margin-top: 100px;\n}\n\n.back-mountain {\n  width: 300px;\n  height: 300px;\n  background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));\n  position: absolute;\n  z-index: 1;\n  transform: rotate(45deg);\n  left: 110px;\n  top: 225px;\n}\n\n.sun {\n  width: 200px;\n  height: 200px;\n  background-color: yellow;\n  position: absolute;\n  border-radius: 50%;\n  top: -75px;\n  right: -75px;\n}\n\n.penguin {\n  width: 300px;\n  height: 300px;\n  margin: auto;\n  margin-top: 75px;\n  z-index: 4;\n  position: relative;\n  transition: transform 1s ease-in-out 0ms;\n}\n\n.penguin * {\n  position: absolute;\n}\n\n.penguin:active {\n  transform: scale(1.5);\n  cursor: not-allowed;\n}\n\n.penguin-head {\n  width: 50%;\n  height: 45%;\n  background: linear-gradient(\n    45deg,\n    var(--penguin-skin),\n    rgb(239, 240, 228)\n  );\n  border-radius: 70% 70% 65% 65%;\n  top: 10%;\n  left: 25%;\n  z-index: 1;\n}\n\n.face {\n  width: 60%;\n  height: 70%;\n  background-color: var(--penguin-face);\n  border-radius: 70% 70% 60% 60%;\n  top: 15%;\n}\n\n.face.left {\n  left: 5%;\n}\n\n.face.right {\n  right: 5%;\n}\n\n.chin {\n  width: 90%;\n  height: 70%;\n  background-color: var(--penguin-face);\n  top: 25%;\n  left: 5%;\n  border-radius: 70% 70% 100% 100%;\n}\n\n.eye {\n  width: 15%;\n  height: 17%;\n  background-color: black;\n  top: 45%;\n  border-radius: 50%;\n}\n\n.eye.left {\n  left: 25%;\n}\n\n.eye.right {\n  right: 25%;\n}\n\n.eye-lid {\n  width: 150%;\n  height: 100%;\n  background-color: var(--penguin-face);\n  top: 25%;\n  left: -23%;\n  border-radius: 50%;\n}\n\n.blush {\n  width: 15%;\n  height: 10%;\n  background-color: pink;\n  top: 65%;\n  border-radius: 50%;\n}\n\n.blush.left {\n  left: 15%;\n}\n\n.blush.right {\n  right: 15%;\n}\n\n.beak {\n  height: 10%;\n  background-color: var(--penguin-picorna);\n  border-radius: 50%;\n}\n\n.beak.top {\n  width: 20%;\n  top: 60%;\n  left: 40%;\n}\n\n.beak.bottom {\n  width: 16%;\n  top: 65%;\n  left: 42%;\n}\n\n.shirt {\n  font: bold 25px Helvetica, sans-serif;\n  top: 165px;\n  left: 127.5px;\n  z-index: 1;\n  color: #6a6969;\n}\n\n.shirt div {\n  font-weight:  initial;\n  top: 22.5px;\n  left: 12px;\n}\n\n.penguin-body {\n  width: 53%;\n  height: 45%;\n  background: linear-gradient(\n    45deg,\n    rgb(134, 133, 133) 0%,\n    rgb(234, 231, 231) 25%,\n    white 67%\n  );\n  border-radius: 80% 80% 100% 100%;\n  top: 40%;\n  left: 23.5%;\n}\n\n.penguin-body::before {\n  content: \"\";\n  position: absolute;\n  width: 50%;\n  height: 45%;\n  background-color: var(--penguin-skin);\n  top: 10%;\n  left: 25%;\n  border-radius: 0% 0% 100% 100%;\n  opacity: 70%;\n}\n\n.arm {\n  width: 30%;\n  height: 60%;\n  background: linear-gradient(\n    90deg,\n    var(--penguin-skin),\n    rgb(209, 210, 199)\n  );\n  border-radius: 30% 30% 30% 120%;\n  z-index: -1;\n}\n\n.arm.left {\n  top: 35%;\n  left: 5%;\n  transform-origin: top left; \n  transform: rotate(130deg) scaleX(-1);\n  animation: 3s linear infinite wave;\n}\n\n.arm.right {\n  top: 0%;\n  right: -5%;\n  transform: rotate(-45deg);\n}\n\n@keyframes wave {\n  10% {\n    transform: rotate(110deg) scaleX(-1);\n  }\n  20% {\n    transform: rotate(130deg) scaleX(-1);\n  }\n  30% {\n    transform: rotate(110deg) scaleX(-1);\n  }\n  40% {\n    transform: rotate(130deg) scaleX(-1);\n  }\n}\n\n.foot {\n  width:  15%;\n  height: 30%;\n  background-color: var(--penguin-picorna);\n  top: 85%;\n  border-radius: 50%;\n  z-index: -1;\n}\n\n.foot.left {\n  left: 25%;\n  transform: rotate(80deg);\n}\n\n.foot.right {\n  right: 25%;\n  transform: rotate(-80deg);\n}\n\n.ground {\n  width: 100vw;\n  height: calc(100vh - 300px);\n  background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));\n  z-index: 3;\n  position: absolute;\n  margin-top: -58px;\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"}]}},"slug":"/learn/2022/responsive-web-design/learn-css-transforms-by-building-a-penguin/step-1"}},
    "staticQueryHashes": ["1800977889","4268002518"]}