{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page",
    "result": {"data":{"challengeNode":{"challenge":{"block":"build-a-product-landing-page-project","title":"Build a Product Landing Page","description":"<section id=\"description\">\n<p><strong>Objective:</strong> Build an app that is functionally similar to <a href=\"https://product-landing-page.freecodecamp.rocks\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://product-landing-page.freecodecamp.rocks</a>. <strong>Do not copy this demo project</strong>.</p>\n<p><strong>User Stories:</strong></p>\n<ol>\n<li>Your product landing page should have a <code>header</code> element with a corresponding <code>id=\"header\"</code></li>\n<li>You can see an image within the <code>header</code> element with a corresponding <code>id=\"header-img\"</code> (A logo would make a good image here)</li>\n<li>Within the <code>#header</code> element, you can see a <code>nav</code> element with a corresponding <code>id=\"nav-bar\"</code></li>\n<li>You can see at least three clickable elements inside the <code>nav</code> element, each with the class <code>nav-link</code></li>\n<li>When you click a <code>.nav-link</code> button in the <code>nav</code> element, you are taken to the corresponding section of the landing page</li>\n<li>You can watch an embedded product video with <code>id=\"video\"</code></li>\n<li>Your landing page has a <code>form</code> element with a corresponding <code>id=\"form\"</code></li>\n<li>Within the form, there is an <code>input</code> field with <code>id=\"email\"</code> where you can enter an email address</li>\n<li>The <code>#email</code> input field should have placeholder text to let users know what the field is for</li>\n<li>The <code>#email</code> input field uses HTML5 validation to confirm that the entered text is an email address</li>\n<li>Within the form, there is a submit <code>input</code> with a corresponding <code>id=\"submit\"</code></li>\n<li>When you click the <code>#submit</code> element, the email is submitted to a static page (use this mock URL: <code>https://www.freecodecamp.com/email-submit</code>)</li>\n<li>The navbar should always be at the top of the viewport</li>\n<li>Your product landing page should have at least one media query</li>\n<li>Your product landing page should utilize CSS flexbox at least once</li>\n</ol>\n<p>Fulfill the user stories and pass all the tests below to complete this project. Give it your own personal style. Happy Coding!</p>\n<p><strong>Note:</strong> Be sure to add <code>&#x3C;link rel=\"stylesheet\" href=\"styles.css\"></code> in your HTML to link your stylesheet and apply your CSS</p>\n</section>","id":"587d78af367417b2b2512b04","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":14,"helpCategory":"HTML-CSS","videoUrl":null,"superBlock":"2022/responsive-web-design","translationPending":false,"forumTopicId":301144,"fields":{"blockName":"build-a-product-landing-page-project","slug":"/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page","tests":[{"text":"<p>You should have a <code>header</code> element with an <code>id</code> of <code>header</code>.</p>","testString":"const el = document.getElementById('header')\nassert(!!el && el.tagName === 'HEADER')"},{"text":"<p>You should have an <code>img</code> element with an <code>id</code> of <code>header-img</code>.</p>","testString":"const el = document.getElementById('header-img')\nassert(!!el && el.tagName === 'IMG')"},{"text":"<p>Your <code>#header-img</code> should be a descendant of the <code>#header</code>.</p>","testString":"const els = document.querySelectorAll('#header #header-img')\nassert(els.length > 0)"},{"text":"<p>Your <code>#header-img</code> should have a <code>src</code> attribute.</p>","testString":"const el = document.getElementById('header-img')\nassert(!!el && !!el.src)"},{"text":"<p>Your <code>#header-img</code>â€™s <code>src</code> value should be a valid URL (starts with <code>http</code>).</p>","testString":"const el = document.getElementById('header-img')\nassert(!!el && /^http/.test(el.src))"},{"text":"<p>You should have a <code>nav</code> element with an <code>id</code> of <code>nav-bar</code>.</p>","testString":"const el = document.getElementById('nav-bar')\nassert(!!el && el.tagName === 'NAV')"},{"text":"<p>Your <code>#nav-bar</code> should be a descendant of the <code>#header</code>.</p>","testString":"const els = document.querySelectorAll('#header #nav-bar')\nassert(els.length > 0)"},{"text":"<p>You should have at least 3 <code>.nav-link</code> elements within the <code>#nav-bar</code>.</p>","testString":"const els = document.querySelectorAll('#nav-bar .nav-link')\nassert(els.length >= 3)"},{"text":"<p>Each <code>.nav-link</code> element should have an <code>href</code> attribute.</p>","testString":"const els = document.querySelectorAll('.nav-link')\nels.forEach(el => {\n  if (!el.href) assert(false)\n})\nassert(els.length > 0)"},{"text":"<p>Each <code>.nav-link</code> element should link to a corresponding element on the landing page (has an <code>href</code> with a value of another element's id. e.g. <code>#footer</code>).</p>","testString":"const els = document.querySelectorAll('.nav-link')\nels.forEach(el => {\n  const linkDestination = el.getAttribute('href').slice(1)\n  if (!document.getElementById(linkDestination)) assert(false)\n})\nassert(els.length > 0)"},{"text":"<p>You should have a <code>video</code> or <code>iframe</code> element with an <code>id</code> of <code>video</code>.</p>","testString":"const el = document.getElementById('video')\nassert(!!el && (el.tagName === 'VIDEO' || el.tagName === 'IFRAME'))"},{"text":"<p>Your <code>#video</code> should have a <code>src</code> attribute.</p>","testString":"let el = document.getElementById('video')\nconst sourceNode = el.children;\nlet sourceElement = null;\nif (sourceNode.length) {\n  sourceElement = [...video.children].filter(el => el.localName === 'source')[0];\n}\nif (sourceElement) {\n  el = sourceElement;\n}\nassert(el.hasAttribute('src'));"},{"text":"<p>You should have a <code>form</code> element with an <code>id</code> of <code>form</code>.</p>","testString":"const el = document.getElementById('form')\nassert(!!el && el.tagName === 'FORM')"},{"text":"<p>You should have an <code>input</code> element with an <code>id</code> of <code>email</code>.</p>","testString":"const el = document.getElementById('email')\nassert(!!el && el.tagName === 'INPUT')"},{"text":"<p>Your <code>#email</code> should be a descendant of the <code>#form</code>.</p>","testString":"const els = document.querySelectorAll('#form #email')\nassert(els.length > 0)"},{"text":"<p>Your <code>#email</code> should have the <code>placeholder</code> attribute with placeholder text.</p>","testString":"const el = document.getElementById('email')\nassert(!!el && !!el.placeholder && el.placeholder.length > 0)"},{"text":"<p>Your <code>#email</code> should use HTML5 validation by setting its <code>type</code> to <code>email</code>.</p>","testString":"const el = document.getElementById('email')\nassert(!!el && el.type === 'email')"},{"text":"<p>You should have an <code>input</code> element with an <code>id</code> of <code>submit</code>.</p>","testString":"const el = document.getElementById('submit')\nassert(!!el && el.tagName === 'INPUT')"},{"text":"<p>Your <code>#submit</code> should be a descendant of the <code>#form</code>.</p>","testString":"const els = document.querySelectorAll('#form #submit')\nassert(els.length > 0)"},{"text":"<p>Your <code>#submit</code> should have a <code>type</code> of <code>submit</code>.</p>","testString":"const el = document.getElementById('submit')\nassert(!!el && el.type === 'submit')"},{"text":"<p>Your <code>#form</code> should have an <code>action</code> attribute of <code>https://www.freecodecamp.com/email-submit</code>.</p>","testString":"const el = document.getElementById('form')\nassert(!!el && el.action === 'https://www.freecodecamp.com/email-submit')"},{"text":"<p>Your <code>#email</code> should have a <code>name</code> attribute of <code>email</code>.</p>","testString":"const el = document.getElementById('email')\nassert(!!el && el.name === 'email')"},{"text":"<p>Your <code>#nav-bar</code> should always be at the top of the viewport.</p>","testString":"(async () => {\n  const timeout = (milliseconds) => new Promise((resolve) => setTimeout(resolve, milliseconds));\n\n  const header = document.getElementById('header');\n  const headerChildren = header.children;\n  const navbarCandidates = [header, ...headerChildren];\n  \n  // Return smallest top position of all navbar candidates\n  const getNavbarPosition = (candidates = []) => {\n    return candidates.reduce(\n      (min, candidate) =>\n        Math.min(min, Math.abs(candidate?.getBoundingClientRect().top)),\n      Infinity\n    );\n  };\n  assert.approximately(\n    getNavbarPosition(navbarCandidates),\n    0,\n    15,\n    '#header or one of its children should be at the top of the viewport '\n  );\n\n  window.scroll(0, 500);\n  await timeout(1);\n\n  assert.approximately(\n    getNavbarPosition(navbarCandidates),\n    0,\n    15,\n    '#header or one of its children should be at the top of the ' +\n      'viewport even after scrolling '\n  );\n    \n  window.scroll(0, 0);\n})();"},{"text":"<p>Your Product Landing Page should use at least one media query.</p>","testString":"const htmlSourceAttr = Array.from(document.querySelectorAll('source')).map(el => el.getAttribute('media'))\nconst cssCheck = new __helpers.CSSHelp(document).getCSSRules('media')\nassert(cssCheck.length > 0 || htmlSourceAttr.length > 0);"},{"text":"<p>Your Product Landing Page should use CSS Flexbox at least once.</p>","testString":"const hasFlex = (rule) => [\"flex\", \"inline-flex\"].includes(rule.style?.display)\nconst stylesheet = new __helpers.CSSHelp(document).getStyleSheet()\nconst cssRules = new __helpers.CSSHelp(document).styleSheetToCssRulesArray(stylesheet)\nconst mediaRules = new __helpers.CSSHelp(document).getCSSRules('media')\nconst usesFlex = cssRules.find(rule => hasFlex(rule))\nconst usesFlexMedia = mediaRules.find(mediaRule => {\n  return [...mediaRule.cssRules].find(rule => hasFlex(rule))\n})\nassert(usesFlex || usesFlexMedia)"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/2022/responsive-web-design/#build-a-product-landing-page-project","dashedName":"build-a-product-landing-page","certification":"responsive-web-design","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"2022/responsive-web-design","block":"build-a-product-landing-page-project","isFirstStep":true,"template":null,"required":[],"nextBlock":"learn-css-animation-by-building-a-ferris-wheel","nextChallengePath":"/learn/2022/responsive-web-design/learn-css-animation-by-building-a-ferris-wheel/step-1","prevChallengePath":"/learn/2022/responsive-web-design/learn-css-grid-by-building-a-magazine/step-80","id":"587d78af367417b2b2512b04"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":14,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n    <title>Product Landing Page</title>\n  </head>\n  <body>\n    <header id=\"header\">\n      <nav id=\"nav-bar\">\n        <img\n          id=\"header-img\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/3/39/Pokeball.PNG\"\n          max-height=\"50px\"\n        />\n        <a href=\"#Features\" class=\"nav-link\">Features</a> |\n        <a href=\"#Video\" class=\"nav-link\">See our facility!</a> |\n        <a href=\"#Pricing\" class=\"nav-link\">Purchase</a>\n        <hr />\n      </nav>\n    </header>\n    <main>\n      <h1>\n        Pokemon Daycare Service\n      </h1>\n      <section id=\"Features\">\n        <h2>What we offer</h2>\n        <div class=\"flex-here\">\n          <div class=\"flex-left\">\n            <img\n              id=\"bullet\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/3/39/Pokeball.PNG\"\n              max-height=\"25px\"\n            />\n          </div>\n          <div class=\"flex-right\">Guaranteed friendly and loving staff!</div>\n        </div>\n        <div class=\"flex-here\">\n          <div class=\"flex-left\">\n            <img\n              id=\"bullet\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/3/39/Pokeball.PNG\"\n              max-height=\"25px\"\n            />\n          </div>\n          <div class=\"flex-right\">\n            Comfortable environment for Pokemon to explore and play!\n          </div>\n        </div>\n        <div class=\"flex-here\">\n          <div class=\"flex-left\">\n            <img\n              id=\"bullet\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/3/39/Pokeball.PNG\"\n              max-height=\"25px\"\n            />\n          </div>\n          <div class=\"flex-right\">\n            Multiple membership plans to fit your lifestyle!\n          </div>\n        </div>\n      </section>\n      <section id=\"Video\">\n        <h2>Check us out!</h2>\n        A sneak peek into our facility:\n        <br />\n        <iframe\n          id=\"video\"\n          width=\"520\"\n          height=\"347\"\n          src=\"https://www.youtube.com/embed/Nw-ksH2r6AQ\"\n          frameborder=\"0\"\n          allowfullscreen\n          alt=\"A video tour of our facility\"\n        >\n        </iframe>\n      </section>\n      <section id=\"Pricing\">\n        <h2>Membership Plans</h2>\n        <div class=\"flex-mem\">\n          <div class=\"flex-mem-box\">\n            <font size=\"+2\">Basic Membership</font><br />\n            <ul>\n              <li>One Pokemon</li>\n              <li>Food and berries provided</li>\n            </ul>\n            <em>$9.99/month</em>\n          </div>\n          <div class=\"flex-mem-box\">\n            <font size=\"+2\">Silver Membership</font><br />\n            <ul>\n              <li>Up to Three Pokemon</li>\n              <li>Food and berries provided</li>\n              <li>Grooming and accessories included</li>\n            </ul>\n            <em>$19.99/month</em>\n          </div>\n          <div class=\"flex-mem-box\">\n            <font size=\"+2\">Gold Membership</font><br />\n            <ul>\n              <li>Up to six Pokemon!</li>\n              <li>Food and berries provided</li>\n              <li>Grooming and accessories included</li>\n              <li>Personal training for each Pokemon</li>\n              <li>Breeding and egg hatching</li>\n            </ul>\n            <em>$29.99/month</em>\n          </div>\n        </div>\n      </section>\n      <form id=\"form\" action=\"https://www.freecodecamp.com/email-submit\">\n        <p>Sign up for our newsletter!</p>\n        <label for=\"email\"><p>Email:</p><input name=\"email\" id=\"email\" type=\"email\" placeholder=\"johnsmith@email.com\" required></label>\n        <input type=\"submit\" id=\"submit\">\n      </form>\n      <footer>\n        <a href=\"../\">Return to Project List</a> |\n        <a href=\"https://www.nhcarrigan.com\">Return to HomePage</a>\n      </footer>\n    </main>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":"body {\n  background-color: #3a3240;\n  color: white;\n}\nmain {\n  max-width: 750px;\n  margin: 50px auto;\n}\ninput {\n  background-color: #92869c;\n}\na:not(.nav-link) {\n  color: white;\n}\n#header-img {\n  max-height: 25px;\n}\n#nav-bar {\n  position: fixed;\n  width: 100%;\n  text-align: center;\n  top: 0%;\n  background-color: #92869c;\n}\nh1 {\n  text-align: center;\n}\nbody {\n  text-align: center;\n}\nfooter {\n  text-align: center;\n}\n#bullet {\n  max-height: 25px;\n}\n.flex-here {\n  display: flex;\n  justify-content: center;\n}\n.flex-left {\n  height: 25px;\n}\n.flex-mem {\n  display: flex;\n  justify-content: center;\n}\n.flex-mem-box {\n  background-color: #92869c;\n  border-color: black;\n  border-width: 5px;\n  border-style: solid;\n  margin: 10px;\n  padding: 10px;\n  color: black;\n}\n@media (max-width: 350px) {\n  #video {\n    width: 300;\n    height: 200;\n  }\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"}]}},"slug":"/learn/2022/responsive-web-design/build-a-product-landing-page-project/build-a-product-landing-page"}},
    "staticQueryHashes": ["1800977889","4268002518"]}