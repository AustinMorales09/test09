{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-101-to-200/problem-186-connectedness-of-a-network",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-101-to-200","title":"Problem 186: Connectedness of a network","description":"<section id=\"description\">\n<p>Here are the records from a busy telephone system with one million users:</p>\n<table>\n<thead>\n<tr>\n<th>RecNr</th>\n<th>Caller</th>\n<th>Called</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>200007</td>\n<td>100053</td>\n</tr>\n<tr>\n<td>2</td>\n<td>600183</td>\n<td>500439</td>\n</tr>\n<tr>\n<td>3</td>\n<td>600863</td>\n<td>701497</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<p>The telephone number of the caller and the called number in record $n$ are $Caller(n) = S_{2n - 1}$ and $Called(n) = S_{2n}$ where ${S}_{1,2,3,\\ldots}$ come from the \"Lagged Fibonacci Generator\":</p>\n<p>For $1 ≤ k ≤ 55$, $S_k = [100003 - 200003k + 300007{k}^3]\\;(\\text{modulo}\\;1000000)$</p>\n<p>For $56 ≤ k$, $S_k = [S_{k - 24} + S_{k - 55}]\\;(\\text{modulo}\\;1000000)$</p>\n<p>If $Caller(n) = Called(n)$ then the user is assumed to have misdialled and the call fails; otherwise the call is successful.</p>\n<p>From the start of the records, we say that any pair of users $X$ and $Y$ are friends if $X$ calls $Y$ or vice-versa. Similarly, $X$ is a friend of a friend of $Z$ if $X$ is a friend of $Y$ and $Y$ is a friend of $Z$; and so on for longer chains.</p>\n<p>The Prime Minister's phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?</p>\n</section>","id":"5900f4281000cf542c50ff39","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301822,"fields":{"blockName":"project-euler-problems-101-to-200","slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-186-connectedness-of-a-network","tests":[{"text":"<p><code>connectednessOfANetwork()</code> should return <code>2325629</code>.</p>","testString":"assert.strictEqual(connectednessOfANetwork(), 2325629);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function connectednessOfANetwork() {\n\n  return true;\n}\n\nconnectednessOfANetwork();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-101-to-200","dashedName":"problem-186-connectedness-of-a-network","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-101-to-200","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-101-to-200","nextChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-187-semiprimes","prevChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-185-number-mind","id":"5900f4281000cf542c50ff39"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-186-connectedness-of-a-network"}},
    "staticQueryHashes": ["1800977889","4268002518"]}