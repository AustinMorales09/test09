{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-101-to-200/problem-106-special-subset-sums-meta-testing",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-101-to-200","title":"Problem 106: Special subset sums: meta-testing","description":"<section id=\"description\">\n<p>Let $S(A)$ represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:</p>\n<ol>\n<li>$S(B) â‰  S(C)$; that is, sums of subsets cannot be equal.</li>\n<li>If B contains more elements than C then $S(B) > S(C)$.</li>\n</ol>\n<p>For this problem we shall assume that a given set contains n strictly increasing elements and it already satisfies the second rule.</p>\n<p>Surprisingly, out of the 25 possible subset pairs that can be obtained from a set for which n = 4, only 1 of these pairs need to be tested for equality (first rule). Similarly, when n = 7, only 70 out of the 966 subset pairs need to be tested.</p>\n<p>For n = 12, how many of the 261625 subset pairs that can be obtained need to be tested for equality?</p>\n<p><strong>Note:</strong> This problem is related to Problem 103 and Problem 105.</p>\n</section>","id":"5900f3d71000cf542c50fee9","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301730,"fields":{"blockName":"project-euler-problems-101-to-200","slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-106-special-subset-sums-meta-testing","tests":[{"text":"<p><code>subsetSumsMetaTesting()</code> should return <code>21384</code>.</p>","testString":"assert.strictEqual(subsetSumsMetaTesting(), 21384);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function subsetSumsMetaTesting() {\n\n  return true;\n}\n\nsubsetSumsMetaTesting();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-101-to-200","dashedName":"problem-106-special-subset-sums-meta-testing","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-101-to-200","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-101-to-200","nextChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-107-minimal-network","prevChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-105-special-subset-sums-testing","id":"5900f3d71000cf542c50fee9"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-106-special-subset-sums-meta-testing"}},
    "staticQueryHashes": ["1800977889","4268002518"]}