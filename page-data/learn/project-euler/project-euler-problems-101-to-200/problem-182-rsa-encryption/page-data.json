{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-101-to-200/problem-182-rsa-encryption",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-101-to-200","title":"Problem 182: RSA encryption","description":"<section id=\"description\">\n<p>The RSA encryption is based on the following procedure:</p>\n<p>Generate two distinct primes <code>p</code> and <code>q</code>.\nCompute <code>n=p*q</code> and <code>φ=(p-1)(q-1)</code>.\nFind an integer <code>e</code>, <code>1 &#x3C; e &#x3C; φ</code>, such that <code>gcd(e,φ) = 1</code></p>\n<p>A message in this system is a number in the interval <code>[0,n-1]</code>.\nA text to be encrypted is then somehow converted to messages (numbers in the interval <code>[0,n-1]</code>).\nTo encrypt the text, for each message, <code>m</code>, c=m<sup>e</sup> mod n is calculated.</p>\n<p>To decrypt the text, the following procedure is needed: calculate <code>d</code> such that <code>ed=1 mod φ</code>, then for each encrypted message, <code>c</code>, calculate m=c<sup>d</sup> mod n.</p>\n<p>There exist values of <code>e</code> and <code>m</code> such that m<sup>e</sup> mod n = m.\nWe call messages <code>m</code> for which m<sup>e</sup> mod n=m unconcealed messages.</p>\n<p>An issue when choosing <code>e</code> is that there should not be too many unconcealed messages.\nFor instance, let <code>p=19</code> and <code>q=37</code>.\nThen <code>n=19*37=703</code> and <code>φ=18*36=648</code>.\nIf we choose <code>e=181</code>, then, although <code>gcd(181,648)=1</code> it turns out that all possible messages\nm <code>(0≤m≤n-1)</code> are unconcealed when calculating m<sup>e</sup> mod n.\nFor any valid choice of <code>e</code> there exist some unconcealed messages.\nIt's important that the number of unconcealed messages is at a minimum.</p>\n<p>For any given <code>p</code> and <code>q</code>, find the sum of all values of <code>e</code>, <code>1 &#x3C; e &#x3C; φ(p,q)</code> and <code>gcd(e,φ)=1</code>, so that the number of unconcealed messages for this value of <code>e</code> is at a minimum.</p>\n</section>","id":"5900f4231000cf542c50ff35","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301818,"fields":{"blockName":"project-euler-problems-101-to-200","slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-182-rsa-encryption","tests":[{"text":"<p><code>RSAEncryption</code> should be a function.</p>","testString":"assert(typeof RSAEncryption === 'function')"},{"text":"<p><code>RSAEncryption</code> should return a number.</p>","testString":"assert.strictEqual(typeof RSAEncryption(19, 37), 'number');"},{"text":"<p><code>RSAEncryption(19, 37)</code> should return <code>17766</code>.</p>","testString":"assert.strictEqual(RSAEncryption(19, 37), 17766);"},{"text":"<p><code>RSAEncryption(283, 409)</code> should return <code>466196580</code>.</p>","testString":"assert.strictEqual(RSAEncryption(283, 409), 466196580);"},{"text":"<p><code>RSAEncryption(1009, 3643)</code> should return <code>399788195976</code>.</p>","testString":"assert.strictEqual(RSAEncryption(19, 37), 17766);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function RSAEncryption(p, q) {\n\n  return true;\n}\n\nRSAEncryption(19, 37);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-101-to-200","dashedName":"problem-182-rsa-encryption","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-101-to-200","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-101-to-200","nextChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-183-maximum-product-of-parts","prevChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-181-investigating-in-how-many-ways-objects-of-two-different-colours-can-be-grouped","id":"5900f4231000cf542c50ff35"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-182-rsa-encryption"}},
    "staticQueryHashes": ["1800977889","4268002518"]}