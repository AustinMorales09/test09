{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-101-to-200/problem-122-efficient-exponentiation",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-101-to-200","title":"Problem 122: Efficient exponentiation","description":"<section id=\"description\">\n<p>The most naive way of computing $n^{15}$ requires fourteen multiplications:</p>\n<p>$$n × n × \\ldots × n = n^{15}$$</p>\n<p>But using a \"binary\" method you can compute it in six multiplications:</p>\n<p>$$\\begin{align}\n&#x26; n × n = n^2\\\\\n&#x26; n^2 × n^2 = n^4\\\\\n&#x26; n^4 × n^4 = n^8\\\\\n&#x26; n^8 × n^4 = n^{12}\\\\\n&#x26; n^{12} × n^2 = n^{14}\\\\\n&#x26; n^{14} × n = n^{15}\n\\end{align}$$</p>\n<p>However it is yet possible to compute it in only five multiplications:</p>\n<p>$$\\begin{align}\n&#x26; n × n = n^2\\\\\n&#x26; n^2 × n = n^3\\\\\n&#x26; n^3 × n^3 = n^6\\\\\n&#x26; n^6 × n^6 = n^{12}\\\\\n&#x26; n^{12} × n^3 = n^{15}\n\\end{align}$$</p>\n<p>We shall define $m(k)$ to be the minimum number of multiplications to compute $n^k$; for example $m(15) = 5$.</p>\n<p>For $1 ≤ k ≤ 200$, find $\\sum{m(k)}$.</p>\n</section>","id":"5900f3e61000cf542c50fef9","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301749,"fields":{"blockName":"project-euler-problems-101-to-200","slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-122-efficient-exponentiation","tests":[{"text":"<p><code>efficientExponentiation()</code> should return <code>1582</code>.</p>","testString":"assert.strictEqual(efficientExponentiation(), 1582);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function efficientExponentiation() {\n\n  return true;\n}\n\nefficientExponentiation();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-101-to-200","dashedName":"problem-122-efficient-exponentiation","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-101-to-200","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-101-to-200","nextChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-123-prime-square-remainders","prevChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-121-disc-game-prize-fund","id":"5900f3e61000cf542c50fef9"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-122-efficient-exponentiation"}},
    "staticQueryHashes": ["1800977889","4268002518"]}