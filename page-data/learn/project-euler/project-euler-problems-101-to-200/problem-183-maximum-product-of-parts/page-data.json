{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-101-to-200/problem-183-maximum-product-of-parts",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-101-to-200","title":"Problem 183: Maximum product of parts","description":"<section id=\"description\">\n<p>Let $N$ be a positive integer and let $N$ be split into $k$ equal parts, $r = \\frac{N}{k}$, so that $N = r + r + \\cdots + r$.</p>\n<p>Let $P$ be the product of these parts, $P = r × r × \\cdots × r = r^k$.</p>\n<p>For example, if 11 is split into five equal parts, 11 = 2.2 + 2.2 + 2.2 + 2.2 + 2.2, then $P = {2.2}^5 = 51.53632$.</p>\n<p>Let $M(N) = P_{max}$ for a given value of $N$.</p>\n<p>It turns out that the maximum for $N = 11$ is found by splitting eleven into four equal parts which leads to $P_{max} = {(\\frac{11}{4})}^4$; that is, $M(11) = \\frac{14641}{256} = 57.19140625$, which is a terminating decimal.</p>\n<p>However, for $N = 8$ the maximum is achieved by splitting it into three equal parts, so $M(8) = \\frac{512}{27}$, which is a non-terminating decimal.</p>\n<p>Let $D(N) = N$ if $M(N)$ is a non-terminating decimal and $D(N) = -N$ if $M(N)$ is a terminating decimal.</p>\n<p>For example, $\\sum D(N)$ for $5 ≤ N ≤ 100$ is 2438.</p>\n<p>Find $\\sum D(N)$ for $5 ≤ N ≤ 10000$.</p>\n</section>","id":"5900f4231000cf542c50ff36","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301819,"fields":{"blockName":"project-euler-problems-101-to-200","slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-183-maximum-product-of-parts","tests":[{"text":"<p><code>maximumProductOfParts()</code> should return <code>48861552</code>.</p>","testString":"assert.strictEqual(maximumProductOfParts(), 48861552);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function maximumProductOfParts() {\n\n  return true;\n}\n\nmaximumProductOfParts();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-101-to-200","dashedName":"problem-183-maximum-product-of-parts","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-101-to-200","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-101-to-200","nextChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-184-triangles-containing-the-origin","prevChallengePath":"/learn/project-euler/project-euler-problems-101-to-200/problem-182-rsa-encryption","id":"5900f4231000cf542c50ff36"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-101-to-200/problem-183-maximum-product-of-parts"}},
    "staticQueryHashes": ["1800977889","4268002518"]}