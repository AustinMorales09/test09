{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-201-to-300/problem-209-circular-logic",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-201-to-300","title":"Problem 209: Circular Logic","description":"<section id=\"description\">\n<p>A $k$-input binary truth table is a map from $k$ input bits (binary digits, 0 [false] or 1 [true]) to 1 output bit. For example, the $2$-input binary truth tables for the logical $AND$ and $XOR$ functions are:</p>\n<table>\n<thead>\n<tr>\n<th>x</th>\n<th>y</th>\n<th>x AND y</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>x</th>\n<th>y</th>\n<th>x XOR y</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td>1</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<p>How many $6$-input binary truth tables, $τ$, satisfy the formula</p>\n<p>$$τ(a, b, c, d, e, f) \\; AND \\; τ(b, c, d, e, f, a \\; XOR \\; (b \\; AND \\; c)) = 0$$</p>\n<p>for all $6$-bit inputs ($a$, $b$, $c$, $d$, $e$, $f$)?</p>\n</section>","id":"5900f43e1000cf542c50ff4f","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301850,"fields":{"blockName":"project-euler-problems-201-to-300","slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-209-circular-logic","tests":[{"text":"<p><code>circularLogic()</code> should return <code>15964587728784</code>.</p>","testString":"assert.strictEqual(circularLogic(), 15964587728784);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function circularLogic() {\n\n  return true;\n}\n\ncircularLogic();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-201-to-300","dashedName":"problem-209-circular-logic","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-201-to-300","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-201-to-300","nextChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-210-obtuse-angled-triangles","prevChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-208-robot-walks","id":"5900f43e1000cf542c50ff4f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-209-circular-logic"}},
    "staticQueryHashes": ["1800977889","4268002518"]}