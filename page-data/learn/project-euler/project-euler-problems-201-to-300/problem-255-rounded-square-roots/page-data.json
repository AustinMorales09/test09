{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-201-to-300/problem-255-rounded-square-roots",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-201-to-300","title":"Problem 255: Rounded Square Roots","description":"<section id=\"description\">\n<p>We define the rounded-square-root of a positive integer $n$ as the square root of $n$ rounded to the nearest integer.</p>\n<p>The following procedure (essentially Heron's method adapted to integer arithmetic) finds the rounded-square-root of $n$:</p>\n<p>Let $d$ be the number of digits of the number $n$.</p>\n<p>If $d$ is odd, set $x_0 = 2 × {10}^{\\frac{d - 1}{2}}$.</p>\n<p>If $d$ is even, set $x_0 = 7 × {10}^{\\frac{d - 2}{2}}$.</p>\n<p>Repeat:</p>\n<p>$$x_{k + 1} = \\left\\lfloor\\frac{x_k + \\left\\lceil\\frac{n}{x_k}\\right\\rceil}{2}\\right\\rfloor$$</p>\n<p>until $x_{k + 1} = x_k$.</p>\n<p>As an example, let us find the rounded-square-root of $n = 4321$.</p>\n<p>$n$ has 4 digits, so $x_0 = 7 × {10}^{\\frac{4-2}{2}} = 70$.</p>\n<p>$$x_1 = \\left\\lfloor\\frac{70 + \\left\\lceil\\frac{4321}{70}\\right\\rceil}{2}\\right\\rfloor = 66 \\\\\nx_2 = \\left\\lfloor\\frac{66 + \\left\\lceil\\frac{4321}{66}\\right\\rceil}{2}\\right\\rfloor = 66$$</p>\n<p>Since $x_2 = x_1$, we stop here. So, after just two iterations, we have found that the rounded-square-root of 4321 is 66 (the actual square root is 65.7343137…).</p>\n<p>The number of iterations required when using this method is surprisingly low. For example, we can find the rounded-square-root of a 5-digit integer ($10\\,000 ≤ n ≤ 99\\,999$) with an average of 3.2102888889 iterations (the average value was rounded to 10 decimal places).</p>\n<p>Using the procedure described above, what is the average number of iterations required to find the rounded-square-root of a 14-digit number (${10}^{13} ≤ n &#x3C; {10}^{14}$)? Give your answer rounded to 10 decimal places.</p>\n<p><strong>Note:</strong> The symbols $⌊x⌋$ and $⌈x⌉$ represent the floor function and ceiling function respectively.</p>\n</section>","id":"5900f46d1000cf542c50ff7f","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301903,"fields":{"blockName":"project-euler-problems-201-to-300","slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-255-rounded-square-roots","tests":[{"text":"<p><code>roundedSquareRoots()</code> should return <code>4.447401118</code>.</p>","testString":"assert.strictEqual(roundedSquareRoots(), 4.447401118);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function roundedSquareRoots() {\n\n  return true;\n}\n\nroundedSquareRoots();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-201-to-300","dashedName":"problem-255-rounded-square-roots","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-201-to-300","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-201-to-300","nextChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-256-tatami-free-rooms","prevChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-254-sums-of-digit-factorials","id":"5900f46d1000cf542c50ff7f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-255-rounded-square-roots"}},
    "staticQueryHashes": ["1800977889","4268002518"]}