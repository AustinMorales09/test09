{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-201-to-300/problem-265-binary-circles",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-201-to-300","title":"Problem 265: Binary Circles","description":"<section id=\"description\">\n<p>$2^N$ binary digits can be placed in a circle so that all the $N$-digit clockwise subsequences are distinct.</p>\n<p>For $N = 3$, two such circular arrangements are possible, ignoring rotations:</p>\n<img class=\"img-responsive center-block\" alt=\"two circular arrangements for N = 3\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/binary-circles.gif\" style=\"background-color: white; padding: 10px;\">\n<p>For the first arrangement, the 3-digit subsequences, in clockwise order, are: 000, 001, 010, 101, 011, 111, 110 and 100.</p>\n<p>Each circular arrangement can be encoded as a number by concatenating the binary digits starting with the subsequence of all zeros as the most significant bits and proceeding clockwise. The two arrangements for $N = 3$ are thus represented as 23 and 29:</p>\n<p>$${00010111}_2 = 23\\\\\n{00011101}_2 = 29$$</p>\n<p>Calling $S(N)$ the sum of the unique numeric representations, we can see that $S(3) = 23 + 29 = 52$.</p>\n<p>Find $S(5)$.</p>\n</section>","id":"5900f4761000cf542c50ff88","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301914,"fields":{"blockName":"project-euler-problems-201-to-300","slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-265-binary-circles","tests":[{"text":"<p><code>binaryCircles()</code> should return <code>209110240768</code>.</p>","testString":"assert.strictEqual(binaryCircles(), 209110240768);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function binaryCircles() {\n\n  return true;\n}\n\nbinaryCircles();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-201-to-300","dashedName":"problem-265-binary-circles","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-201-to-300","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-201-to-300","nextChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-266-pseudo-square-root","prevChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-264-triangle-centres","id":"5900f4761000cf542c50ff88"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-201-to-300/problem-265-binary-circles"}},
    "staticQueryHashes": ["1800977889","4268002518"]}