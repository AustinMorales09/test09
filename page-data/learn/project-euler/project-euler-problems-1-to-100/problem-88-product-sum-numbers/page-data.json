{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-88-product-sum-numbers",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 88: Product-sum numbers","description":"<section id=\"description\">\n<p>A natural number, <code>N</code>, that can be written as the sum and product of a given set of at least two natural numbers, $\\{a_1, a_2, \\ldots , a_k\\}$ is called a product-sum number: $N = a_1 + a_2 + \\cdots + a_k = a_1 × a_2 × \\cdots × a_k$.</p>\n<p>For example, 6 = 1 + 2 + 3 = 1 × 2 × 3.</p>\n<p>For a given set of size, <code>k</code>, we shall call the smallest N with this property a minimal product-sum number. The minimal product-sum numbers for sets of size, <code>k</code> = 2, 3, 4, 5, and 6 are as follows.</p>\n<div style='margin-left: 4em;'>\n  <var>k</var>=2: 4 = 2 × 2 = 2 + 2<br>\n  <var>k</var>=3: 6 = 1 × 2 × 3 = 1 + 2 + 3<br>\n  <var>k</var>=4: 8 = 1 × 1 × 2 × 4 = 1 + 1 + 2 + 4<br>\n  <var>k</var>=5: 8 = 1 × 1 × 2 × 2 × 2  = 1 + 1 + 2 + 2 + 2<br>\n  <var>k</var>=6: 12 = 1 × 1 × 1 × 1 × 2 × 6 = 1 + 1 + 1 + 1 + 2 + 6\n</div><br>\n<p>Hence for 2 ≤ <code>k</code> ≤ 6, the sum of all the minimal product-sum numbers is 4 + 6 + 8 + 12 = 30; note that <code>8</code> is only counted once in the sum.</p>\n<p>In fact, as the complete set of minimal product-sum numbers for 2 ≤ <code>k</code> ≤ 12 is $\\{4, 6, 8, 12, 15, 16\\}$, the sum is <code>61</code>.</p>\n<p>What is the sum of all the minimal product-sum numbers for 2 ≤ <code>k</code> ≤ <code>limit</code>?</p>\n</section>","id":"5900f3c51000cf542c50fed6","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302203,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-88-product-sum-numbers","tests":[{"text":"<p><code>productSumNumbers(6)</code> should return a number.</p>","testString":"assert(typeof productSumNumbers(6) === 'number');"},{"text":"<p><code>productSumNumbers(6)</code> should return <code>30</code>.</p>","testString":"assert.strictEqual(productSumNumbers(6), 30);"},{"text":"<p><code>productSumNumbers(12)</code> should return <code>61</code>.</p>","testString":"assert.strictEqual(productSumNumbers(12), 61);"},{"text":"<p><code>productSumNumbers(300)</code> should return <code>12686</code>.</p>","testString":"assert.strictEqual(productSumNumbers(300), 12686);"},{"text":"<p><code>productSumNumbers(6000)</code> should return <code>2125990</code>.</p>","testString":"assert.strictEqual(productSumNumbers(6000), 2125990);"},{"text":"<p><code>productSumNumbers(12000)</code> should return <code>7587457</code>.</p>","testString":"assert.strictEqual(productSumNumbers(12000), 7587457);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function productSumNumbers(limit) {\n\n  return true;\n}\n\nproductSumNumbers(6);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-88-product-sum-numbers","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-89-roman-numerals","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-87-prime-power-triples","id":"5900f3c51000cf542c50fed6"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-88-product-sum-numbers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}