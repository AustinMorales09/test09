{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-80-square-root-digital-expansion",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 80: Square root digital expansion","description":"<section id=\"description\">\n<p>It is well known that if the square root of a natural number is not an integer, then it is irrational. The decimal expansion of such square roots is infinite without any repeating pattern at all.</p>\n<p>The square root of two is <code>1.41421356237309504880...</code>, and the digital sum of the first one hundred decimal digits is <code>475</code>.</p>\n<p>For the first <code>n</code> natural numbers, find the total of the digital sums of the first one hundred decimal digits for all the irrational square roots.</p>\n</section>","id":"5900f3bc1000cf542c50fecf","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302194,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-80-square-root-digital-expansion","tests":[{"text":"<p><code>sqrtDigitalExpansion(2)</code> should return a number.</p>","testString":"assert(typeof sqrtDigitalExpansion(2) === 'number');"},{"text":"<p><code>sqrtDigitalExpansion(2)</code> should return <code>475</code>.</p>","testString":"assert.strictEqual(sqrtDigitalExpansion(2), 475);"},{"text":"<p><code>sqrtDigitalExpansion(50)</code> should return <code>19543</code>.</p>","testString":"assert.strictEqual(sqrtDigitalExpansion(50), 19543);"},{"text":"<p><code>sqrtDigitalExpansion(100)</code> should return <code>40886</code>.</p>","testString":"assert.strictEqual(sqrtDigitalExpansion(100), 40886);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function sqrtDigitalExpansion(n) {\n\n  return true;\n}\n\nsqrtDigitalExpansion(2);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-80-square-root-digital-expansion","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-81-path-sum-two-ways","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-79-passcode-derivation","id":"5900f3bc1000cf542c50fecf"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-80-square-root-digital-expansion"}},
    "staticQueryHashes": ["1800977889","4268002518"]}