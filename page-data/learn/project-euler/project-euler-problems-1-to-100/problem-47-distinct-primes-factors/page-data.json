{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-47-distinct-primes-factors",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 47: Distinct primes factors","description":"<section id=\"description\">\n<p>The first two consecutive numbers to have two distinct prime factors are:</p>\n<div style='padding-left: 4em;'>\n  14 = 2 × 7<br>\n  15 = 3 × 5\n</div>\n<p>The first three consecutive numbers to have three distinct prime factors are:</p>\n<div style='padding-left: 4em;'>\n  644 = 2<sup>2</sup> × 7 × 23<br>\n  645 = 3 × 5 × 43<br>\n  646 = 2 × 17 × 19\n</div>\n<p>Find the first four consecutive integers to have four distinct prime factors each. What is the first of these numbers?</p>\n</section>","id":"5900f39c1000cf542c50feae","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302145,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-47-distinct-primes-factors","tests":[{"text":"<p><code>distinctPrimeFactors(2, 2)</code> should return a number.</p>","testString":"assert(typeof distinctPrimeFactors(2, 2) === 'number');"},{"text":"<p><code>distinctPrimeFactors(2, 2)</code> should return 14.</p>","testString":"assert.strictEqual(distinctPrimeFactors(2, 2), 14);"},{"text":"<p><code>distinctPrimeFactors(3, 3)</code> should return 644.</p>","testString":"assert.strictEqual(distinctPrimeFactors(3, 3), 644);"},{"text":"<p><code>distinctPrimeFactors(4, 4)</code> should return 134043.</p>","testString":"assert.strictEqual(distinctPrimeFactors(4, 4), 134043);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function distinctPrimeFactors(targetNumPrimes, targetConsecutive) {\n\n  return true;\n}\n\ndistinctPrimeFactors(4, 4);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-47-distinct-primes-factors","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-48-self-powers","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-46-goldbachs-other-conjecture","id":"5900f39c1000cf542c50feae"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-47-distinct-primes-factors"}},
    "staticQueryHashes": ["1800977889","4268002518"]}