{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-7-10001st-prime",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 7: 10001st prime","description":"<section id=\"description\">\n<p>By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.</p>\n<p>What is the <code>n</code>th prime number?</p>\n</section>","id":"5900f3731000cf542c50fe86","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302182,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-7-10001st-prime","tests":[{"text":"<p><code>nthPrime(6)</code> should return a number.</p>","testString":"assert(typeof nthPrime(6) === 'number');"},{"text":"<p><code>nthPrime(6)</code> should return 13.</p>","testString":"assert.strictEqual(nthPrime(6), 13);"},{"text":"<p><code>nthPrime(10)</code> should return 29.</p>","testString":"assert.strictEqual(nthPrime(10), 29);"},{"text":"<p><code>nthPrime(100)</code> should return 541.</p>","testString":"assert.strictEqual(nthPrime(100), 541);"},{"text":"<p><code>nthPrime(1000)</code> should return 7919.</p>","testString":"assert.strictEqual(nthPrime(1000), 7919);"},{"text":"<p><code>nthPrime(10001)</code> should return 104743.</p>","testString":"assert.strictEqual(nthPrime(10001), 104743);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function nthPrime(n) {\n\n  return true;\n}\n\nnthPrime(10001);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-7-10001st-prime","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-8-largest-product-in-a-series","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-6-sum-square-difference","id":"5900f3731000cf542c50fe86"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-7-10001st-prime"}},
    "staticQueryHashes": ["1800977889","4268002518"]}