{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-24-lexicographic-permutations",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 24: Lexicographic permutations","description":"<section id=\"description\">\n<p>A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:</p>\n<div style='text-align: center;'>012   021   102   120   201   210</div>\n<p>What is the <code>n</code>th lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?</p>\n</section>","id":"5900f3841000cf542c50fe97","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301885,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-24-lexicographic-permutations","tests":[{"text":"<p><code>lexicographicPermutations(699999)</code> should return a number.</p>","testString":"assert(typeof lexicographicPermutations(699999) === 'number');"},{"text":"<p><code>lexicographicPermutations(699999)</code> should return 1938246570.</p>","testString":"assert(lexicographicPermutations(699999) == 1938246570);"},{"text":"<p><code>lexicographicPermutations(899999)</code> should return 2536987410.</p>","testString":"assert(lexicographicPermutations(899999) == 2536987410);"},{"text":"<p><code>lexicographicPermutations(900000)</code> should return 2537014689.</p>","testString":"assert(lexicographicPermutations(900000) == 2537014689);"},{"text":"<p><code>lexicographicPermutations(999999)</code> should return 2783915460.</p>","testString":"assert(lexicographicPermutations(999999) == 2783915460);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function lexicographicPermutations(n) {\n\n  return n;\n}\n\nlexicographicPermutations(999999);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-24-lexicographic-permutations","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-25-1000-digit-fibonacci-number","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-23-non-abundant-sums","id":"5900f3841000cf542c50fe97"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-24-lexicographic-permutations"}},
    "staticQueryHashes": ["1800977889","4268002518"]}