{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-9-special-pythagorean-triplet",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 9: Special Pythagorean triplet","description":"<section id=\"description\">\n<p>A Pythagorean triplet is a set of three natural numbers, <code>a</code> &#x3C; <code>b</code> &#x3C; <code>c</code>, for which,</p>\n<div style='text-align: center;'><var>a</var><sup>2</sup> + <var>b</var><sup>2</sup> = <var>c</var><sup>2</sup></div>\n<p>For example, 3<sup>2</sup> + 4<sup>2</sup> = 9 + 16 = 25 = 5<sup>2</sup>.</p>\n<p>There exists exactly one Pythagorean triplet for which <code>a</code> + <code>b</code> + <code>c</code> = 1000. Find the product <code>abc</code> such that <code>a</code> + <code>b</code> + <code>c</code> = <code>n</code>.</p>\n</section>","id":"5900f3761000cf542c50fe88","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302205,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-9-special-pythagorean-triplet","tests":[{"text":"<p><code>specialPythagoreanTriplet(24)</code> should return a number.</p>","testString":"assert(typeof specialPythagoreanTriplet(24) === 'number');"},{"text":"<p><code>specialPythagoreanTriplet(24)</code> should return 480.</p>","testString":"assert.strictEqual(specialPythagoreanTriplet(24), 480);"},{"text":"<p><code>specialPythagoreanTriplet(120)</code> should return 49920, 55080 or 60000.</p>","testString":"assert([49920, 55080, 60000].includes(specialPythagoreanTriplet(120)));"},{"text":"<p><code>specialPythagoreanTriplet(1000)</code> should return 31875000.</p>","testString":"assert.strictEqual(specialPythagoreanTriplet(1000), 31875000);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function specialPythagoreanTriplet(n) {\n let sumOfabc = n;\n\n return true;\n}\n\nspecialPythagoreanTriplet(1000);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-9-special-pythagorean-triplet","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-10-summation-of-primes","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-8-largest-product-in-a-series","id":"5900f3761000cf542c50fe88"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-9-special-pythagorean-triplet"}},
    "staticQueryHashes": ["1800977889","4268002518"]}