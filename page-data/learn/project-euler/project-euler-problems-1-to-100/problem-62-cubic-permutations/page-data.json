{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-62-cubic-permutations",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 62: Cubic permutations","description":"<section id=\"description\">\n<p>The cube, 41063625 ($345^3$), can be permuted to produce two other cubes: 56623104 ($384^3$) and 66430125 ($405^3$). In fact, 41063625 is the smallest cube which has exactly three permutations of its digits which are also cube.</p>\n<p>Find the smallest cube for which exactly <code>n</code> permutations of its digits are cube.</p>\n</section>","id":"5900f3aa1000cf542c50febd","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302174,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-62-cubic-permutations","tests":[{"text":"<p><code>cubicPermutations(2)</code> should return a number.</p>","testString":"assert(typeof cubicPermutations(2) === 'number');"},{"text":"<p><code>cubicPermutations(2)</code> should return <code>125</code>.</p>","testString":"assert.strictEqual(cubicPermutations(2), 125);"},{"text":"<p><code>cubicPermutations(3)</code> should return <code>41063625</code>.</p>","testString":"assert.strictEqual(cubicPermutations(3), 41063625);"},{"text":"<p><code>cubicPermutations(4)</code> should return <code>1006012008</code>.</p>","testString":"assert.strictEqual(cubicPermutations(4), 1006012008);"},{"text":"<p><code>cubicPermutations(5)</code> should return <code>127035954683</code>.</p>","testString":"assert.strictEqual(cubicPermutations(5), 127035954683);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function cubicPermutations(n) {\n\n  return true;\n}\n\ncubicPermutations(2);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-62-cubic-permutations","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-63-powerful-digit-counts","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-61-cyclical-figurate-numbers","id":"5900f3aa1000cf542c50febd"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-62-cubic-permutations"}},
    "staticQueryHashes": ["1800977889","4268002518"]}