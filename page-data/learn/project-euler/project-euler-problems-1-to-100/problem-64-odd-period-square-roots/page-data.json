{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-64-odd-period-square-roots",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 64: Odd period square roots","description":"<section id=\"description\">\n<p>All square roots are periodic when written as continued fractions and can be written in the form:</p>\n<p>$\\displaystyle \\quad \\quad \\sqrt{N}=a_0+\\frac 1 {a_1+\\frac 1 {a_2+ \\frac 1 {a3+ \\dots}}}$</p>\n<p>For example, let us consider $\\sqrt{23}$:</p>\n<p>$\\quad \\quad \\sqrt{23}=4+\\sqrt{23}-4=4+\\frac 1 {\\frac 1 {\\sqrt{23}-4}}=4+\\frac 1 {1+\\frac{\\sqrt{23}-3}7}$</p>\n<p>If we continue we would get the following expansion:</p>\n<p>$\\displaystyle \\quad \\quad \\sqrt{23}=4+\\frac 1 {1+\\frac 1 {3+ \\frac 1 {1+\\frac 1 {8+ \\dots}}}}$</p>\n<p>The process can be summarized as follows:</p>\n<p>$\\quad \\quad a_0=4, \\frac 1 {\\sqrt{23}-4}=\\frac {\\sqrt{23}+4} 7=1+\\frac {\\sqrt{23}-3} 7$</p>\n<p>$\\quad \\quad a_1=1, \\frac 7 {\\sqrt{23}-3}=\\frac {7(\\sqrt{23}+3)} {14}=3+\\frac {\\sqrt{23}-3} 2$</p>\n<p>$\\quad \\quad a_2=3, \\frac 2 {\\sqrt{23}-3}=\\frac {2(\\sqrt{23}+3)} {14}=1+\\frac {\\sqrt{23}-4} 7$</p>\n<p>$\\quad \\quad a_3=1, \\frac 7 {\\sqrt{23}-4}=\\frac {7(\\sqrt{23}+4)} 7=8+\\sqrt{23}-4$</p>\n<p>$\\quad \\quad a_4=8, \\frac 1 {\\sqrt{23}-4}=\\frac {\\sqrt{23}+4} 7=1+\\frac {\\sqrt{23}-3} 7$</p>\n<p>$\\quad \\quad a_5=1, \\frac 7 {\\sqrt{23}-3}=\\frac {7 (\\sqrt{23}+3)} {14}=3+\\frac {\\sqrt{23}-3} 2$</p>\n<p>$\\quad \\quad a_6=3, \\frac 2 {\\sqrt{23}-3}=\\frac {2(\\sqrt{23}+3)} {14}=1+\\frac {\\sqrt{23}-4} 7$</p>\n<p>$\\quad \\quad a_7=1, \\frac 7 {\\sqrt{23}-4}=\\frac {7(\\sqrt{23}+4)} {7}=8+\\sqrt{23}-4$</p>\n<p>It can be seen that the sequence is repeating. For conciseness, we use the notation $\\sqrt{23}=[4;(1,3,1,8)]$, to indicate that the block (1,3,1,8) repeats indefinitely.</p>\n<p>The first ten continued fraction representations of (irrational) square roots are:</p>\n<p>$\\quad \\quad \\sqrt{2}=[1;(2)]$, period = 1</p>\n<p>$\\quad \\quad \\sqrt{3}=[1;(1,2)]$, period = 2</p>\n<p>$\\quad \\quad \\sqrt{5}=[2;(4)]$, period = 1</p>\n<p>$\\quad \\quad \\sqrt{6}=[2;(2,4)]$, period = 2</p>\n<p>$\\quad \\quad \\sqrt{7}=[2;(1,1,1,4)]$, period = 4</p>\n<p>$\\quad \\quad \\sqrt{8}=[2;(1,4)]$, period = 2</p>\n<p>$\\quad \\quad \\sqrt{10}=[3;(6)]$, period = 1</p>\n<p>$\\quad \\quad \\sqrt{11}=[3;(3,6)]$, period = 2</p>\n<p>$\\quad \\quad \\sqrt{12}=[3;(2,6)]$, period = 2</p>\n<p>$\\quad \\quad \\sqrt{13}=[3;(1,1,1,1,6)]$, period = 5</p>\n<p>Exactly four continued fractions, for $N \\le 13$, have an odd period.</p>\n<p>How many continued fractions for $N \\le n$ have an odd period?</p>\n</section>","id":"5900f3ac1000cf542c50febf","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302176,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-64-odd-period-square-roots","tests":[{"text":"<p><code>oddPeriodSqrts(13)</code> should return a number.</p>","testString":"assert(typeof oddPeriodSqrts(13) === 'number');"},{"text":"<p><code>oddPeriodSqrts(500)</code> should return <code>83</code>.</p>","testString":"assert.strictEqual(oddPeriodSqrts(500), 83);"},{"text":"<p><code>oddPeriodSqrts(1000)</code> should return <code>152</code>.</p>","testString":"assert.strictEqual(oddPeriodSqrts(1000), 152);"},{"text":"<p><code>oddPeriodSqrts(5000)</code> should return <code>690</code>.</p>","testString":"assert.strictEqual(oddPeriodSqrts(5000), 690);"},{"text":"<p><code>oddPeriodSqrts(10000)</code> should return <code>1322</code>.</p>","testString":"assert.strictEqual(oddPeriodSqrts(10000), 1322);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function oddPeriodSqrts(n) {\n\n  return true;\n}\n\noddPeriodSqrts(13);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-64-odd-period-square-roots","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-65-convergents-of-e","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-63-powerful-digit-counts","id":"5900f3ac1000cf542c50febf"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-64-odd-period-square-roots"}},
    "staticQueryHashes": ["1800977889","4268002518"]}