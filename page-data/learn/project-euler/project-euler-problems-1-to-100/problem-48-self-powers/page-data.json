{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-48-self-powers",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 48: Self powers","description":"<section id=\"description\">\n<p>The series, 1<sup>1</sup> + 2<sup>2</sup> + 3<sup>3</sup> + ... + 10<sup>10</sup> = 10405071317.</p>\n<p>Find the last ten digits of the series, 1<sup>1</sup> + 2<sup>2</sup> + 3<sup>3</sup> + ... + 1000<sup>1000</sup>.</p>\n</section>","id":"5900f39c1000cf542c50feaf","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302157,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-48-self-powers","tests":[{"text":"<p><code>selfPowers(10, 3)</code> should return a number.</p>","testString":"assert(typeof selfPowers(10, 3) === 'number');"},{"text":"<p><code>selfPowers(10, 3)</code> should return 317.</p>","testString":"assert.strictEqual(selfPowers(10, 3), 317);"},{"text":"<p><code>selfPowers(150, 6)</code> should return 29045.</p>","testString":"assert.strictEqual(selfPowers(150, 6), 29045);"},{"text":"<p><code>selfPowers(673, 7)</code> should return 2473989.</p>","testString":"assert.strictEqual(selfPowers(673, 7), 2473989);"},{"text":"<p><code>selfPowers(1000, 10)</code> should return 9110846700.</p>","testString":"assert.strictEqual(selfPowers(1000, 10), 9110846700);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function selfPowers(power, lastDigits) {\n\n  return true;\n}\n\nselfPowers(1000, 10);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-48-self-powers","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-49-prime-permutations","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-47-distinct-primes-factors","id":"5900f39c1000cf542c50feaf"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-48-self-powers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}