{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-25-1000-digit-fibonacci-number",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 25: 1000-digit Fibonacci number","description":"<section id=\"description\">\n<p>The Fibonacci sequence is defined by the recurrence relation:</p>\n<div style='padding-left: 4em;'>F<sub>n</sub> = F<sub>n−1</sub> + F<sub>n−2</sub>, where F<sub>1</sub> = 1 and F<sub>2</sub> = 1.</div>\n<p>Hence the first 12 terms will be:</p>\n<div style='padding-left: 4em; display: inline-grid; grid-template-rows: auto; row-gap: 7px;'><div>F<sub>1</sub> = 1</div><div>F<sub>2</sub> = 1</div><div>F<sub>3</sub> = 2</div><div>F<sub>4</sub> = 3</div><div>F<sub>5</sub> = 5</div><div>F<sub>6</sub> = 8</div><div>F<sub>7</sub> = 13</div><div>F<sub>8</sub> = 21</div><div>F<sub>9</sub> = 34</div><div>F<sub>10</sub> = 55</div><div>F<sub>11</sub> = 89</div><div>F<sub>12</sub> = 144</div></div>\n<p>The 12th term, F<sub>12</sub>, is the first term to contain three digits.</p>\n<p>What is the index of the first term in the Fibonacci sequence to contain <code>n</code> digits?</p>\n</section>","id":"5900f3851000cf542c50fe98","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301897,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-25-1000-digit-fibonacci-number","tests":[{"text":"<p><code>digitFibonacci(5)</code> should return a number.</p>","testString":"assert(typeof digitFibonacci(5) === 'number');"},{"text":"<p><code>digitFibonacci(5)</code> should return 21.</p>","testString":"assert.strictEqual(digitFibonacci(5), 21);"},{"text":"<p><code>digitFibonacci(10)</code> should return 45.</p>","testString":"assert.strictEqual(digitFibonacci(10), 45);"},{"text":"<p><code>digitFibonacci(15)</code> should return 69.</p>","testString":"assert.strictEqual(digitFibonacci(15), 69);"},{"text":"<p><code>digitFibonacci(20)</code> should return 93.</p>","testString":"assert.strictEqual(digitFibonacci(20), 93);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function digitFibonacci(n) {\n\n  return n;\n}\n\ndigitFibonacci(20);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-25-1000-digit-fibonacci-number","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-26-reciprocal-cycles","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-24-lexicographic-permutations","id":"5900f3851000cf542c50fe98"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-25-1000-digit-fibonacci-number"}},
    "staticQueryHashes": ["1800977889","4268002518"]}