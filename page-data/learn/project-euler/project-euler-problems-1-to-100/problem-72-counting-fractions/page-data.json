{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-72-counting-fractions",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 72: Counting fractions","description":"<section id=\"description\">\n<p>Consider the fraction, $\\frac{n}{d}$, where <code>n</code> and <code>d</code> are positive integers. If <code>n</code> &#x3C; <code>d</code> and highest common factor, ${HCF}(n, d) = 1$, it is called a reduced proper fraction.</p>\n<p>If we list the set of reduced proper fractions for <code>d</code> ≤ 8 in ascending order of size, we get:</p>\n<p>$$\\frac{1}{8}, \\frac{1}{7}, \\frac{1}{6}, \\frac{1}{5}, \\frac{1}{4}, \\frac{2}{7}, \\frac{1}{3}, \\frac{3}{8}, \\frac{2}{5}, \\frac{3}{7}, \\frac{1}{2}, \\frac{4}{7}, \\frac{3}{5}, \\frac{5}{8}, \\frac{2}{3}, \\frac{5}{7}, \\frac{3}{4}, \\frac{4}{5}, \\frac{5}{6}, \\frac{6}{7}, \\frac{7}{8}$$</p>\n<p>It can be seen that there are <code>21</code> elements in this set.</p>\n<p>How many elements would be contained in the set of reduced proper fractions for <code>d</code> ≤ <code>limit</code>?</p>\n</section>","id":"5900f3b41000cf542c50fec7","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302185,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-72-counting-fractions","tests":[{"text":"<p><code>countingFractions(8)</code> should return a number.</p>","testString":"assert(typeof countingFractions(8) === 'number');"},{"text":"<p><code>countingFractions(8)</code> should return <code>21</code>.</p>","testString":"assert.strictEqual(countingFractions(8), 21);"},{"text":"<p><code>countingFractions(20000)</code> should return <code>121590395</code>.</p>","testString":"assert.strictEqual(countingFractions(20000), 121590395);"},{"text":"<p><code>countingFractions(500000)</code> should return <code>75991039675</code>.</p>","testString":"assert.strictEqual(countingFractions(500000), 75991039675);"},{"text":"<p><code>countingFractions(1000000)</code> should return <code>303963552391</code>.</p>","testString":"assert.strictEqual(countingFractions(1000000), 303963552391);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function countingFractions(limit) {\n\n  return true;\n}\n\ncountingFractions(8);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-72-counting-fractions","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-73-counting-fractions-in-a-range","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-71-ordered-fractions","id":"5900f3b41000cf542c50fec7"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-72-counting-fractions"}},
    "staticQueryHashes": ["1800977889","4268002518"]}