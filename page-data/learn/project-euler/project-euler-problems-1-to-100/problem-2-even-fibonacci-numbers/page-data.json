{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-2-even-fibonacci-numbers",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 2: Even Fibonacci Numbers","description":"<section id=\"description\">\n<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>\n<div style='text-align: center;'>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</div>\n<p>By considering the terms in the Fibonacci sequence whose values do not exceed <code>n</code>, find the sum of the even-valued terms.</p>\n</section>","id":"5900f36e1000cf542c50fe81","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301838,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-2-even-fibonacci-numbers","tests":[{"text":"<p><code>fiboEvenSum(10)</code> should return a number.</p>","testString":"assert(typeof fiboEvenSum(10) === 'number');"},{"text":"<p>Your function should return an even value.</p>","testString":"assert.equal(fiboEvenSum(10) % 2 === 0, true);"},{"text":"<p>Your function should sum the even-valued Fibonacci numbers: <code>fiboEvenSum(8)</code> should return 10.</p>","testString":"assert.strictEqual(fiboEvenSum(8), 10);"},{"text":"<p><code>fiboEvenSum(10)</code> should return 10.</p>","testString":"assert.strictEqual(fiboEvenSum(10), 10);"},{"text":"<p><code>fiboEvenSum(34)</code> should return 44.</p>","testString":"assert.strictEqual(fiboEvenSum(34), 44);"},{"text":"<p><code>fiboEvenSum(60)</code> should return 44.</p>","testString":"assert.strictEqual(fiboEvenSum(60), 44);"},{"text":"<p><code>fiboEvenSum(1000)</code> should return 798.</p>","testString":"assert.strictEqual(fiboEvenSum(1000), 798);"},{"text":"<p><code>fiboEvenSum(100000)</code> should return 60696.</p>","testString":"assert.strictEqual(fiboEvenSum(100000), 60696);"},{"text":"<p><code>fiboEvenSum(4000000)</code> should return 4613732.</p>","testString":"assert.strictEqual(fiboEvenSum(4000000), 4613732);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function fiboEvenSum(n) {\n\n  return true;\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-2-even-fibonacci-numbers","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-3-largest-prime-factor","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-1-multiples-of-3-or-5","id":"5900f36e1000cf542c50fe81"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-2-even-fibonacci-numbers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}