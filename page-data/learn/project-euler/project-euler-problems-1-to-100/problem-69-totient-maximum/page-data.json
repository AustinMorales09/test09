{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-69-totient-maximum",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 69: Totient maximum","description":"<section id=\"description\">\n<p>Euler's Totient function, ${\\phi}(n)$ (sometimes called the phi function), is used to determine the number of numbers less than <code>n</code> which are relatively prime to <code>n</code>. For example, as 1, 2, 4, 5, 7, and 8, are all less than nine and relatively prime to nine, ${\\phi}(9) = 6$.</p>\n<div style='margin-left: 4em;'>\n<table>\n<thead>\n<tr>\n<th>$n$</th>\n<th>$\\text{Relatively Prime}$</th>\n<th>$\\displaystyle{\\phi}(n)$</th>\n<th>$\\displaystyle\\frac{n}{{\\phi}(n)}$</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2</td>\n<td>1</td>\n<td>1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>3</td>\n<td>1,2</td>\n<td>2</td>\n<td>1.5</td>\n</tr>\n<tr>\n<td>4</td>\n<td>1,3</td>\n<td>2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>5</td>\n<td>1,2,3,4</td>\n<td>4</td>\n<td>1.25</td>\n</tr>\n<tr>\n<td>6</td>\n<td>1,5</td>\n<td>2</td>\n<td>3</td>\n</tr>\n<tr>\n<td>7</td>\n<td>1,2,3,4,5,6</td>\n<td>6</td>\n<td>1.1666...</td>\n</tr>\n<tr>\n<td>8</td>\n<td>1,3,5,7</td>\n<td>4</td>\n<td>2</td>\n</tr>\n<tr>\n<td>9</td>\n<td>1,2,4,5,7,8</td>\n<td>6</td>\n<td>1.5</td>\n</tr>\n<tr>\n<td>10</td>\n<td>1,3,7,9</td>\n<td>4</td>\n<td>2.5</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>It can be seen that <code>n</code> = 6 produces a maximum $\\displaystyle\\frac{n}{{\\phi}(n)}$ for <code>n</code> ≤ 10.</p>\n<p>Find the value of <code>n</code> ≤ <code>limit</code> for which $\\displaystyle\\frac{n}{{\\phi(n)}}$ is a maximum.</p>\n</section>","id":"5900f3b11000cf542c50fec4","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302181,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-69-totient-maximum","tests":[{"text":"<p><code>totientMaximum(10)</code> should return a number.</p>","testString":"assert(typeof totientMaximum(10) === 'number');"},{"text":"<p><code>totientMaximum(10)</code> should return <code>6</code>.</p>","testString":"assert.strictEqual(totientMaximum(10), 6);"},{"text":"<p><code>totientMaximum(10000)</code> should return <code>2310</code>.</p>","testString":"assert.strictEqual(totientMaximum(10000), 2310);"},{"text":"<p><code>totientMaximum(500000)</code> should return <code>30030</code>.</p>","testString":"assert.strictEqual(totientMaximum(500000), 30030);"},{"text":"<p><code>totientMaximum(1000000)</code> should return <code>510510</code>.</p>","testString":"assert.strictEqual(totientMaximum(1000000), 510510);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function totientMaximum(limit) {\n\n  return true;\n}\n\ntotientMaximum(10);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-69-totient-maximum","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-70-totient-permutation","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-68-magic-5-gon-ring","id":"5900f3b11000cf542c50fec4"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-69-totient-maximum"}},
    "staticQueryHashes": ["1800977889","4268002518"]}