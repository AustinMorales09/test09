{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-1-to-100/problem-55-lychrel-numbers",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-1-to-100","title":"Problem 55: Lychrel numbers","description":"<section id=\"description\">\n<p>If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.</p>\n<p>Not all numbers produce palindromes so quickly. For example,</p>\n<div style=\"margin-left: 4em;\">\n  349 + 943 = 1292,<br>\n  1292 + 2921 = 4213<br>\n  4213 + 3124 = 7337<br>\n</div>\n<p>That is, 349 took three iterations to arrive at a palindrome.</p>\n<p>Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).</p>\n<p>Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.</p>\n<p>How many Lychrel numbers are there below <code>num</code>?</p>\n<p><strong>Note:</strong> Wording was modified slightly on 24 April 2007 to emphasize the theoretical nature of Lychrel numbers.</p>\n</section>","id":"5900f3a31000cf542c50feb6","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302166,"fields":{"blockName":"project-euler-problems-1-to-100","slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-55-lychrel-numbers","tests":[{"text":"<p><code>countLychrelNumbers(1000)</code> should return a number.</p>","testString":"assert(typeof countLychrelNumbers(1000) === 'number');"},{"text":"<p><code>countLychrelNumbers(1000)</code> should return 13.</p>","testString":"assert.strictEqual(countLychrelNumbers(1000), 13);"},{"text":"<p><code>countLychrelNumbers(3243)</code> should return 39.</p>","testString":"assert.strictEqual(countLychrelNumbers(3243), 39);"},{"text":"<p><code>countLychrelNumbers(5000)</code> should return 76.</p>","testString":"assert.strictEqual(countLychrelNumbers(5000), 76);"},{"text":"<p><code>countLychrelNumbers(7654)</code> should return 140.</p>","testString":"assert.strictEqual(countLychrelNumbers(7654), 140);"},{"text":"<p><code>countLychrelNumbers(10000)</code> should return 249.</p>","testString":"assert.strictEqual(countLychrelNumbers(10000), 249);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function countLychrelNumbers(num) {\n\n  return true;\n}\n\ncountLychrelNumbers(10000);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-1-to-100","dashedName":"problem-55-lychrel-numbers","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-1-to-100","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-1-to-100","nextChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-56-powerful-digit-sum","prevChallengePath":"/learn/project-euler/project-euler-problems-1-to-100/problem-54-poker-hands","id":"5900f3a31000cf542c50feb6"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function arrangedProbability(limit) {\n  // Based on https://www.mathblog.dk/project-euler-100-blue-discs-two-blue/\n  let blue = 15;\n  let discs = 21;\n\n  while (discs < limit) {\n    const nextBlue = 3 * blue + 2 * discs - 2;\n    const nextDiscs = 4 * blue + 3 * discs - 3;\n\n    blue = nextBlue;\n    discs = nextDiscs;\n  }\n  return blue;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-1-to-100/problem-55-lychrel-numbers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}