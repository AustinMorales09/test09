{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-401-to-480/problem-473-phigital-number-base",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-401-to-480","title":"Problem 473: Phigital number base","description":"<section id=\"description\">\n<p>Let $\\varphi$ be the golden ratio: $\\varphi = \\frac{1+\\sqrt{5}}{2}.$</p>\n<p>Remarkably it is possible to write every positive integer as a sum of powers of $\\varphi$ even if we require that every power of $\\varphi$ is used at most once in this sum.</p>\n<p>Even then this representation is not unique.</p>\n<p>We can make it unique by requiring that no powers with consecutive exponents are used and that the representation is finite.</p>\n<p>E.g:</p>\n<p>$2 = \\varphi + \\varphi^{-2}$ and $3 = \\varphi^{2} + \\varphi^{-2}$</p>\n<p>To represent this sum of powers of $\\varphi$ we use a string of 0's and 1's with a point to indicate where the negative exponents start. We call this the representation in the phigital numberbase.</p>\n<p>So $1 = 1_{\\varphi}$, $2 = 10.01_{\\varphi}$, $3 = 100.01_{\\varphi}$ and $14 = 100100.001001_{\\varphi}$. The strings representing 1, 2 and 14 in the phigital number base are palindromic, while the string representing 3 is not (the phigital point is not the middle character).</p>\n<p>The sum of the positive integers not exceeding 1000 whose phigital representation is palindromic is 4345.</p>\n<p>Find the sum of the positive integers not exceeding $10^{10}$ whose phigital representation is palindromic.</p>\n</section>","id":"5900f5461000cf542c510058","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302150,"fields":{"blockName":"project-euler-problems-401-to-480","slug":"/learn/project-euler/project-euler-problems-401-to-480/problem-473-phigital-number-base","tests":[{"text":"<p><code>phigitalNumberBase()</code> should return <code>35856681704365</code>.</p>","testString":"assert.strictEqual(phigitalNumberBase(), 35856681704365);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function phigitalNumberBase() {\n\n  return true;\n}\n\nphigitalNumberBase();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-401-to-480","dashedName":"problem-473-phigital-number-base","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-401-to-480","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-401-to-480","nextChallengePath":"/learn/project-euler/project-euler-problems-401-to-480/problem-474-last-digits-of-divisors","prevChallengePath":"/learn/project-euler/project-euler-problems-401-to-480/problem-472-comfortable-distance-ii","id":"5900f5461000cf542c510058"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-401-to-480/problem-473-phigital-number-base"}},
    "staticQueryHashes": ["1800977889","4268002518"]}