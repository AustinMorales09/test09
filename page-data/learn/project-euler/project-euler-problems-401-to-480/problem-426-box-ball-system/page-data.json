{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-401-to-480/problem-426-box-ball-system",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-401-to-480","title":"Problem 426: Box-ball system","description":"<section id=\"description\">\n<p>Consider an infinite row of boxes. Some of the boxes contain a ball. For example, an initial configuration of 2 consecutive occupied boxes followed by 2 empty boxes, 2 occupied boxes, 1 empty box, and 2 occupied boxes can be denoted by the sequence (2, 2, 2, 1, 2), in which the number of consecutive occupied and empty boxes appear alternately.</p>\n<p>A turn consists of moving each ball exactly once according to the following rule: Transfer the leftmost ball which has not been moved to the nearest empty box to its right.</p>\n<p>After one turn the sequence (2, 2, 2, 1, 2) becomes (2, 2, 1, 2, 3) as can be seen below; note that we begin the new sequence starting at the first occupied box.</p>\n<img class=\"img-responsive center-block\" alt=\"animation showing one complete turn from (2, 2, 2, 1, 2) to (2, 2, 1, 2, 3)\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/box-ball-system-1.gif\" style=\"background-color: white; padding: 10px;\">\n<p>A system like this is called a Box-Ball System or BBS for short.</p>\n<p>It can be shown that after a sufficient number of turns, the system evolves to a state where the consecutive numbers of occupied boxes is invariant. In the example below, the consecutive numbers of occupied boxes evolves to [1, 2, 3]; we shall call this the final state.</p>\n<img class=\"img-responsive center-block\" alt=\"four turns from occupied boxes [2, 2, 2] to final state [1, 2, 3]\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/box-ball-system-2.gif\" style=\"background-color: white; padding: 10px;\">\n<p>We define the sequence $\\{t_i\\}$:</p>\n<p>$$\\begin{align}\n&#x26; s_0 = 290\\,797 \\\\\n&#x26; s_{k + 1} = {s_k}^2\\bmod 50\\,515\\,093 \\\\\n&#x26; t_k = (s_k\\bmod 64) + 1\n\\end{align}$$</p>\n<p>Starting from the initial configuration $(t_0, t_1, \\ldots, t_{10})$, the final state becomes [1, 3, 10, 24, 51, 75].</p>\n<p>Starting from the initial configuration $(t_0, t_1, \\ldots, t_{10\\,000\\,000})$, find the final state.</p>\n<p>Give as your answer the sum of the squares of the elements of the final state. For example, if the final state is [1, 2, 3] then $14 (= 1^2 + 2^2 + 3^2)$ is your answer.</p>\n</section>","id":"5900f5171000cf542c510029","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302096,"fields":{"blockName":"project-euler-problems-401-to-480","slug":"/learn/project-euler/project-euler-problems-401-to-480/problem-426-box-ball-system","tests":[{"text":"<p><code>boxBallSystem()</code> should return <code>31591886008</code>.</p>","testString":"assert.strictEqual(boxBallSystem(), 31591886008);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function boxBallSystem() {\n\n  return true;\n}\n\nboxBallSystem();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-401-to-480","dashedName":"problem-426-box-ball-system","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-401-to-480","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-401-to-480","nextChallengePath":"/learn/project-euler/project-euler-problems-401-to-480/problem-427-n-sequences","prevChallengePath":"/learn/project-euler/project-euler-problems-401-to-480/problem-425-prime-connection","id":"5900f5171000cf542c510029"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-401-to-480/problem-426-box-ball-system"}},
    "staticQueryHashes": ["1800977889","4268002518"]}