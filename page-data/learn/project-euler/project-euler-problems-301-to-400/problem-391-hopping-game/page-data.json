{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-301-to-400/problem-391-hopping-game",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-301-to-400","title":"Problem 391: Hopping Game","description":"<section id=\"description\">\n<p>Let $s_k$ be the number of 1’s when writing the numbers from 0 to $k$ in binary.</p>\n<p>For example, writing 0 to 5 in binary, we have 0, 1, 10, 11, 100, 101. There are seven 1’s, so $s_5 = 7$.</p>\n<p>The sequence $S = \\{s_k : k ≥ 0\\}$ starts $\\{0, 1, 2, 4, 5, 7, 9, 12, \\ldots\\}$.</p>\n<p>A game is played by two players. Before the game starts, a number $n$ is chosen. A counter $c$ starts at 0. At each turn, the player chooses a number from 1 to $n$ (inclusive) and increases $c$ by that number. The resulting value of $c$ must be a member of $S$. If there are no more valid moves, the player loses.</p>\n<p>For example, with $n = 5$ and starting with $c = 0$:</p>\n<ul>\n<li>Player 1 chooses 4, so $c$ becomes $0 + 4 = 4$.</li>\n<li>Player 2 chooses 5, so $c$ becomes $4 + 5 = 9$.</li>\n<li>Player 1 chooses 3, so $c$ becomes $9 + 3 = 12$.</li>\n<li>etc.</li>\n</ul>\n<p>Note that $c$ must always belong to $S$, and each player can increase $c$ by at most $n$.</p>\n<p>Let $M(n)$ be the highest number the first player can choose at her first turn to force a win, and $M(n) = 0$ if there is no such move. For example, $M(2) = 2$, $M(7) = 1$ and $M(20) = 4$.</p>\n<p>It can be verified $\\sum M{(n)}^3 = 8150$ for $1 ≤ n ≤ 20$.</p>\n<p>Find $\\sum M{(n)}^3$ for $1 ≤ n ≤ 1000$.</p>\n</section>","id":"5900f4f31000cf542c510006","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":302056,"fields":{"blockName":"project-euler-problems-301-to-400","slug":"/learn/project-euler/project-euler-problems-301-to-400/problem-391-hopping-game","tests":[{"text":"<p><code>hoppingGame()</code> should return <code>61029882288</code>.</p>","testString":"assert.strictEqual(hoppingGame(), 61029882288);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function hoppingGame() {\n\n  return true;\n}\n\nhoppingGame();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-301-to-400","dashedName":"problem-391-hopping-game","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-301-to-400","isFirstStep":false,"template":null,"required":[],"nextBlock":"project-euler-problems-301-to-400","nextChallengePath":"/learn/project-euler/project-euler-problems-301-to-400/problem-392-enmeshed-unit-circle","prevChallengePath":"/learn/project-euler/project-euler-problems-301-to-400/problem-390-triangles-with-non-rational-sides-and-integral-area","id":"5900f4f31000cf542c510006"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-301-to-400/problem-391-hopping-game"}},
    "staticQueryHashes": ["1800977889","4268002518"]}