{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/project-euler/project-euler-problems-301-to-400/problem-301-nim",
    "result": {"data":{"challengeNode":{"challenge":{"block":"project-euler-problems-301-to-400","title":"Problem 301: Nim","description":"<section id=\"description\">\n<p>Nim is a game played with heaps of stones, where two players take it in turn to remove any number of stones from any heap until no stones remain.</p>\n<p>We'll consider the three-heap normal-play version of Nim, which works as follows:</p>\n<ul>\n<li>At the start of the game there are three heaps of stones.</li>\n<li>On his turn the player removes any positive number of stones from any single heap.</li>\n<li>The first player unable to move (because no stones remain) loses.</li>\n</ul>\n<p>If ($n_1$, $n_2$, $n_3$) indicates a Nim position consisting of heaps of size $n_1$, $n_2$ and $n_3$ then there is a simple function $X(n_1,n_2,n_3)$ — that you may look up or attempt to deduce for yourself — that returns:</p>\n<ul>\n<li>zero if, with perfect strategy, the player about to move will eventually lose; or</li>\n<li>non-zero if, with perfect strategy, the player about to move will eventually win.</li>\n</ul>\n<p>For example $X(1, 2, 3) = 0$ because, no matter what the current player does, his opponent can respond with a move that leaves two heaps of equal size, at which point every move by the current player can be mirrored by his opponent until no stones remain; so the current player loses. To illustrate:</p>\n<ul>\n<li>current player moves to (1,2,1)</li>\n<li>opponent moves to (1,0,1)</li>\n<li>current player moves to (0,0,1)</li>\n<li>opponent moves to (0,0,0), and so wins.</li>\n</ul>\n<p>For how many positive integers $n ≤ 2^{30}$ does $X(n, 2n, 3n) = 0$?</p>\n</section>","id":"5900f4991000cf542c50ffab","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Euler","videoUrl":null,"superBlock":"project-euler","translationPending":false,"forumTopicId":301955,"fields":{"blockName":"project-euler-problems-301-to-400","slug":"/learn/project-euler/project-euler-problems-301-to-400/problem-301-nim","tests":[{"text":"<p><code>nim()</code> should return <code>2178309</code>.</p>","testString":"assert.strictEqual(nim(), 2178309);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function nim() {\n\n  return true;\n}\n\nnim();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/project-euler/#project-euler-problems-301-to-400","dashedName":"problem-301-nim","certification":"project-euler","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"project-euler","block":"project-euler-problems-301-to-400","isFirstStep":true,"template":null,"required":[],"nextBlock":"project-euler-problems-301-to-400","nextChallengePath":"/learn/project-euler/project-euler-problems-301-to-400/problem-302-strong-achilles-numbers","prevChallengePath":"/learn/project-euler/project-euler-problems-201-to-300/problem-300-protein-folding","id":"5900f4991000cf542c50ffab"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"// solution required","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/project-euler/project-euler-problems-301-to-400/problem-301-nim"}},
    "staticQueryHashes": ["1800977889","4268002518"]}