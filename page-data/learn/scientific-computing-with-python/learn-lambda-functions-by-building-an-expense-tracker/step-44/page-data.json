{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-44",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-lambda-functions-by-building-an-expense-tracker","title":"Step 44","description":"<section id=\"description\">\n<p>Finally, call your <code>main()</code> function, and try the expense tracker program in the console.</p>\n<p>With that, the expense tracker project is complete!</p>\n</section>","id":"65826af5b226a5628aa154b1","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-lambda-functions-by-building-an-expense-tracker","slug":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-44","tests":[{"text":"<p>You should call your <code>main()</code> function.</p>","testString":"assert.match(code, /^main\\s*\\(\\s*\\)/m)"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def add_expense(expenses, amount, category):\n    expenses.append({'amount': amount, 'category': category})\n    \ndef print_expenses(expenses):\n    for expense in expenses:\n        print(f'Amount: {expense[\"amount\"]}, Category: {expense[\"category\"]}')\n    \ndef total_expenses(expenses):\n    return sum(map(lambda expense: expense['amount'], expenses))\n    \ndef filter_expenses_by_category(expenses, category):\n    return filter(lambda expense: expense['category'] == category, expenses)\n    \n\ndef main():\n    expenses = []\n    while True:\n        print('\\nExpense Tracker')\n        print('1. Add an expense')\n        print('2. List all expenses')\n        print('3. Show total expenses')\n        print('4. Filter expenses by category')\n        print('5. Exit')\n       \n        choice = input('Enter your choice: ')\n\n        if choice == '1':\n            amount = float(input('Enter amount: '))\n            category = input('Enter category: ')\n            add_expense(expenses, amount, category)\n\n        elif choice == '2':\n            print('\\nAll Expenses:')\n            print_expenses(expenses)\n    \n        elif choice == '3':\n            print('\\nTotal Expenses: ', total_expenses(expenses))\n    \n        elif choice == '4':\n            category = input('Enter category to filter: ')\n            print(f'\\nExpenses for {category}:')\n            expenses_from_category = filter_expenses_by_category(expenses, category)\n            print_expenses(expenses_from_category)\n    \n        elif choice == '5':\n            print('Exiting the program.')\n            break\n\n","head":"","tail":"","editableRegionBoundaries":[48,50],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker","dashedName":"step-44","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-lambda-functions-by-building-an-expense-tracker","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-list-comprehension-by-building-a-case-converter-program","nextChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-1","prevChallengePath":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-43","id":"65826af5b226a5628aa154b1"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def add_expense(expenses, amount, category):\n    expenses.append({'amount': amount, 'category': category})\n    \ndef print_expenses(expenses):\n    for expense in expenses:\n        print(f'Amount: {expense[\"amount\"]}, Category: {expense[\"category\"]}')\n    \ndef total_expenses(expenses):\n    return sum(map(lambda expense: expense['amount'], expenses))\n    \ndef filter_expenses_by_category(expenses, category):\n    return filter(lambda expense: expense['category'] == category, expenses)\n    \n\ndef main():\n    expenses = []\n    while True:\n        print('\\nExpense Tracker')\n        print('1. Add an expense')\n        print('2. List all expenses')\n        print('3. Show total expenses')\n        print('4. Filter expenses by category')\n        print('5. Exit')\n        \n        choice = input('Enter your choice: ')\n\n        if choice == '1':\n            amount = float(input('Enter amount: '))\n            category = input('Enter category: ')\n            add_expense(expenses, amount, category)\n\n        elif choice == '2':\n            print('\\nAll Expenses:')\n            print_expenses(expenses)\n\n        elif choice == '3':\n            print('\\nTotal Expenses: ', total_expenses(expenses))\n\n        elif choice == '4':\n            category = input('Enter category to filter: ')\n            print(f'\\nExpenses for {category}:')\n            expenses_from_category = filter_expenses_by_category(expenses, category)\n            print_expenses(expenses_from_category)\n\n        elif choice == '5':\n            print('Exiting the program.')\n            break\n\nmain()\n","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-44"}},
    "staticQueryHashes": ["1800977889","4268002518"]}