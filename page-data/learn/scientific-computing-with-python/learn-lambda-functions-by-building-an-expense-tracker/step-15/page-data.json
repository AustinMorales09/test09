{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-15",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-lambda-functions-by-building-an-expense-tracker","title":"Step 15","description":"<section id=\"description\">\n<p>The <code>sum()</code> function returns the sum of the items in the iterable which is passed as its argument. You are going to use <code>sum()</code> together with <code>map()</code> and <code>lambda</code> functions to get the total amount of expenses.</p>\n<p>For now, make a little test and modify your current <code>print()</code> call replacing the <code>list()</code> call with a call to the <code>sum()</code> function passing it the current <code>map()</code> call as the argument.</p>\n</section>","id":"658238f7604f154ea9a23e1e","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-lambda-functions-by-building-an-expense-tracker","slug":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-15","tests":[{"text":"<p>You should print <code>sum(map(test, [2, 3, 5, 8]))</code>.</p>","testString":"({ test: () => assert.match(code, /^print\\s*\\(\\s*sum\\s*\\(\\s*map\\s*\\(\\s*test\\s*,\\s*\\[\\s*2\\s*,\\s*3\\s*,\\s*5\\s*,\\s*8\\s*\\]\\s*\\)\\s*\\)\\s*\\)/m) })"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def add_expense(expenses, amount, category):\n    expenses.append({'amount': amount, 'category': category})\n    \ndef print_expenses(expenses):\n    for expense in expenses:\n        print(f'Amount: {expense[\"amount\"]}, Category: {expense[\"category\"]}')\n\ndef total_expenses(expenses):\n    pass\n    \ntest = lambda x: x * 2\nprint(list(map(test, [2,3,5,8])))\n\nexpenses = []","head":"","tail":"","editableRegionBoundaries":[10,13],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-lambda-functions-by-building-an-expense-tracker","dashedName":"step-15","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-lambda-functions-by-building-an-expense-tracker","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-lambda-functions-by-building-an-expense-tracker","nextChallengePath":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-16","prevChallengePath":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-14","id":"658238f7604f154ea9a23e1e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def add_expense(expenses, amount, category):\n    expenses.append({'amount': amount, 'category': category})\n    \ndef print_expenses(expenses):\n    for expense in expenses:\n        print(f'Amount: {expense[\"amount\"]}, Category: {expense[\"category\"]}')\n    \ndef total_expenses(expenses):\n    return sum(map(lambda expense: expense['amount'], expenses))\n    \ndef filter_expenses_by_category(expenses, category):\n    return filter(lambda expense: expense['category'] == category, expenses)\n    \n\ndef main():\n    expenses = []\n    while True:\n        print('\\nExpense Tracker')\n        print('1. Add an expense')\n        print('2. List all expenses')\n        print('3. Show total expenses')\n        print('4. Filter expenses by category')\n        print('5. Exit')\n        \n        choice = input('Enter your choice: ')\n\n        if choice == '1':\n            amount = float(input('Enter amount: '))\n            category = input('Enter category: ')\n            add_expense(expenses, amount, category)\n\n        elif choice == '2':\n            print('\\nAll Expenses:')\n            print_expenses(expenses)\n\n        elif choice == '3':\n            print('\\nTotal Expenses: ', total_expenses(expenses))\n\n        elif choice == '4':\n            category = input('Enter category to filter: ')\n            print(f'\\nExpenses for {category}:')\n            expenses_from_category = filter_expenses_by_category(expenses, category)\n            print_expenses(expenses_from_category)\n\n        elif choice == '5':\n            print('Exiting the program.')\n            break\n\nmain()\n","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-lambda-functions-by-building-an-expense-tracker/step-15"}},
    "staticQueryHashes": ["1800977889","4268002518"]}