{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-data-structures-by-building-the-merge-sort-algorithm/step-12",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-data-structures-by-building-the-merge-sort-algorithm","title":"Step 12","description":"<section id=\"description\">\n<p>Within the <code>while</code> loop, replace <code>pass</code> with an <code>if</code> statement that checks if the index of <code>left_part</code> is less than the index of <code>right_part</code>.</p>\n<p>Use the <code>pass</code> keyword in the body of the <code>if</code> statement.</p>\n</section>","id":"656706afd65547d22bee0b68","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-data-structures-by-building-the-merge-sort-algorithm","slug":"/learn/scientific-computing-with-python/learn-data-structures-by-building-the-merge-sort-algorithm/step-12","tests":[{"text":"<p>You should replace <code>pass</code> keyword with an <code>if</code> statement with this condition: <code>left_part[left_array_index] &#x3C; right_part[right_array_index]</code>. Add the <code>pass</code> keyword to the body of the <code>if</code> statement.</p>","testString":"({\n test: () => assert(runPython(`\n  _Node(_code).find_function(\"merge_sort\").find_whiles()[0].find_body().is_equivalent(\"if left_part[left_array_index] < right_part[right_array_index]:\\\\n  pass\")`))\n })"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def merge_sort(array):\n    \n    middle_point = len(array) // 2\n    left_part = array[:middle_point]\n    right_part = array[middle_point:]\n\n    merge_sort(left_part)\n    merge_sort(right_part)\n\n    left_array_index = 0\n    right_array_index = 0\n    sorted_index = 0\n\n    while left_array_index < len(left_part) and right_array_index < len(right_part):\n        pass","head":"","tail":"","editableRegionBoundaries":[13,16],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-data-structures-by-building-the-merge-sort-algorithm","dashedName":"step-12","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-data-structures-by-building-the-merge-sort-algorithm","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-data-structures-by-building-the-merge-sort-algorithm","nextChallengePath":"/learn/scientific-computing-with-python/learn-data-structures-by-building-the-merge-sort-algorithm/step-13","prevChallengePath":"/learn/scientific-computing-with-python/learn-data-structures-by-building-the-merge-sort-algorithm/step-11","id":"656706afd65547d22bee0b68"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def merge_sort(array):\n    if len(array) <= 1:\n        return\n    \n    middle_point = len(array) // 2\n    left_part = array[:middle_point]\n    right_part = array[middle_point:]\n\n    merge_sort(left_part)\n    merge_sort(right_part)\n\n    left_array_index = 0\n    right_array_index = 0\n    sorted_index = 0\n\n    while left_array_index < len(left_part) and right_array_index < len(right_part):\n        if left_part[left_array_index] < right_part[right_array_index]:\n            array[sorted_index] = left_part[left_array_index]\n            left_array_index += 1\n        else:\n            array[sorted_index] = right_part[right_array_index]\n            right_array_index += 1\n        sorted_index += 1\n\n    while left_array_index < len(left_part):\n        array[sorted_index] = left_part[left_array_index]\n        left_array_index += 1\n        sorted_index += 1\n\n    while right_array_index < len(right_part):\n        array[sorted_index] = right_part[right_array_index]\n        right_array_index += 1\n        sorted_index += 1\n\n\nif __name__ == '__main__':\n    numbers = [4, 10, 6, 14, 2, 1, 8, 5]\n    print('Unsorted array: ')\n    print(numbers)\n    merge_sort(numbers)\n    print('Sorted array: ' + str(numbers))","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-data-structures-by-building-the-merge-sort-algorithm/step-12"}},
    "staticQueryHashes": ["1800977889","4268002518"]}