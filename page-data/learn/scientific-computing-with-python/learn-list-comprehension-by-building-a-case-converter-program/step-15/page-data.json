{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-15",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-list-comprehension-by-building-a-case-converter-program","title":"Step 15","description":"<section id=\"description\">\n<p>So far, in this project you have not seen any usage of list comprehensions whatsoever. Like you learned in the first step, list comprehensions are a more concise way of constructing lists in Python.</p>\n<p>Begin the transition to comprehensions by commenting out all the lines of code inside the <code>convert_to_snake_case()</code> function. Don't delete them as they'll be helpful when you implement the logic using a list comprehension.</p>\n<p>Remember to add the <code>pass</code> keyword to the function body to prevent the code from failing during the tests.</p>\n</section>","id":"657f425dbab54e11993c80f0","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-list-comprehension-by-building-a-case-converter-program","slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-15","tests":[{"text":"<p>You should comment out all the 10 lines of code inside the <code>convert_to_snake_case()</code> function and nothing else. Add <code>pass</code> to fill temporarily the function body and avoid an error.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\").replace(/\\n#/g, \"\\n #\");\n        const convert_to_snake_case = __helpers.python.getDef(\"\\n\" + transformedCode, \"convert_to_snake_case\");\n        const { function_body } = convert_to_snake_case;\n\n        assert.equal(function_body.split(\"#\").length - 1, 10);\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n    snake_cased_char_list = []\n    for char in pascal_or_camel_cased_string:\n        if char.isupper():\n            converted_character = '_' + char.lower()\n            snake_cased_char_list.append(converted_character)\n        else:\n            snake_cased_char_list.append(char)\n    snake_cased_string = ''.join(snake_cased_char_list)\n    clean_snake_cased_string = snake_cased_string.strip('_')\n\n    return clean_snake_cased_string\ndef main():\n    print(convert_to_snake_case('aLongAndComplexString'))\n\nif __name__ == '__main__':\n    main()\n","head":"","tail":"","editableRegionBoundaries":[0,13],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program","dashedName":"step-15","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-list-comprehension-by-building-a-case-converter-program","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-list-comprehension-by-building-a-case-converter-program","nextChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-16","prevChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-14","id":"657f425dbab54e11993c80f0"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n\n    snake_cased_char_list = [\n        '_' + char.lower() if char.isupper()\n        else char\n        for char in pascal_or_camel_cased_string\n    ]\n\n    return ''.join(snake_cased_char_list).strip('_')\n\ndef main():\n    print(convert_to_snake_case('IAmAPascalCasedString'))\n\n    \n\nif __name__ == '__main__':\n    main()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-15"}},
    "staticQueryHashes": ["1800977889","4268002518"]}