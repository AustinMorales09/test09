{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-17",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-list-comprehension-by-building-a-case-converter-program","title":"Step 17","description":"<section id=\"description\">\n<p>Inside the space you left between the pair of square braces, you can describe the value that you would like to include in the list based on a given condition.</p>\n<pre><code class=\"language-py\">snake_cased_char_list = [\n    '_' + char.lower() if char.isupper()\n]\n</code></pre>\n<p>Python will interpret this expression as \"append <code>'_' + char.lower()</code> to the list if <code>char</code> is in uppercase\" and this will convert the case for the capital letters in the input string.</p>\n<p>Start by adding this line within the square braces.</p>\n</section>","id":"657f43d341a0dd17120cdb08","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-list-comprehension-by-building-a-case-converter-program","slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-17","tests":[{"text":"<p>You should add <code>'_' + char.lower() if char.isupper()</code> within the square braces of <code>snake_cased_char_list</code>.</p>","testString":"const transformedCode = code.replace(/\\r/g, \"\");\nconst convert_to_snake_case = __helpers.python.getDef(\"\\n\" + transformedCode, \"convert_to_snake_case\");\nconst { function_body } = convert_to_snake_case;\n\nassert.match(function_body, / +snake_cased_char_list\\s*=\\s*\\[\\s*(\"|')_\\1\\s*\\+\\s*char\\.lower\\(\\s*\\)\\s+if\\s+char\\.isupper\\(\\s*\\)\\s*\\]/);"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n    # snake_cased_char_list = []\n    # for char in pascal_or_camel_cased_string:\n    #     if char.isupper():\n    #       converted_character = '_' + char.lower()\n    #       snake_cased_char_list.append(converted_character)\n    #     else:\n    #         snake_cased_char_list.append(char)\n    # snake_cased_string = ''.join(snake_cased_char_list)\n    # clean_snake_cased_string = snake_cased_string.strip('_')\n\n    # return clean_snake_cased_string\n\n    snake_cased_char_list = [\n        \n    ]\n\n\n\ndef main():\n    print(convert_to_snake_case('aLongAndComplexString'))\n\nif __name__ == '__main__':\n    main()","head":"","tail":"","editableRegionBoundaries":[13,17],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program","dashedName":"step-17","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-list-comprehension-by-building-a-case-converter-program","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-list-comprehension-by-building-a-case-converter-program","nextChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-18","prevChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-16","id":"657f43d341a0dd17120cdb08"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n\n    snake_cased_char_list = [\n        '_' + char.lower() if char.isupper()\n        else char\n        for char in pascal_or_camel_cased_string\n    ]\n\n    return ''.join(snake_cased_char_list).strip('_')\n\ndef main():\n    print(convert_to_snake_case('IAmAPascalCasedString'))\n\n    \n\nif __name__ == '__main__':\n    main()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-17"}},
    "staticQueryHashes": ["1800977889","4268002518"]}