{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-2",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-list-comprehension-by-building-a-case-converter-program","title":"Step 2","description":"<section id=\"description\">\n<p>Now create a new list named <code>snake_cased_char_list</code> inside the function. You can use a set of empty square braces to create the new list.</p>\n<p>This list will hold the characters of the string after you have converted them to snake case.</p>\n</section>","id":"657ed53c19461d4b95c4757a","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-list-comprehension-by-building-a-case-converter-program","slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-2","tests":[{"text":"<p>You should replace <code>pass</code> with an empty list named <code>snake_cased_char_list</code> within <code>convert_to_snake_case</code>.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const commentless_code = __helpers.python.removeComments(transformedCode)\n        const convert_to_snake_case = __helpers.python.getDef(\"\\n\" + commentless_code, \"convert_to_snake_case\");\n        const { function_body } = convert_to_snake_case;\n        assert.notMatch(function_body, /\\bpass\\b/);\n        assert.match(function_body, / +snake_cased_char_list\\s*=\\s*\\[\\s*\\]\\s*/);\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n    pass    ","head":"","tail":"","editableRegionBoundaries":[0,3],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program","dashedName":"step-2","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-list-comprehension-by-building-a-case-converter-program","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-list-comprehension-by-building-a-case-converter-program","nextChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-3","prevChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-1","id":"657ed53c19461d4b95c4757a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n\n    snake_cased_char_list = [\n        '_' + char.lower() if char.isupper()\n        else char\n        for char in pascal_or_camel_cased_string\n    ]\n\n    return ''.join(snake_cased_char_list).strip('_')\n\ndef main():\n    print(convert_to_snake_case('IAmAPascalCasedString'))\n\n    \n\nif __name__ == '__main__':\n    main()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-2"}},
    "staticQueryHashes": ["1800977889","4268002518"]}