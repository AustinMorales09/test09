{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-19",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-list-comprehension-by-building-a-case-converter-program","title":"Step 19","description":"<section id=\"description\">\n<p>The final piece of the puzzle is the input string itself. The list comprehension needs to know about the object it'll iterate upon.</p>\n<p>In this case, you need to iterate upon all the characters of the string.</p>\n<pre><code class=\"language-py\">snake_cased_char_list = [\n    '_' + char.lower() if char.isupper()\n    else char\n    for char in pascal_or_camel_cased_string\n]\n</code></pre>\n<p>And there you have it. These three lines of code do the same task as the <code>for</code> loop you worked on previously while being cleaner and somewhat faster.</p>\n<p>Add this last line of code to iterate over the characters of the string in your list comprehension and make sure that you're writing it within the pair of square braces.</p>\n</section>","id":"657f465f8e718b19c5105ae5","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-list-comprehension-by-building-a-case-converter-program","slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-19","tests":[{"text":"<p>You should add <code>for char in pascal_or_camel_cased_string</code> after <code>else char</code> within the square braces of <code>snake_cased_char_list</code>.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const convert_to_snake_case = __helpers.python.getDef(\"\\n\" + transformedCode, \"convert_to_snake_case\");\n        const { function_body } = convert_to_snake_case;\n\n        assert.match(function_body, / +snake_cased_char_list\\s*=\\s*\\[\\s*'_'\\s*\\+\\s*char\\.lower\\(\\s*\\)\\s+if\\s+char\\.isupper\\(\\s*\\)\\s*else\\s*char\\s*for\\s+char\\s+in\\s+pascal_or_camel_cased_string\\s*\\]/);\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n    # snake_cased_char_list = []\n    # for char in pascal_or_camel_cased_string:\n    #     if char.isupper():\n    #       converted_character = '_' + char.lower()\n    #       snake_cased_char_list.append(converted_character)\n    #     else:\n    #         snake_cased_char_list.append(char)\n    # snake_cased_string = ''.join(snake_cased_char_list)\n    # clean_snake_cased_string = snake_cased_string.strip('_')\n\n    # return clean_snake_cased_string\n\n    snake_cased_char_list = [\n        '_' + char.lower() if char.isupper()\n        else char\n        \n    ]\n\n\n\ndef main():\n    print(convert_to_snake_case('aLongAndComplexString'))\n\nif __name__ == '__main__':\n    main()","head":"","tail":"","editableRegionBoundaries":[13,19],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-list-comprehension-by-building-a-case-converter-program","dashedName":"step-19","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-list-comprehension-by-building-a-case-converter-program","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-list-comprehension-by-building-a-case-converter-program","nextChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-20","prevChallengePath":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-18","id":"657f465f8e718b19c5105ae5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def convert_to_snake_case(pascal_or_camel_cased_string):\n\n    snake_cased_char_list = [\n        '_' + char.lower() if char.isupper()\n        else char\n        for char in pascal_or_camel_cased_string\n    ]\n\n    return ''.join(snake_cased_char_list).strip('_')\n\ndef main():\n    print(convert_to_snake_case('IAmAPascalCasedString'))\n\n    \n\nif __name__ == '__main__':\n    main()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-list-comprehension-by-building-a-case-converter-program/step-19"}},
    "staticQueryHashes": ["1800977889","4268002518"]}