{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-32",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","title":"Step 32","description":"<section id=\"description\">\n<p>Return the result of comparing <code>0</code> to <code>total</code> modulo <code>10</code>.</p>\n</section>","id":"65687e294ef2bdca637fb213","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-32","tests":[{"text":"<p>You should have <code>return 0 == total % 10</code> within the <code>verify_card_number</code> function.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const verify_card_number = __helpers.python.getDef(\"\\n\" + transformedCode, \"verify_card_number\");\n        const { function_body } = verify_card_number;\n\n        const acceptableMatches = [\n            /return +0 *== *total *% *10/,\n            /return +total *% *10 *== *0/\n        ];\n\n        const someMatch = acceptableMatches.some((match) => {\n            return match.test(function_body);\n        });\n\n        assert.isTrue(someMatch);\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[::-1]\n    odd_digits = card_number_reversed[::2]\n\n    for digit in odd_digits:\n        sum_of_odd_digits += int(digit)\n\n    sum_of_even_digits = 0\n    even_digits = card_number_reversed[1::2]\n    for digit in even_digits:\n        number = int(digit) * 2\n        if number >= 10:\n            number = (number // 10) + (number % 10)\n        sum_of_even_digits += number\n    total = sum_of_odd_digits + sum_of_even_digits\n    print(total)\n\ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    verify_card_number(translated_card_number)\n\nmain()","head":"","tail":"","editableRegionBoundaries":[15,19],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","dashedName":"step-32","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","nextChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-33","prevChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-31","id":"65687e294ef2bdca637fb213"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[::-1]\n    odd_digits = card_number_reversed[::2]\n\n    for digit in odd_digits:\n        sum_of_odd_digits += int(digit)\n\n    sum_of_even_digits = 0\n    even_digits = card_number_reversed[1::2]\n    for digit in even_digits:\n        number = int(digit) * 2\n        if number >= 10:\n            number = (number // 10) + (number % 10)\n        sum_of_even_digits += number\n\n    total = sum_of_odd_digits + sum_of_even_digits\n    return total % 10 == 0\n\ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    if verify_card_number(translated_card_number):\n        print('VALID!')\n    else:\n        print('INVALID!')\n\nmain()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-32"}},
    "staticQueryHashes": ["1800977889","4268002518"]}