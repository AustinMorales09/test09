{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-13",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","title":"Step 13","description":"<section id=\"description\">\n<p>Reverse the order of the digits in the last four digits of <code>card_number</code>, by using a slice with a step of <code>-1</code>. You can use either negative or positive indices for the start and end indices.</p>\n</section>","id":"656b47dc2cf39e37025dc033","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-13","tests":[{"text":"<p>You could have <code>card_number_reversed = card_number[-1:-5:-1]</code> within the <code>verify_card_number</code> function. Expected <code>--fcc-actual--</code> to equal <code>--fcc-expected--</code>.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const verify_card_number = __helpers.python.getDef(\"\\n\" + transformedCode, \"verify_card_number\");\n        const { function_body, def } = verify_card_number;\n\n        const pyCode = `\ncard_number = \"4111111145551142\"\n${def}\n${function_body.match(/ +/)[0]}return card_number_reversed\n\nverify_card_number(card_number)\n`;\n        const out = runPython(pyCode, {});\n        assert.equal(out, \"2411\");\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[0:4:2]\n    print(card_number_reversed)\n    \ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    print(translated_card_number)\n\n    verify_card_number(translated_card_number)\n\nmain()","head":"","tail":"","editableRegionBoundaries":[0,6],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","dashedName":"step-13","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","nextChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-14","prevChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-12","id":"656b47dc2cf39e37025dc033"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[::-1]\n    odd_digits = card_number_reversed[::2]\n\n    for digit in odd_digits:\n        sum_of_odd_digits += int(digit)\n\n    sum_of_even_digits = 0\n    even_digits = card_number_reversed[1::2]\n    for digit in even_digits:\n        number = int(digit) * 2\n        if number >= 10:\n            number = (number // 10) + (number % 10)\n        sum_of_even_digits += number\n\n    total = sum_of_odd_digits + sum_of_even_digits\n    return total % 10 == 0\n\ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    if verify_card_number(translated_card_number):\n        print('VALID!')\n    else:\n        print('INVALID!')\n\nmain()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-13"}},
    "staticQueryHashes": ["1800977889","4268002518"]}