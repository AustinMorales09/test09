{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-33",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","title":"Step 33","description":"<section id=\"description\">\n<p>Adjust the <code>verify_card_number</code> call such that if it returns <code>True</code>, print <code>'VALID!'</code> to the console. Otherwise, print <code>'INVALID!'</code>.</p>\n</section>","id":"65687e457ab1c4cb8c3fe7c8","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":20,"helpCategory":"Python","videoUrl":null,"superBlock":"scientific-computing-with-python","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-33","tests":[{"text":"<p>You should have <code>if verify_card_number(translated_card_number):</code> within the <code>main</code> function.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const main = __helpers.python.getDef(\"\\n\" + transformedCode, \"main\");\n        const { function_body } = main;\n        \n        const if_statement = __helpers.python.getBlock(\"\\n\" + function_body, \"if verify_card_number(translated_card_number)\");\n        assert.exists(if_statement);\n    }\n})"},{"text":"<p>You should have <code>print('VALID!')</code> within the <code>if</code> statement.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const if_statement = __helpers.python.getBlock(\"\\n\" + transformedCode, \"if verify_card_number(translated_card_number)\");\n        const {block_body} = if_statement;\n\n        assert.match(block_body, /print\\(\\s*('|\")VALID!\\1\\s*\\)/);\n    }\n})"},{"text":"<p>You should have <code>print('INVALID!')</code> within the <code>else</code> clause.</p>","testString":"({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const else_statement = __helpers.python.getBlock(\"\\n\" + transformedCode, \"else\");\n        const {block_body} = else_statement;\n\n        assert.match(block_body, /print\\(\\s*('|\")INVALID!\\1\\s*\\)/);\n    }\n})"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"mainpy","ext":"py","name":"main","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[::-1]\n    odd_digits = card_number_reversed[::2]\n\n    for digit in odd_digits:\n        sum_of_odd_digits += int(digit)\n\n    sum_of_even_digits = 0\n    even_digits = card_number_reversed[1::2]\n    for digit in even_digits:\n        number = int(digit) * 2\n        if number >= 10:\n            number = (number // 10) + (number % 10)\n        sum_of_even_digits += number\n    total = sum_of_odd_digits + sum_of_even_digits\n    print(total)\n    return total % 10 == 0\ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    verify_card_number(translated_card_number)\n\nmain()","head":"","tail":"","editableRegionBoundaries":[18,25],"history":["main.py"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/scientific-computing-with-python/#learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","dashedName":"step-33","certification":"scientific-computing-with-python","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"scientific-computing-with-python","block":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm","nextChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-34","prevChallengePath":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-32","id":"65687e457ab1c4cb8c3fe7c8"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":20,"challengeFiles":[{"name":"main","ext":"py","contents":"def verify_card_number(card_number):\n    sum_of_odd_digits = 0\n    card_number_reversed = card_number[::-1]\n    odd_digits = card_number_reversed[::2]\n\n    for digit in odd_digits:\n        sum_of_odd_digits += int(digit)\n\n    sum_of_even_digits = 0\n    even_digits = card_number_reversed[1::2]\n    for digit in even_digits:\n        number = int(digit) * 2\n        if number >= 10:\n            number = (number // 10) + (number % 10)\n        sum_of_even_digits += number\n\n    total = sum_of_odd_digits + sum_of_even_digits\n    return total % 10 == 0\n\ndef main():\n    card_number = '4111-1111-4555-1142'\n    card_translation = str.maketrans({'-': '', ' ': ''})\n    translated_card_number = card_number.translate(card_translation)\n\n    if verify_card_number(translated_card_number):\n        print('VALID!')\n    else:\n        print('INVALID!')\n\nmain()","head":"","tail":"","history":["main.py"],"fileKey":"mainpy"}]}},"slug":"/learn/scientific-computing-with-python/learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm/step-33"}},
    "staticQueryHashes": ["1800977889","4268002518"]}