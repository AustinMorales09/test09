{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-css","title":"Override Class Declarations by Styling ID Attributes","description":"<section id=\"description\">\n<p>We just proved that browsers read CSS from top to bottom in order of their declaration. That means that, in the event of a conflict, the browser will use whichever CSS declaration came last. Notice that if we even had put <code>blue-text</code> before <code>pink-text</code> in our <code>h1</code> element's classes, it would still look at the declaration order and not the order of their use!</p>\n<p>But we're not done yet. There are other ways that you can override CSS. Do you remember id attributes?</p>\n<p>Let's override your <code>pink-text</code> and <code>blue-text</code> classes, and make your <code>h1</code> element orange, by giving the <code>h1</code> element an id and then styling that id.</p>\n</section>","id":"bad87fee1348bd8aedf06756","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Give your <code>h1</code> element the <code>id</code> attribute of <code>orange-text</code>. Remember, id styles look like this:</p>\n<pre><code class=\"language-html\">&#x3C;h1 id=\"orange-text\">\n</code></pre>\n<p>Leave the <code>blue-text</code> and <code>pink-text</code> classes on your <code>h1</code> element.</p>\n<p>Create a CSS declaration for your <code>orange-text</code> id in your <code>style</code> element. Here's an example of what this looks like:</p>\n<pre><code class=\"language-css\">#brown-text {\n  color: brown;\n}\n</code></pre>\n<p><strong>Note:</strong> It doesn't matter whether you declare this CSS above or below <code>pink-text</code> class, since the <code>id</code> attribute will always take precedence.</p>\n</section>","notes":null,"challengeType":0,"helpCategory":"HTML-CSS","videoUrl":"https://scrimba.com/c/cRkpDhB","superBlock":"responsive-web-design","translationPending":false,"forumTopicId":18251,"fields":{"blockName":"basic-css","slug":"/learn/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes","tests":[{"text":"<p>Your <code>h1</code> element should have the class <code>pink-text</code>.</p>","testString":"assert($('h1').hasClass('pink-text'));"},{"text":"<p>Your <code>h1</code> element should have the class <code>blue-text</code>.</p>","testString":"assert($('h1').hasClass('blue-text'));"},{"text":"<p>Your <code>h1</code> element should have the id of <code>orange-text</code>.</p>","testString":"assert($('h1').attr('id') === 'orange-text');"},{"text":"<p>There should be only one <code>h1</code> element.</p>","testString":"assert($('h1').length === 1);"},{"text":"<p>Your <code>orange-text</code> id should have a CSS declaration.</p>","testString":"assert(code.match(/#orange-text\\s*{/gi));"},{"text":"<p>Your <code>h1</code> should not have any <code>style</code> attributes.</p>","testString":"assert(!code.match(/<h1.*style.*>/gi));"},{"text":"<p>Your <code>h1</code> element should be orange.</p>","testString":"assert($('h1').css('color') === 'rgb(255, 165, 0)');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<style>\n  body {\n    background-color: black;\n    font-family: monospace;\n    color: green;\n  }\n  .pink-text {\n    color: pink;\n  }\n  .blue-text {\n    color: blue;\n  }\n</style>\n<h1 class=\"pink-text blue-text\">Hello World!</h1>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/responsive-web-design/#basic-css","dashedName":"override-class-declarations-by-styling-id-attributes","certification":"responsive-web-design","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"responsive-web-design","block":"basic-css","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-css","nextChallengePath":"/learn/responsive-web-design/basic-css/override-class-declarations-with-inline-styles","prevChallengePath":"/learn/responsive-web-design/basic-css/override-styles-in-subsequent-css","id":"bad87fee1348bd8aedf06756"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<style>@media (max-width: 350px) {:root {--penguin-size: 200px; --penguin-skin: black;}}</style>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/responsive-web-design/basic-css/override-class-declarations-by-styling-id-attributes"}},
    "staticQueryHashes": ["1800977889","4268002518"]}