{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/json-apis-and-ajax/get-json-with-the-javascript-fetch-method",
    "result": {"data":{"challengeNode":{"challenge":{"block":"json-apis-and-ajax","title":"Get JSON with the JavaScript fetch method","description":"<section id=\"description\">\n<p>Another way to request external data is to use the JavaScript <code>fetch()</code> method. It is equivalent to <code>XMLHttpRequest</code>, but the syntax is considered easier to understand.</p>\n<p>Here is the code for making a GET request to <code>/json/cats.json</code></p>\n<pre><code class=\"language-js\">\nfetch('/json/cats.json')\n  .then(response => response.json())\n  .then(data => {\n    document.getElementById('message').innerHTML = JSON.stringify(data);\n  })\n\n</code></pre>\n<p>Take a look at each piece of this code.</p>\n<p>The first line is the one that makes the request. So, <code>fetch(URL)</code> makes a <code>GET</code> request to the URL specified. The method returns a Promise.</p>\n<p>After a Promise is returned, if the request was successful, the <code>then</code> method is executed, which takes the response and converts it to JSON format.</p>\n<p>The <code>then</code> method also returns a Promise, which is handled by the next <code>then</code> method. The argument in the second <code>then</code> is the JSON object you are looking for!</p>\n<p>Now, it selects the element that will receive the data by using <code>document.getElementById()</code>. Then it modifies the HTML code of the element by inserting a string created from the JSON object returned from the request.</p>\n</section>","id":"5ccfad82bb2dc6c965a848e5","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Update the code to create and send a <code>GET</code> request to the freeCodeCamp Cat Photo API. But this time, using the <code>fetch</code> method instead of <code>XMLHttpRequest</code>.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301501,"fields":{"blockName":"json-apis-and-ajax","slug":"/learn/data-visualization/json-apis-and-ajax/get-json-with-the-javascript-fetch-method","tests":[{"text":"<p>Your code should use the fetched data to replace the inner HTML</p>","testString":"const catData = \"dummy data\";\nconst ref = fetch;\nfetch = () => Promise.resolve({ json: () => catData });\nasync () => {\n  try {\n    document.getElementById(\"getMessage\").click();\n    await new Promise((resolve, reject) => setTimeout(() => resolve(), 250));\n  } catch (error) {\n    console.log(error);\n  } finally {\n    fetch = ref;\n    assert.equal(\n      document.getElementById(\"message\").textContent,\n      JSON.stringify(catData)\n    );\n  }\n};"},{"text":"<p>Your code should make a <code>GET</code> request with <code>fetch</code>.</p>","testString":"assert(code.match(/fetch\\s*\\(\\s*('|\")\\/json\\/cats\\.json\\1\\s*\\)/g));"},{"text":"<p>Your code should use <code>then</code> to convert the response to JSON.</p>","testString":"assert(\n  code.match(\n    /\\.then\\s*\\(\\s*\\(?(?<var>\\w+)\\)?\\s*=>\\s*\\k<var>\\s*\\.json\\s*\\(\\s*\\)\\s*\\)/g\n  )\n);"},{"text":"<p>Your code should use <code>then</code> to handle the data converted to JSON by the other <code>then</code>.</p>","testString":"assert(__helpers.removeWhiteSpace(code).match(/\\.then\\(\\(?\\w+\\)?=>{[^}]*}\\)/g));"},{"text":"<p>Your code should get the element with id <code>message</code> and change its inner HTML to the string of JSON data.</p>","testString":"assert(\n  __helpers.removeWhiteSpace(code).match(\n    /document\\.getElementById\\(('|\")message\\1\\)\\.innerHTML=JSON\\.stringify\\(?\\w+\\)/g\n  )\n);"}]},"required":[{"link":"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css","src":null}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<script>\n  document.addEventListener('DOMContentLoaded',function(){\n    document.getElementById('getMessage').onclick= () => {\n      // Add your code below this line\n\n\n      // Add your code above this line\n    };\n  });\n</script>\n<style>\n  body {\n    text-align: center;\n    font-family: \"Helvetica\", sans-serif;\n  }\n  h1 {\n    font-size: 2em;\n    font-weight: bold;\n  }\n  .box {\n    border-radius: 5px;\n    background-color: #eee;\n    padding: 20px 5px;\n  }\n  button {\n    color: white;\n    background-color: #4791d0;\n    border-radius: 5px;\n    border: 1px solid #4791d0;\n    padding: 5px 10px 8px 10px;\n  }\n  button:hover {\n    background-color: #0F5897;\n    border: 1px solid #0F5897;\n  }\n</style>\n<h1>Cat Photo Finder</h1>\n<p id=\"message\" class=\"box\">\n  The message will go here\n</p>\n<p>\n  <button id=\"getMessage\">\n    Get Message\n  </button>\n</p>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#json-apis-and-ajax","dashedName":"get-json-with-the-javascript-fetch-method","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"json-apis-and-ajax","isFirstStep":false,"template":null,"required":[{"link":"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css","src":null}],"nextBlock":"json-apis-and-ajax","nextChallengePath":"/learn/data-visualization/json-apis-and-ajax/access-the-json-data-from-an-api","prevChallengePath":"/learn/data-visualization/json-apis-and-ajax/get-json-with-the-javascript-xmlhttprequest-method","id":"5ccfad82bb2dc6c965a848e5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<script>\n  document.addEventListener('DOMContentLoaded', function(){\n    document.getElementById('sendMessage').onclick = function(){\n\n      const userName = document.getElementById('name').value;\n      const url = 'https://jsonplaceholder.typicode.com/posts';\n      // Add your code below this line\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 201){\n          const serverResponse = JSON.parse(xhr.response);\n          document.getElementsByClassName('message')[0].textContent = serverResponse.userName + serverResponse.suffix;\n       }\n     };\n     const body = JSON.stringify({ userName: userName, suffix: ' loves cats!' });\n     xhr.send(body);\n      // Add your code above this line\n    };\n  });\n</script>\n\n<style>\n  body {\n    text-align: center;\n    font-family: \"Helvetica\", sans-serif;\n  }\n  h1 {\n    font-size: 2em;\n    font-weight: bold;\n  }\n  .box {\n    border-radius: 5px;\n    background-color: #eee;\n    padding: 20px 5px;\n  }\n  button {\n    color: white;\n    background-color: #4791d0;\n    border-radius: 5px;\n    border: 1px solid #4791d0;\n    padding: 5px 10px 8px 10px;\n  }\n  button:hover {\n    background-color: #0F5897;\n    border: 1px solid #0F5897;\n  }\n</style>\n\n<h1>Cat Friends</h1>\n<p class=\"message\">\n  Reply from Server will be here\n</p>\n<p>\n  <label for=\"name\">Your name:\n    <input type=\"text\" id=\"name\"/>\n  </label>\n  <button id=\"sendMessage\">\n    Send Message\n  </button>\n</p>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/json-apis-and-ajax/get-json-with-the-javascript-fetch-method"}},
    "staticQueryHashes": ["1800977889","4268002518"]}