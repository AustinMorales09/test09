{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/json-apis-and-ajax/access-the-json-data-from-an-api",
    "result": {"data":{"challengeNode":{"challenge":{"block":"json-apis-and-ajax","title":"Access the JSON Data from an API","description":"<section id=\"description\">\n<p>In the previous challenge, you saw how to get JSON data from the freeCodeCamp Cat Photo API.</p>\n<p>Now you'll take a closer look at the returned data to better understand the JSON format. Recall some notation in JavaScript:</p>\n<blockquote>[ ] -> Square brackets represent an array.<br>{ } -> Curly brackets represent an object.<br>\" \" -> Double quotes represent a string. They are also used for key names in JSON.</blockquote>\n<p>Understanding the structure of the data that an API returns is important because it influences how you retrieve the values you need.</p>\n<p>On the right, click the <code>Get Message</code> button to load the freeCodeCamp Cat Photo API JSON into the HTML.</p>\n<p>The first and last character you see in the JSON data are square brackets <code>[ ]</code>. This means that the returned data is an array. The second character in the JSON data is a curly <code>{</code> bracket, which starts an object. Looking closely, you can see that there are three separate objects. The JSON data is an array of three objects, where each object contains information about a cat photo.</p>\n<p>You learned earlier that objects contain \"key-value pairs\" that are separated by commas. In the Cat Photo example, the first object has <code>\"id\":0</code> where <code>id</code> is a key and <code>0</code> is its corresponding value. Similarly, there are keys for <code>imageLink</code>, <code>altText</code>, and <code>codeNames</code>. Each cat photo object has these same keys, but with different values.</p>\n<p>Another interesting \"key-value pair\" in the first object is <code>\"codeNames\":[\"Juggernaut\",\"Mrs. Wallace\",\"ButterCup\"]</code>. Here <code>codeNames</code> is the key and its value is an array of three strings. It's possible to have arrays of objects as well as a key with an array as a value.</p>\n<p>Remember how to access data in arrays and objects. Arrays use bracket notation to access a specific index of an item. Objects use either bracket or dot notation to access the value of a given property. Here's an example that prints the <code>altText</code> property of the first cat photo - note that the parsed JSON data in the editor is saved in a variable called <code>json</code>:</p>\n<pre><code class=\"language-js\">console.log(json[0].altText);\n</code></pre>\n<p>The console would display the string <code>A white cat wearing a green helmet shaped melon on its head.</code>.</p>\n</section>","id":"587d7fae367417b2b2512be4","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>For the cat with the <code>id</code> of 2, print to the console the second value in the <code>codeNames</code> array. You should use bracket and dot notation on the object (which is saved in the variable <code>json</code>) to access the value.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301499,"fields":{"blockName":"json-apis-and-ajax","slug":"/learn/data-visualization/json-apis-and-ajax/access-the-json-data-from-an-api","tests":[{"text":"<p>Your code should use bracket and dot notation to access the proper code name, and print <code>Loki</code> to the console.</p>","testString":"assert(\n  code.match(\n    /console\\s*\\.\\s*log\\s*\\(\\s*json\\s*\\[2\\]\\s*(\\.\\s*codeNames|\\[\\s*('|`|\")codeNames\\2\\s*\\])\\s*\\[\\s*1\\s*\\]\\s*\\)/g\n  )\n);"}]},"required":[{"link":"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css","src":null}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<script>\n  document.addEventListener('DOMContentLoaded', function(){\n    document.getElementById('getMessage').onclick = function(){\n      const req = new XMLHttpRequest();\n      req.open(\"GET\",'/json/cats.json', true);\n      req.send();\n      req.onload=function(){\n        const json = JSON.parse(req.responseText);\n        document.getElementsByClassName('message')[0].innerHTML = JSON.stringify(json);\n        // Add your code below this line\n\n        // Add your code above this line\n      };\n    };\n  });\n</script>\n\n<style>\n  body {\n    text-align: center;\n    font-family: \"Helvetica\", sans-serif;\n  }\n  h1 {\n    font-size: 2em;\n    font-weight: bold;\n  }\n  .box {\n    border-radius: 5px;\n    background-color: #eee;\n    padding: 20px 5px;\n  }\n  button {\n    color: white;\n    background-color: #4791d0;\n    border-radius: 5px;\n    border: 1px solid #4791d0;\n    padding: 5px 10px 8px 10px;\n  }\n  button:hover {\n    background-color: #0F5897;\n    border: 1px solid #0F5897;\n  }\n</style>\n\n<h1>Cat Photo Finder</h1>\n<p class=\"message box\">\n  The message will go here\n</p>\n<p>\n  <button id=\"getMessage\">\n    Get Message\n  </button>\n</p>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#json-apis-and-ajax","dashedName":"access-the-json-data-from-an-api","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"json-apis-and-ajax","isFirstStep":false,"template":null,"required":[{"link":"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css","src":null}],"nextBlock":"json-apis-and-ajax","nextChallengePath":"/learn/data-visualization/json-apis-and-ajax/convert-json-data-to-html","prevChallengePath":"/learn/data-visualization/json-apis-and-ajax/get-json-with-the-javascript-fetch-method","id":"587d7fae367417b2b2512be4"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<script>\n  document.addEventListener('DOMContentLoaded', function(){\n    document.getElementById('sendMessage').onclick = function(){\n\n      const userName = document.getElementById('name').value;\n      const url = 'https://jsonplaceholder.typicode.com/posts';\n      // Add your code below this line\n      const xhr = new XMLHttpRequest();\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 201){\n          const serverResponse = JSON.parse(xhr.response);\n          document.getElementsByClassName('message')[0].textContent = serverResponse.userName + serverResponse.suffix;\n       }\n     };\n     const body = JSON.stringify({ userName: userName, suffix: ' loves cats!' });\n     xhr.send(body);\n      // Add your code above this line\n    };\n  });\n</script>\n\n<style>\n  body {\n    text-align: center;\n    font-family: \"Helvetica\", sans-serif;\n  }\n  h1 {\n    font-size: 2em;\n    font-weight: bold;\n  }\n  .box {\n    border-radius: 5px;\n    background-color: #eee;\n    padding: 20px 5px;\n  }\n  button {\n    color: white;\n    background-color: #4791d0;\n    border-radius: 5px;\n    border: 1px solid #4791d0;\n    padding: 5px 10px 8px 10px;\n  }\n  button:hover {\n    background-color: #0F5897;\n    border: 1px solid #0F5897;\n  }\n</style>\n\n<h1>Cat Friends</h1>\n<p class=\"message\">\n  Reply from Server will be here\n</p>\n<p>\n  <label for=\"name\">Your name:\n    <input type=\"text\" id=\"name\"/>\n  </label>\n  <button id=\"sendMessage\">\n    Send Message\n  </button>\n</p>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/json-apis-and-ajax/access-the-json-data-from-an-api"}},
    "staticQueryHashes": ["1800977889","4268002518"]}