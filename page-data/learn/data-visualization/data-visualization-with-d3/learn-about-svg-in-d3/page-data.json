{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/data-visualization-with-d3/learn-about-svg-in-d3",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-visualization-with-d3","title":"Learn About SVG in D3","description":"<section id=\"description\">\n<p><dfn>SVG</dfn> stands for <dfn>Scalable Vector Graphics</dfn>.</p>\n<p>Here \"scalable\" means that, if you zoom in or out on an object, it would not appear pixelated. It scales with the display system, whether it's on a small mobile screen or a large TV monitor.</p>\n<p>SVG is used to make common geometric shapes. Since D3 maps data into a visual representation, it uses SVG to create the shapes for the visualization. SVG shapes for a web page must go within an HTML <code>svg</code> tag.</p>\n<p>CSS can be scalable when styles use relative units (such as <code>vh</code>, <code>vw</code>, or percentages), but using SVG is more flexible to build data visualizations.</p>\n</section>","id":"587d7fa8367417b2b2512bcb","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add an <code>svg</code> node to the <code>body</code> using <code>append()</code>. Give it a <code>width</code> attribute set to the provided <code>w</code> constant and a <code>height</code> attribute set to the provided <code>h</code> constant using the <code>attr()</code> or <code>style()</code> methods for each. You'll see it in the output because there's a <code>background-color</code> of pink applied to it in the <code>style</code> tag.</p>\n<p><strong>Note:</strong> When using <code>attr()</code> width and height attributes do not have units. This is the building block of scaling - the element will always have a 5:1 width to height ratio, no matter what the zoom level is.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301489,"fields":{"blockName":"data-visualization-with-d3","slug":"/learn/data-visualization/data-visualization-with-d3/learn-about-svg-in-d3","tests":[{"text":"<p>Your document should have 1 <code>svg</code> element.</p>","testString":"assert($('svg').length == 1);"},{"text":"<p>The <code>svg</code> element should have a <code>width</code> attribute set to <code>500</code> or styled to have a width of <code>500px</code>.</p>","testString":"assert($('svg').attr('width') == '500' || $('svg').css('width') == '500px');"},{"text":"<p>The <code>svg</code> element should have a <code>height</code> attribute set to <code>100</code> or styled to have a height of <code>100px</code>.</p>","testString":"assert($('svg').attr('height') == '100' || $('svg').css('height') == '100px');"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<style>\n  svg {\n    background-color: pink;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  // Add your code below this line\n\n\n\n                  // Add your code above this line\n  </script>\n</body>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#data-visualization-with-d3","dashedName":"learn-about-svg-in-d3","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"data-visualization-with-d3","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"nextBlock":"data-visualization-with-d3","nextChallengePath":"/learn/data-visualization/data-visualization-with-d3/display-shapes-with-svg","prevChallengePath":"/learn/data-visualization/data-visualization-with-d3/change-the-presentation-of-a-bar-chart","id":"587d7fa8367417b2b2512bcb"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"circle\")\n       .data(dataset)\n       .enter()\n       .append(\"circle\")\n       .attr(\"cx\", (d) => xScale(d[0]))\n       .attr(\"cy\",(d) => yScale(d[1]))\n       .attr(\"r\", (d) => 5);\n\n    svg.selectAll(\"text\")\n       .data(dataset)\n       .enter()\n       .append(\"text\")\n       .text((d) =>  (d[0] + \",\" + d[1]))\n       .attr(\"x\", (d) => xScale(d[0] + 10))\n       .attr(\"y\", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    \n    const yAxis = d3.axisLeft(yScale);\n    \n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n       .call(xAxis);\n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(\" + padding + \",0)\")\n       .call(yAxis)\n\n  </script>\n</body>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/data-visualization-with-d3/learn-about-svg-in-d3"}},
    "staticQueryHashes": ["1800977889","4268002518"]}