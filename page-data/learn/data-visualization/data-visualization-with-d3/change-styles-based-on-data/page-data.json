{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/data-visualization-with-d3/change-styles-based-on-data",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-visualization-with-d3","title":"Change Styles Based on Data","description":"<section id=\"description\">\n<p>D3 is about visualization and presentation of data. It's likely you'll want to change the styling of elements based on the data.\nFor example, you may want to color a data point blue if it has a value less than 20, and red otherwise. You can use a callback function in the <code>style()</code> method and include the conditional logic. The callback function uses the <code>d</code> parameter to represent the data point:</p>\n<pre><code class=\"language-js\">selection.style(\"color\", (d) => {\n\n});\n</code></pre>\n<p>The <code>style()</code> method is not limited to setting the <code>color</code> - it can be used with other CSS properties as well.</p>\n</section>","id":"587d7fa7367417b2b2512bc7","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the <code>style()</code> method to the code in the editor to set the <code>color</code> of the <code>h2</code> elements conditionally. Write the callback function so if the data value is less than 20, it returns red, otherwise it returns green.</p>\n<p><strong>Note:</strong> You can use if-else logic, or the ternary operator.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301479,"fields":{"blockName":"data-visualization-with-d3","slug":"/learn/data-visualization/data-visualization-with-d3/change-styles-based-on-data","tests":[{"text":"<p>The first <code>h2</code> should have a <code>color</code> of red.</p>","testString":"assert($('h2').eq(0).css('color') == 'rgb(255, 0, 0)');"},{"text":"<p>The second <code>h2</code> should have a <code>color</code> of green.</p>","testString":"assert($('h2').eq(1).css('color') == 'rgb(0, 128, 0)');"},{"text":"<p>The third <code>h2</code> should have a <code>color</code> of green.</p>","testString":"assert($('h2').eq(2).css('color') == 'rgb(0, 128, 0)');"},{"text":"<p>The fourth <code>h2</code> should have a <code>color</code> of red.</p>","testString":"assert($('h2').eq(3).css('color') == 'rgb(255, 0, 0)');"},{"text":"<p>The fifth <code>h2</code> should have a <code>color</code> of green.</p>","testString":"assert($('h2').eq(4).css('color') == 'rgb(0, 128, 0)');"},{"text":"<p>The sixth <code>h2</code> should have a <code>color</code> of red.</p>","testString":"assert($('h2').eq(5).css('color') == 'rgb(255, 0, 0)');"},{"text":"<p>The seventh <code>h2</code> should have a <code>color</code> of green.</p>","testString":"assert($('h2').eq(6).css('color') == 'rgb(0, 128, 0)');"},{"text":"<p>The eighth <code>h2</code> should have a <code>color</code> of red.</p>","testString":"assert($('h2').eq(7).css('color') == 'rgb(255, 0, 0)');"},{"text":"<p>The ninth <code>h2</code> should have a <code>color</code> of red.</p>","testString":"assert($('h2').eq(8).css('color') == 'rgb(255, 0, 0)');"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"h2\")\n      .data(dataset)\n      .enter()\n      .append(\"h2\")\n      .text((d) => (d + \" USD\"))\n      // Add your code below this line\n\n\n\n      // Add your code above this line\n  </script>\n</body>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#data-visualization-with-d3","dashedName":"change-styles-based-on-data","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"data-visualization-with-d3","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"nextBlock":"data-visualization-with-d3","nextChallengePath":"/learn/data-visualization/data-visualization-with-d3/add-classes-with-d3","prevChallengePath":"/learn/data-visualization/data-visualization-with-d3/add-inline-styling-to-elements","id":"587d7fa7367417b2b2512bc7"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"circle\")\n       .data(dataset)\n       .enter()\n       .append(\"circle\")\n       .attr(\"cx\", (d) => xScale(d[0]))\n       .attr(\"cy\",(d) => yScale(d[1]))\n       .attr(\"r\", (d) => 5);\n\n    svg.selectAll(\"text\")\n       .data(dataset)\n       .enter()\n       .append(\"text\")\n       .text((d) =>  (d[0] + \",\" + d[1]))\n       .attr(\"x\", (d) => xScale(d[0] + 10))\n       .attr(\"y\", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    \n    const yAxis = d3.axisLeft(yScale);\n    \n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n       .call(xAxis);\n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(\" + padding + \",0)\")\n       .call(yAxis)\n\n  </script>\n</body>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/data-visualization-with-d3/change-styles-based-on-data"}},
    "staticQueryHashes": ["1800977889","4268002518"]}