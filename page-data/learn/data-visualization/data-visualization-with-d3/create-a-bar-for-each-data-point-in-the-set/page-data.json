{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/data-visualization-with-d3/create-a-bar-for-each-data-point-in-the-set",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-visualization-with-d3","title":"Create a Bar for Each Data Point in the Set","description":"<section id=\"description\">\n<p>The last challenge added only one rectangle to the <code>svg</code> element to represent a bar. Here, you'll combine what you've learned so far about <code>data()</code>, <code>enter()</code>, and SVG shapes to create and append a rectangle for each data point in <code>dataset</code>.</p>\n<p>A previous challenge showed the format for how to create and append a <code>div</code> for each item in <code>dataset</code>:</p>\n<pre><code class=\"language-js\">d3.select(\"body\").selectAll(\"div\")\n  .data(dataset)\n  .enter()\n  .append(\"div\")\n</code></pre>\n<p>There are a few differences working with <code>rect</code> elements instead of <code>div</code> elements. The <code>rect</code> elements must be appended to an <code>svg</code> element, not directly to the <code>body</code>. Also, you need to tell D3 where to place each <code>rect</code> within the <code>svg</code> area. The bar placement will be covered in the next challenge.</p>\n</section>","id":"587d7fa8367417b2b2512bcd","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use the <code>data()</code>, <code>enter()</code>, and <code>append()</code> methods to create and append a <code>rect</code> for each item in <code>dataset</code>. The bars should display all on top of each other; this will be fixed in the next challenge.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301482,"fields":{"blockName":"data-visualization-with-d3","slug":"/learn/data-visualization/data-visualization-with-d3/create-a-bar-for-each-data-point-in-the-set","tests":[{"text":"<p>Your document should have 9 <code>rect</code> elements.</p>","testString":"assert($('rect').length == 9);"},{"text":"<p>Your code should use the <code>data()</code> method.</p>","testString":"assert(code.match(/\\.data/g));"},{"text":"<p>Your code should use the <code>enter()</code> method.</p>","testString":"assert(code.match(/\\.enter/g));"},{"text":"<p>Your code should use the <code>append()</code> method.</p>","testString":"assert(code.match(/\\.append/g));"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       // Add your code below this line\n\n\n\n       // Add your code above this line\n       .attr(\"x\", 0)\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", 100);\n  </script>\n</body>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#data-visualization-with-d3","dashedName":"create-a-bar-for-each-data-point-in-the-set","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"data-visualization-with-d3","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"nextBlock":"data-visualization-with-d3","nextChallengePath":"/learn/data-visualization/data-visualization-with-d3/dynamically-set-the-coordinates-for-each-bar","prevChallengePath":"/learn/data-visualization/data-visualization-with-d3/display-shapes-with-svg","id":"587d7fa8367417b2b2512bcd"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"circle\")\n       .data(dataset)\n       .enter()\n       .append(\"circle\")\n       .attr(\"cx\", (d) => xScale(d[0]))\n       .attr(\"cy\",(d) => yScale(d[1]))\n       .attr(\"r\", (d) => 5);\n\n    svg.selectAll(\"text\")\n       .data(dataset)\n       .enter()\n       .append(\"text\")\n       .text((d) =>  (d[0] + \",\" + d[1]))\n       .attr(\"x\", (d) => xScale(d[0] + 10))\n       .attr(\"y\", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    \n    const yAxis = d3.axisLeft(yScale);\n    \n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n       .call(xAxis);\n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(\" + padding + \",0)\")\n       .call(yAxis)\n\n  </script>\n</body>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/data-visualization-with-d3/create-a-bar-for-each-data-point-in-the-set"}},
    "staticQueryHashes": ["1800977889","4268002518"]}