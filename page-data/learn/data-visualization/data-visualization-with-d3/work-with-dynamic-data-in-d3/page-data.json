{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/data-visualization-with-d3/work-with-dynamic-data-in-d3",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-visualization-with-d3","title":"Work with Dynamic Data in D3","description":"<section id=\"description\">\n<p>The last two challenges cover the basics of displaying data dynamically with D3 using the <code>data()</code> and <code>enter()</code> methods. These methods take a data set and, together with the <code>append()</code> method, create a new DOM element for each entry in the data set.</p>\n<p>In the previous challenge, you created a new <code>h2</code> element for each item in the <code>dataset</code> array, but they all contained the same text, <code>New Title</code>. This is because you have not made use of the data that is bound to each of the <code>h2</code> elements.</p>\n<p>The D3 <code>text()</code> method can take a string or a callback function as an argument:</p>\n<pre><code class=\"language-js\">selection.text((d) => d)\n</code></pre>\n<p>In the example above, the parameter <code>d</code> refers to a single entry in the dataset that a selection is bound to.</p>\n<p>Using the current example as context, the first <code>h2</code> element is bound to 12, the second <code>h2</code> element is bound to 31, the third <code>h2</code> element is bound to 22, and so on.</p>\n</section>","id":"587d7fa7367417b2b2512bc5","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the <code>text()</code> method so that each <code>h2</code> element displays the corresponding value from the <code>dataset</code> array with a single space and the string <code>USD</code>. For example, the first heading should be <code>12 USD</code>.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301498,"fields":{"blockName":"data-visualization-with-d3","slug":"/learn/data-visualization/data-visualization-with-d3/work-with-dynamic-data-in-d3","tests":[{"text":"<p>The first <code>h2</code> should have the text <code>12 USD</code>.</p>","testString":"assert($('h2').eq(0).text() == '12 USD');"},{"text":"<p>The second <code>h2</code> should have the text <code>31 USD</code>.</p>","testString":"assert($('h2').eq(1).text() == '31 USD');"},{"text":"<p>The third <code>h2</code> should have the text <code>22 USD</code>.</p>","testString":"assert($('h2').eq(2).text() == '22 USD');"},{"text":"<p>The fourth <code>h2</code> should have the text <code>17 USD</code>.</p>","testString":"assert($('h2').eq(3).text() == '17 USD');"},{"text":"<p>The fifth <code>h2</code> should have the text <code>25 USD</code>.</p>","testString":"assert($('h2').eq(4).text() == '25 USD');"},{"text":"<p>The sixth <code>h2</code> should have the text <code>18 USD</code>.</p>","testString":"assert($('h2').eq(5).text() == '18 USD');"},{"text":"<p>The seventh <code>h2</code> should have the text <code>29 USD</code>.</p>","testString":"assert($('h2').eq(6).text() == '29 USD');"},{"text":"<p>The eighth <code>h2</code> should have the text <code>14 USD</code>.</p>","testString":"assert($('h2').eq(7).text() == '14 USD');"},{"text":"<p>The ninth <code>h2</code> should have the text <code>9 USD</code>.</p>","testString":"assert($('h2').eq(8).text() == '9 USD');"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"h2\")\n      .data(dataset)\n      .enter()\n      .append(\"h2\")\n      // Add your code below this line\n\n      .text(\"New Title\");\n\n      // Add your code above this line\n  </script>\n</body>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#data-visualization-with-d3","dashedName":"work-with-dynamic-data-in-d3","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"data-visualization-with-d3","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"nextBlock":"data-visualization-with-d3","nextChallengePath":"/learn/data-visualization/data-visualization-with-d3/add-inline-styling-to-elements","prevChallengePath":"/learn/data-visualization/data-visualization-with-d3/work-with-data-in-d3","id":"587d7fa7367417b2b2512bc5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"circle\")\n       .data(dataset)\n       .enter()\n       .append(\"circle\")\n       .attr(\"cx\", (d) => xScale(d[0]))\n       .attr(\"cy\",(d) => yScale(d[1]))\n       .attr(\"r\", (d) => 5);\n\n    svg.selectAll(\"text\")\n       .data(dataset)\n       .enter()\n       .append(\"text\")\n       .text((d) =>  (d[0] + \",\" + d[1]))\n       .attr(\"x\", (d) => xScale(d[0] + 10))\n       .attr(\"y\", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    \n    const yAxis = d3.axisLeft(yScale);\n    \n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n       .call(xAxis);\n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(\" + padding + \",0)\")\n       .call(yAxis)\n\n  </script>\n</body>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/data-visualization-with-d3/work-with-dynamic-data-in-d3"}},
    "staticQueryHashes": ["1800977889","4268002518"]}