{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/data-visualization/data-visualization-with-d3/set-a-domain-and-a-range-on-a-scale",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-visualization-with-d3","title":"Set a Domain and a Range on a Scale","description":"<section id=\"description\">\n<p>By default, scales use the identity relationship. This means the input value maps to the output value. However, scales can be much more flexible and interesting.</p>\n<p>Say a dataset has values ranging from 50 to 480. This is the input information for a scale, also known as the <dfn>domain</dfn>.</p>\n<p>You want to map those points along the <code>x</code> axis on the SVG, between 10 units and 500 units. This is the output information, also known as the <dfn>range</dfn>.</p>\n<p>The <code>domain()</code> and <code>range()</code> methods set these values for the scale. Both methods take an array of at least two elements as an argument. Here's an example:</p>\n<pre><code class=\"language-js\">scale.domain([50, 480]);\nscale.range([10, 500]);\nscale(50)\nscale(480)\nscale(325)\nscale(750)\nd3.scaleLinear()\n</code></pre>\n<p>In order, the following values would be displayed in the console: <code>10</code>, <code>500</code>, <code>323.37</code>, and <code>807.67</code>.</p>\n<p>Notice that the scale uses the linear relationship between the domain and range values to figure out what the output should be for a given number. The minimum value in the domain (50) maps to the minimum value (10) in the range.</p>\n</section>","id":"587d7fac367417b2b2512bdb","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a scale and set its domain to <code>[250, 500]</code> and range to <code>[10, 150]</code>.</p>\n<p><strong>Note:</strong> You can chain the <code>domain()</code> and <code>range()</code> methods onto the <code>scale</code> variable.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"data-visualization","translationPending":false,"forumTopicId":301491,"fields":{"blockName":"data-visualization-with-d3","slug":"/learn/data-visualization/data-visualization-with-d3/set-a-domain-and-a-range-on-a-scale","tests":[{"text":"<p>Your code should use the <code>domain()</code> method.</p>","testString":"assert(code.match(/\\.domain/g));"},{"text":"<p>The <code>domain()</code> of the <code>scale</code> should be set to <code>[250, 500]</code>.</p>","testString":"assert(JSON.stringify(scale.domain()) == JSON.stringify([250, 500]));"},{"text":"<p>Your code should use the <code>range()</code> method.</p>","testString":"assert(code.match(/\\.range/g));"},{"text":"<p>The <code>range()</code> of the <code>scale</code> should be set to <code>[10, 150]</code>.</p>","testString":"assert(JSON.stringify(scale.range()) == JSON.stringify([10, 150]));"},{"text":"<p>The text in the <code>h2</code> should be <code>-102</code>.</p>","testString":"assert($('h2').text() == '-102');"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<body>\n  <script>\n    // Add your code below this line\n    const scale = d3.scaleLinear();\n\n\n\n    // Add your code above this line\n    const output = scale(50);\n    d3.select(\"body\")\n      .append(\"h2\")\n      .text(output);\n  </script>\n</body>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/data-visualization/#data-visualization-with-d3","dashedName":"set-a-domain-and-a-range-on-a-scale","certification":"data-visualization","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"data-visualization","block":"data-visualization-with-d3","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"}],"nextBlock":"data-visualization-with-d3","nextChallengePath":"/learn/data-visualization/data-visualization-with-d3/use-the-d3-max-and-d3-min-functions-to-find-minimum-and-maximum-values-in-a-dataset","prevChallengePath":"/learn/data-visualization/data-visualization-with-d3/create-a-linear-scale-with-d3","id":"587d7fac367417b2b2512bdb"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"html","contents":"<body>\n  <script>\n    const dataset = [\n                  [ 34,     78 ],\n                  [ 109,   280 ],\n                  [ 310,   120 ],\n                  [ 79,   411 ],\n                  [ 420,   220 ],\n                  [ 233,   145 ],\n                  [ 333,   96 ],\n                  [ 222,    333 ],\n                  [ 78,    320 ],\n                  [ 21,   123 ]\n                ];\n\n    const w = 500;\n    const h = 500;\n    const padding = 60;\n\n    const xScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[0])])\n                     .range([padding, w - padding]);\n\n    const yScale = d3.scaleLinear()\n                     .domain([0, d3.max(dataset, (d) => d[1])])\n                     .range([h - padding, padding]);\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"circle\")\n       .data(dataset)\n       .enter()\n       .append(\"circle\")\n       .attr(\"cx\", (d) => xScale(d[0]))\n       .attr(\"cy\",(d) => yScale(d[1]))\n       .attr(\"r\", (d) => 5);\n\n    svg.selectAll(\"text\")\n       .data(dataset)\n       .enter()\n       .append(\"text\")\n       .text((d) =>  (d[0] + \",\" + d[1]))\n       .attr(\"x\", (d) => xScale(d[0] + 10))\n       .attr(\"y\", (d) => yScale(d[1]))\n\n    const xAxis = d3.axisBottom(xScale);\n    \n    const yAxis = d3.axisLeft(yScale);\n    \n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n       .call(xAxis);\n\n    svg.append(\"g\")\n       .attr(\"transform\", \"translate(\" + padding + \",0)\")\n       .call(yAxis)\n\n  </script>\n</body>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"}]}},"slug":"/learn/data-visualization/data-visualization-with-d3/set-a-domain-and-a-range-on-a-scale"}},
    "staticQueryHashes": ["1800977889","4268002518"]}