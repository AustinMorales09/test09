{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/react/define-an-html-class-in-jsx",
    "result": {"data":{"challengeNode":{"challenge":{"block":"react","title":"Define an HTML Class in JSX","description":"<section id=\"description\">\n<p>Now that you're getting comfortable writing JSX, you may be wondering how it differs from HTML.</p>\n<p>So far, it may seem that HTML and JSX are exactly the same.</p>\n<p>One key difference in JSX is that you can no longer use the word <code>class</code> to define HTML classes. This is because <code>class</code> is a reserved word in JavaScript. Instead, JSX uses <code>className</code>.</p>\n<p>In fact, the naming convention for all HTML attributes and event references in JSX become camelCase. For example, a click event in JSX is <code>onClick</code>, instead of <code>onclick</code>. Likewise, <code>onchange</code> becomes <code>onChange</code>. While this is a subtle difference, it is an important one to keep in mind moving forward.</p>\n</section>","id":"5a24c314108439a4d4036160","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Apply a class of <code>myDiv</code> to the <code>div</code> provided in the JSX code.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301393,"fields":{"blockName":"react","slug":"/learn/front-end-development-libraries/react/define-an-html-class-in-jsx","tests":[{"text":"<p>The constant <code>JSX</code> should return a <code>div</code> element.</p>","testString":"assert.strictEqual(JSX.type, 'div');"},{"text":"<p>The <code>div</code> should have a class of <code>myDiv</code>.</p>","testString":"assert.strictEqual(JSX.props.className, 'myDiv');"}]},"required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexjsx","ext":"jsx","name":"index","contents":"const JSX = (\n  <div>\n    <h1>Add a class to this div</h1>\n  </div>\n);","head":"","tail":"ReactDOM.render(JSX, document.getElementById('root'))","editableRegionBoundaries":[],"history":["index.jsx"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#react","dashedName":"define-an-html-class-in-jsx","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"react","isFirstStep":false,"template":"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>","required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"nextBlock":"react","nextChallengePath":"/learn/front-end-development-libraries/react/learn-about-self-closing-jsx-tags","prevChallengePath":"/learn/front-end-development-libraries/react/render-html-elements-to-the-dom","id":"5a24c314108439a4d4036160"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"jsx","contents":"class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <div/>\n  }\n};\n\n// Change code below this line\nReactDOMServer.renderToString(<App/>);","head":"var ReactDOMServer = { renderToString(x) { return null; } };","tail":"ReactDOM.render(<App />, document.getElementById('root'))","history":["index.jsx"],"fileKey":"indexjsx"}]}},"slug":"/learn/front-end-development-libraries/react/define-an-html-class-in-jsx"}},
    "staticQueryHashes": ["1800977889","4268002518"]}