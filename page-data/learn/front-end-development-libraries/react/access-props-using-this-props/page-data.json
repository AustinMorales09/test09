{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/react/access-props-using-this-props",
    "result": {"data":{"challengeNode":{"challenge":{"block":"react","title":"Access Props Using this.props","description":"<section id=\"description\">\n<p>The last several challenges covered the basic ways to pass props to child components. But what if the child component that you're passing a prop to is an ES6 class component, rather than a stateless functional component? The ES6 class component uses a slightly different convention to access props.</p>\n<p>Anytime you refer to a class component within itself, you use the <code>this</code> keyword. To access props within a class component, you preface the code that you use to access it with <code>this</code>. For example, if an ES6 class component has a prop called <code>data</code>, you write <code>{this.props.data}</code> in JSX.</p>\n</section>","id":"5a24c314108439a4d403616e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Render an instance of the <code>Welcome</code> component in the parent component <code>App</code>. Here, give <code>Welcome</code> a prop of <code>name</code> and assign it a value of a string. Within the child, <code>Welcome</code>, access the <code>name</code> prop within the <code>strong</code> tags.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301375,"fields":{"blockName":"react","slug":"/learn/front-end-development-libraries/react/access-props-using-this-props","tests":[{"text":"<p>The <code>App</code> component should return a single <code>div</code> element.</p>","testString":"assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return mockedComponent.children().type() === 'div';\n  })()\n);"},{"text":"<p>The child of <code>App</code> should be the <code>Welcome</code> component.</p>","testString":"assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return (\n      mockedComponent.children().childAt(0).name() === 'Welcome'\n    );\n  })()\n);"},{"text":"<p>The <code>Welcome</code> component should have a prop called <code>name</code>.</p>","testString":"assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return mockedComponent.find('Welcome').props().name;\n  })()\n);"},{"text":"<p>The <code>Welcome</code> component should display the string you pass as the <code>name</code> prop within <code>strong</code> tags.</p>","testString":"assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return (\n      mockedComponent.find('strong').text() ===\n      mockedComponent.find('Welcome').props().name\n    );\n  })()\n);"}]},"required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexjsx","ext":"jsx","name":"index","contents":"class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n            { /* Change code below this line */ }\n            <Welcome />\n            { /* Change code above this line */ }\n        </div>\n    );\n  }\n};\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n          { /* Change code below this line */ }\n          <p>Hello, <strong></strong>!</p>\n          { /* Change code above this line */ }\n        </div>\n    );\n  }\n};","head":"","tail":"ReactDOM.render(<App />, document.getElementById('root'))","editableRegionBoundaries":[],"history":["index.jsx"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#react","dashedName":"access-props-using-this-props","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"react","isFirstStep":false,"template":"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>","required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"nextBlock":"react","nextChallengePath":"/learn/front-end-development-libraries/react/review-using-props-with-stateless-functional-components","prevChallengePath":"/learn/front-end-development-libraries/react/use-proptypes-to-define-the-props-you-expect","id":"5a24c314108439a4d403616e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"jsx","contents":"class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <div/>\n  }\n};\n\n// Change code below this line\nReactDOMServer.renderToString(<App/>);","head":"var ReactDOMServer = { renderToString(x) { return null; } };","tail":"ReactDOM.render(<App />, document.getElementById('root'))","history":["index.jsx"],"fileKey":"indexjsx"}]}},"slug":"/learn/front-end-development-libraries/react/access-props-using-this-props"}},
    "staticQueryHashes": ["1800977889","4268002518"]}