{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/react/create-a-component-with-composition",
    "result": {"data":{"challengeNode":{"challenge":{"block":"react","title":"Create a Component with Composition","description":"<section id=\"description\">\n<p>Now we will look at how we can compose multiple React components together. Imagine you are building an app and have created three components: a <code>Navbar</code>, <code>Dashboard</code>, and <code>Footer</code>.</p>\n<p>To compose these components together, you could create an <code>App</code> <em>parent</em> component which renders each of these three components as <em>children</em>. To render a component as a child in a React component, you include the component name written as a custom HTML tag in the JSX. For example, in the <code>render</code> method you could write:</p>\n<pre><code class=\"language-jsx\">return (\n &#x3C;App>\n  &#x3C;Navbar />\n  &#x3C;Dashboard />\n  &#x3C;Footer />\n &#x3C;/App>\n)\n</code></pre>\n<p>When React encounters a custom HTML tag that references another component (a component name wrapped in <code>&#x3C; /></code> like in this example), it renders the markup for that component in the location of the tag. This should illustrate the parent/child relationship between the <code>App</code> component and the <code>Navbar</code>, <code>Dashboard</code>, and <code>Footer</code>.</p>\n</section>","id":"5a24c314108439a4d4036164","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>In the code editor, there is a simple functional component called <code>ChildComponent</code> and a class component called <code>ParentComponent</code>. Compose the two together by rendering the <code>ChildComponent</code> within the <code>ParentComponent</code>. Make sure to close the <code>ChildComponent</code> tag with a forward slash.</p>\n<p><strong>Note:</strong> <code>ChildComponent</code> is defined with an ES6 arrow function because this is a very common practice when using React.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301383,"fields":{"blockName":"react","slug":"/learn/front-end-development-libraries/react/create-a-component-with-composition","tests":[{"text":"<p>The React component should return a single <code>div</code> element.</p>","testString":"assert(\n  (function () {\n    var shallowRender = Enzyme.shallow(React.createElement(ParentComponent));\n    return shallowRender.type() === 'div';\n  })()\n);"},{"text":"<p>The component should return two nested elements.</p>","testString":"assert(\n  (function () {\n    var shallowRender = Enzyme.shallow(React.createElement(ParentComponent));\n    return shallowRender.children().length === 2;\n  })()\n);"},{"text":"<p>The component should return the <code>ChildComponent</code> as its second child.</p>","testString":"assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(ParentComponent));\n    return (\n      mockedComponent.find('ParentComponent').find('ChildComponent').length ===\n      1\n    );\n  })()\n);"}]},"required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexjsx","ext":"jsx","name":"index","contents":"const ChildComponent = () => {\n  return (\n    <div>\n      <p>I am the child</p>\n    </div>\n  );\n};\n\nclass ParentComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h1>I am the parent</h1>\n        { /* Change code below this line */ }\n\n\n        { /* Change code above this line */ }\n      </div>\n    );\n  }\n};","head":"","tail":"ReactDOM.render(<ParentComponent />, document.getElementById('root'))","editableRegionBoundaries":[],"history":["index.jsx"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#react","dashedName":"create-a-component-with-composition","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"react","isFirstStep":false,"template":"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>","required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"nextBlock":"react","nextChallengePath":"/learn/front-end-development-libraries/react/use-react-to-render-nested-components","prevChallengePath":"/learn/front-end-development-libraries/react/create-a-react-component","id":"5a24c314108439a4d4036164"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"jsx","contents":"class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <div/>\n  }\n};\n\n// Change code below this line\nReactDOMServer.renderToString(<App/>);","head":"var ReactDOMServer = { renderToString(x) { return null; } };","tail":"ReactDOM.render(<App />, document.getElementById('root'))","history":["index.jsx"],"fileKey":"indexjsx"}]}},"slug":"/learn/front-end-development-libraries/react/create-a-component-with-composition"}},
    "staticQueryHashes": ["1800977889","4268002518"]}