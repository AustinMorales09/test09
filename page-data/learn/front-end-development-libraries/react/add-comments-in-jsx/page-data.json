{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/react/add-comments-in-jsx",
    "result": {"data":{"challengeNode":{"challenge":{"block":"react","title":"Add Comments in JSX","description":"<section id=\"description\">\n<p>JSX is a syntax that gets compiled into valid JavaScript. Sometimes, for readability, you might need to add comments to your code. Like most programming languages, JSX has its own way to do this.</p>\n<p>To put comments inside JSX, you use the syntax <code>{/* */}</code> to wrap around the comment text.</p>\n</section>","id":"5a24bbe0dba28a8d3cbd4c5e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The code editor has a JSX element similar to what you created in the last challenge. Add a comment somewhere within the provided <code>div</code> element, without modifying the existing <code>h1</code> or <code>p</code> elements.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301376,"fields":{"blockName":"react","slug":"/learn/front-end-development-libraries/react/add-comments-in-jsx","tests":[{"text":"<p>The constant <code>JSX</code> should return a <code>div</code> element.</p>","testString":"assert(JSX.type === 'div');"},{"text":"<p>The <code>div</code> should contain an <code>h1</code> tag as the first element.</p>","testString":"assert(JSX.props.children[0].type === 'h1');"},{"text":"<p>The <code>div</code> should contain a <code>p</code> tag as the second element.</p>","testString":"assert(JSX.props.children[1].type === 'p');"},{"text":"<p>The existing <code>h1</code> and <code>p</code> elements should not be modified.</p>","testString":"assert(\n  JSX.props.children[0].props.children === 'This is a block of JSX' &&\n    JSX.props.children[1].props.children === \"Here's a subtitle\"\n);"},{"text":"<p>The <code>JSX</code> should use valid comment syntax.</p>","testString":"assert(/<div>[\\s\\S]*{\\s*\\/\\*[\\s\\S]*\\*\\/\\s*}[\\s\\S]*<\\/div>/.test(code));"}]},"required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexjsx","ext":"jsx","name":"index","contents":"const JSX = (\n  <div>\n    <h1>This is a block of JSX</h1>\n    <p>Here's a subtitle</p>\n  </div>\n);","head":"","tail":"ReactDOM.render(JSX, document.getElementById('root'))","editableRegionBoundaries":[],"history":["index.jsx"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#react","dashedName":"add-comments-in-jsx","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"react","isFirstStep":false,"template":"<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>","required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"}],"nextBlock":"react","nextChallengePath":"/learn/front-end-development-libraries/react/render-html-elements-to-the-dom","prevChallengePath":"/learn/front-end-development-libraries/react/create-a-complex-jsx-element","id":"5a24bbe0dba28a8d3cbd4c5e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"jsx","contents":"class App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <div/>\n  }\n};\n\n// Change code below this line\nReactDOMServer.renderToString(<App/>);","head":"var ReactDOMServer = { renderToString(x) { return null; } };","tail":"ReactDOM.render(<App />, document.getElementById('root'))","history":["index.jsx"],"fileKey":"indexjsx"}]}},"slug":"/learn/front-end-development-libraries/react/add-comments-in-jsx"}},
    "staticQueryHashes": ["1800977889","4268002518"]}