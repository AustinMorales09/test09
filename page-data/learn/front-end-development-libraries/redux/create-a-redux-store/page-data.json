{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/redux/create-a-redux-store",
    "result": {"data":{"challengeNode":{"challenge":{"block":"redux","title":"Create a Redux Store","description":"<section id=\"description\">\n<p>Redux is a state management framework that can be used with a number of different web technologies, including React.</p>\n<p>In Redux, there is a single state object that's responsible for the entire state of your application. This means if you had a React app with ten components, and each component had its own local state, the entire state of your app would be defined by a single state object housed in the Redux <code>store</code>. This is the first important principle to understand when learning Redux: the Redux store is the single source of truth when it comes to application state.</p>\n<p>This also means that any time any piece of your app wants to update state, it <strong>must</strong> do so through the Redux store. The unidirectional data flow makes it easier to track state management in your app.</p>\n</section>","id":"5a24c314108439a4d403614b","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The Redux <code>store</code> is an object which holds and manages application <code>state</code>. There is a method called <code>createStore()</code> on the Redux object, which you use to create the Redux <code>store</code>. This method takes a <code>reducer</code> function as a required argument. The <code>reducer</code> function is covered in a later challenge, and is already defined for you in the code editor. It simply takes <code>state</code> as an argument and returns <code>state</code>.</p>\n<p>Declare a <code>store</code> variable and assign it to the <code>createStore()</code> method, passing in the <code>reducer</code> as an argument.</p>\n<p><strong>Note:</strong> The code in the editor uses ES6 default argument syntax to initialize this state to hold a value of <code>5</code>. If you're not familiar with default arguments, you can refer to the <a href=\"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/es6/set-default-parameters-for-your-functions\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">ES6 section in the Curriculum</a> which covers this topic.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301439,"fields":{"blockName":"redux","slug":"/learn/front-end-development-libraries/redux/create-a-redux-store","tests":[{"text":"<p>The Redux store should exist.</p>","testString":"assert(typeof store.getState === 'function');"},{"text":"<p>The Redux store should have a value of 5 for the state.</p>","testString":"assert(store.getState() === 5);"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.2.0/redux-thunk.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const reducer = (state = 5) => {\n  return state;\n}\n\n// Redux methods are available from a Redux object\n// For example: Redux.createStore()\n// Define the store here:","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#redux","dashedName":"create-a-redux-store","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"redux","isFirstStep":true,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.2.0/redux-thunk.min.js"}],"nextBlock":"redux","nextChallengePath":"/learn/front-end-development-libraries/redux/get-state-from-the-redux-store","prevChallengePath":"/learn/front-end-development-libraries/react/render-react-on-the-server-with-rendertostring","id":"5a24c314108439a4d403614b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"script","ext":"js","contents":"const defaultState = {\n  user: 'CamperBot',\n  status: 'offline',\n  friends: '732,982',\n  community: 'freeCodeCamp'\n};\n\nconst immutableReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case 'ONLINE':\n      return Object.assign({}, state, {\n        status: 'online'\n      });\n    default:\n      return state;\n  }\n};\n\nconst wakeUp = () => {\n  return {\n    type: 'ONLINE'\n  }\n};\n\nconst store = Redux.createStore(immutableReducer);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/front-end-development-libraries/redux/create-a-redux-store"}},
    "staticQueryHashes": ["1800977889","4268002518"]}