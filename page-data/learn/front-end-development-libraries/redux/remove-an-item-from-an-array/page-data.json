{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/redux/remove-an-item-from-an-array",
    "result": {"data":{"challengeNode":{"challenge":{"block":"redux","title":"Remove an Item from an Array","description":"<section id=\"description\">\n<p>Time to practice removing items from an array. The spread operator can be used here as well. Other useful JavaScript methods include <code>slice()</code> and <code>concat()</code>.</p>\n</section>","id":"5a24c314108439a4d403615a","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The reducer and action creator were modified to remove an item from an array based on the index of the item. Finish writing the reducer so a new state array is returned with the item at the specific index removed.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301447,"fields":{"blockName":"redux","slug":"/learn/front-end-development-libraries/redux/remove-an-item-from-an-array","tests":[{"text":"<p>The Redux store should exist and initialize with a state equal to <code>[0,1,2,3,4,5]</code></p>","testString":"assert(\n  (function () {\n    const initialState = store.getState();\n    return (\n      Array.isArray(initialState) === true &&\n      DeepEqual(initialState, [0, 1, 2, 3, 4, 5])\n    );\n  })()\n);"},{"text":"<p><code>removeItem</code> and <code>immutableReducer</code> both should be functions.</p>","testString":"assert(\n  typeof removeItem === 'function' && typeof immutableReducer === 'function'\n);"},{"text":"<p>Dispatching the <code>removeItem</code> action creator should remove items from the state and should NOT mutate state.</p>","testString":"assert(\n  (function () {\n    const initialState = store.getState();\n    const isFrozen = DeepFreeze(initialState);\n    store.dispatch(removeItem(3));\n    const state_1 = store.getState();\n    store.dispatch(removeItem(2));\n    const state_2 = store.getState();\n    store.dispatch(removeItem(0));\n    store.dispatch(removeItem(0));\n    store.dispatch(removeItem(0));\n    const state_3 = store.getState();\n    return (\n      isFrozen &&\n      DeepEqual(state_1, [0, 1, 2, 4, 5]) &&\n      DeepEqual(state_2, [0, 1, 4, 5]) &&\n      DeepEqual(state_3, [5])\n    );\n  })()\n);"}]},"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.2.0/redux-thunk.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const immutableReducer = (state = [0,1,2,3,4,5], action) => {\n  switch(action.type) {\n    case 'REMOVE_ITEM':\n      // Don't mutate state here or the tests will fail\n      return\n    default:\n      return state;\n  }\n};\n\nconst removeItem = (index) => {\n  return {\n    type: 'REMOVE_ITEM',\n    index\n  }\n}\n\nconst store = Redux.createStore(immutableReducer);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#redux","dashedName":"remove-an-item-from-an-array","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"redux","isFirstStep":false,"template":null,"required":[{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux-thunk/2.2.0/redux-thunk.min.js"}],"nextBlock":"redux","nextChallengePath":"/learn/front-end-development-libraries/redux/copy-an-object-with-object-assign","prevChallengePath":"/learn/front-end-development-libraries/redux/use-the-spread-operator-on-arrays","id":"5a24c314108439a4d403615a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"script","ext":"js","contents":"const defaultState = {\n  user: 'CamperBot',\n  status: 'offline',\n  friends: '732,982',\n  community: 'freeCodeCamp'\n};\n\nconst immutableReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case 'ONLINE':\n      return Object.assign({}, state, {\n        status: 'online'\n      });\n    default:\n      return state;\n  }\n};\n\nconst wakeUp = () => {\n  return {\n    type: 'ONLINE'\n  }\n};\n\nconst store = Redux.createStore(immutableReducer);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/front-end-development-libraries/redux/remove-an-item-from-an-array"}},
    "staticQueryHashes": ["1800977889","4268002518"]}