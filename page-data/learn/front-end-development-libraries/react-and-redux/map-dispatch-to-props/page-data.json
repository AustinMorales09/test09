{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/front-end-development-libraries/react-and-redux/map-dispatch-to-props",
    "result": {"data":{"challengeNode":{"challenge":{"block":"react-and-redux","title":"Map Dispatch to Props","description":"<section id=\"description\">\n<p>The <code>mapDispatchToProps()</code> function is used to provide specific action creators to your React components so they can dispatch actions against the Redux store. It's similar in structure to the <code>mapStateToProps()</code> function you wrote in the last challenge. It returns an object that maps dispatch actions to property names, which become component <code>props</code>. However, instead of returning a piece of <code>state</code>, each property returns a function that calls <code>dispatch</code> with an action creator and any relevant action data. You have access to this <code>dispatch</code> because it's passed in to <code>mapDispatchToProps()</code> as a parameter when you define the function, just like you passed <code>state</code> to <code>mapStateToProps()</code>. Behind the scenes, React Redux is using Redux's <code>store.dispatch()</code> to conduct these dispatches with <code>mapDispatchToProps()</code>. This is similar to how it uses <code>store.subscribe()</code> for components that are mapped to <code>state</code>.</p>\n<p>For example, you have a <code>loginUser()</code> action creator that takes a <code>username</code> as an action payload. The object returned from <code>mapDispatchToProps()</code> for this action creator would look something like:</p>\n<pre><code class=\"language-jsx\">{\n  submitLoginUser: function(username) {\n    dispatch(loginUser(username));\n  }\n}\n</code></pre>\n</section>","id":"5a24c314108439a4d4036146","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The code editor provides an action creator called <code>addMessage()</code>. Write the function <code>mapDispatchToProps()</code> that takes <code>dispatch</code> as an argument, then returns an object. The object should have a property <code>submitNewMessage</code> set to the dispatch function, which takes a parameter for the new message to add when it dispatches <code>addMessage()</code>.</p>\n</section>","notes":null,"challengeType":6,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"front-end-development-libraries","translationPending":false,"forumTopicId":301432,"fields":{"blockName":"react-and-redux","slug":"/learn/front-end-development-libraries/react-and-redux/map-dispatch-to-props","tests":[{"text":"<p><code>addMessage</code> should return an object with keys <code>type</code> and <code>message</code>.</p>","testString":"assert(\n  (function () {\n    const addMessageTest = addMessage();\n    return (\n      addMessageTest.hasOwnProperty('type') &&\n      addMessageTest.hasOwnProperty('message')\n    );\n  })()\n);"},{"text":"<p><code>mapDispatchToProps</code> should be a function.</p>","testString":"assert(typeof mapDispatchToProps === 'function');"},{"text":"<p><code>mapDispatchToProps</code> should return an object.</p>","testString":"assert(typeof mapDispatchToProps() === 'object');"},{"text":"<p>Dispatching <code>addMessage</code> with <code>submitNewMessage</code> from <code>mapDispatchToProps</code> should return a message to the dispatch function.</p>","testString":"assert(\n  (function () {\n    let testAction;\n    const dispatch = (fn) => {\n      testAction = fn;\n    };\n    let dispatchFn = mapDispatchToProps(dispatch);\n    dispatchFn.submitNewMessage('__TEST__MESSAGE__');\n    return (\n      testAction.type === 'ADD' && testAction.message === '__TEST__MESSAGE__'\n    );\n  })()\n);"}]},"required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/react-redux/5.0.7/react-redux.min.js"}],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"indexjsx","ext":"jsx","name":"index","contents":"const addMessage = (message) => {\n  return {\n    type: 'ADD',\n    message: message\n  }\n};\n\n// Change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["index.jsx"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/front-end-development-libraries/#react-and-redux","dashedName":"map-dispatch-to-props","certification":"front-end-development-libraries","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"front-end-development-libraries","block":"react-and-redux","isFirstStep":false,"template":"<body><div id='root'></div>${ source || '' }</body>","required":[{"link":null,"src":"https://unpkg.com/react@16.4.0/umd/react.production.min.js"},{"link":null,"src":"https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/redux/3.7.2/redux.min.js"},{"link":null,"src":"https://cdnjs.cloudflare.com/ajax/libs/react-redux/5.0.7/react-redux.min.js"}],"nextBlock":"react-and-redux","nextChallengePath":"/learn/front-end-development-libraries/react-and-redux/connect-redux-to-react","prevChallengePath":"/learn/front-end-development-libraries/react-and-redux/map-state-to-props","id":"5a24c314108439a4d4036146"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":6,"challengeFiles":[{"name":"index","ext":"jsx","contents":"console.log('Now I know React and Redux!');","head":"","tail":"","history":["index.jsx"],"fileKey":"indexjsx"}]}},"slug":"/learn/front-end-development-libraries/react-and-redux/map-dispatch-to-props"}},
    "staticQueryHashes": ["1800977889","4268002518"]}