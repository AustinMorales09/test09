{
    "componentChunkName": "component---src-templates-challenges-projects-backend-show-tsx",
    "path": "/learn/quality-assurance/advanced-node-and-express/use-a-template-engines-powers",
    "result": {"data":{"challengeNode":{"challenge":{"forumTopicId":301567,"title":"Use a Template Engine's Powers","description":"<section id=\"description\">\n<p>One of the greatest features of using a template engine is being able to pass variables from the server to the template file before rendering it to HTML.</p>\n<p>In your Pug file, you're able to use a variable by referencing the variable name as <code>#{variable_name}</code> inline with other text on an element or by using an equal sign on the element without a space such as <code>p=variable_name</code> which assigns the variable's value to the p element's text.</p>\n<p>Pug is all about using whitespace and tabs to show nested elements and cutting down on the amount of code needed to make a beautiful site.</p>\n<p>Take the following Pug code for example:</p>\n<pre><code class=\"language-pug\">head\n  script(type='text/javascript').\n    if (foo) bar(1 + 5);\nbody\n  if youAreUsingPug\n      p You are amazing\n    else\n      p Get on it!\n</code></pre>\n<p>The above yields the following HTML:</p>\n<pre><code class=\"language-html\">&#x3C;head>\n  &#x3C;script type=\"text/javascript\">\n    if (foo) bar(1 + 5);\n  &#x3C;/script>\n&#x3C;/head>\n&#x3C;body>\n  &#x3C;p>You are amazing&#x3C;/p>\n&#x3C;/body>\n</code></pre>\n<p>Your <code>index.pug</code> file included in your project, uses the variables <code>title</code> and <code>message</code>.</p>\n<p>Pass those from your server to the Pug file by adding an object as a second argument to your <code>res.render</code> call with the variables and their values. Give the <code>title</code> a value of <code>Hello</code> and <code>message</code> a value of <code>Please log in</code>.</p>\n<p>It should look like:</p>\n<pre><code class=\"language-javascript\">res.render('index', { title: 'Hello', message: 'Please log in' });\n</code></pre>\n<p>Now refresh your page, and you should see those values rendered in your view in the correct spot as laid out in your <code>index.pug</code> file!</p>\n<p>Submit your page when you think you've got it right. If you're running into errors, you can check out the <a href=\"https://forum.freecodecamp.org/t/advanced-node-and-express/567135#use-a-template-engines-power-2\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">project completed up to this point</a>.</p>\n</section>","instructions":null,"challengeType":2,"helpCategory":"JavaScript","superBlock":"quality-assurance","block":"advanced-node-and-express","translationPending":false,"fields":{"blockName":"advanced-node-and-express","slug":"/learn/quality-assurance/advanced-node-and-express/use-a-template-engines-powers","tests":[{"text":"<p>Pug should correctly render variables.</p>","testString":"async (getUserInput) => {\n  const url = new URL(\"/\", getUserInput(\"url\"));\n  const res = await fetch(url);\n  const data = await res.text();\n  assert.match(\n    data,\n    /pug-variable(\"|')>Please log in/gi,\n    'Your projects home page should now be rendered by pug with the projects .pug file unaltered'\n  );\n}"}]}}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/quality-assurance/#advanced-node-and-express","dashedName":"use-a-template-engines-powers","certification":"quality-assurance","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"quality-assurance","block":"advanced-node-and-express","isFirstStep":false,"template":null,"required":[],"nextBlock":"advanced-node-and-express","nextChallengePath":"/learn/quality-assurance/advanced-node-and-express/set-up-passport","prevChallengePath":"/learn/quality-assurance/advanced-node-and-express/set-up-a-template-engine","id":"5895f70bf9fc0f352b528e64"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":2,"challengeFiles":[]}},"slug":"/learn/quality-assurance/advanced-node-and-express/use-a-template-engines-powers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}