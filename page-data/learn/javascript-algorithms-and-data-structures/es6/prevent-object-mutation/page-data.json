{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/es6/prevent-object-mutation",
    "result": {"data":{"challengeNode":{"challenge":{"block":"es6","title":"Prevent Object Mutation","description":"<section id=\"description\">\n<p>As seen in the previous challenge, <code>const</code> declaration alone doesn't really protect your data from mutation. To ensure your data doesn't change, JavaScript provides a function <code>Object.freeze</code> to prevent data mutation.</p>\n<p>Any attempt at changing the object will be rejected, with an error thrown if the script is running in strict mode.</p>\n<pre><code class=\"language-js\">let obj = {\n  name:\"FreeCodeCamp\",\n  review:\"Awesome\"\n};\nObject.freeze(obj);\nobj.review = \"bad\";\nobj.newProp = \"Test\";\nconsole.log(obj); \n</code></pre>\n<p>The <code>obj.review</code> and <code>obj.newProp</code> assignments will result in errors, because our editor runs in strict mode by default, and the console will display the value <code>{ name: \"FreeCodeCamp\", review: \"Awesome\" }</code>.</p>\n</section>","id":"598f48a36c8c40764b4e52b3","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>In this challenge you are going to use <code>Object.freeze</code> to prevent mathematical constants from changing. You need to freeze the <code>MATH_CONSTANTS</code> object so that no one is able to alter the value of <code>PI</code>, add, or delete properties.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301207,"fields":{"blockName":"es6","slug":"/learn/javascript-algorithms-and-data-structures/es6/prevent-object-mutation","tests":[{"text":"<p>You should not replace the <code>const</code> keyword.</p>","testString":"assert(__helpers.removeJSComments(code).match(/const/g));"},{"text":"<p><code>MATH_CONSTANTS</code> should be a constant variable (by using <code>const</code>).</p>","testString":"assert(__helpers.removeJSComments(code).match(/const\\s+MATH_CONSTANTS/g));"},{"text":"<p>You should not change the original declaration of <code>MATH_CONSTANTS</code>.</p>","testString":"assert(__helpers.removeJSComments(code).match(\n   /const\\s+MATH_CONSTANTS\\s+=\\s+{\\s+PI:\\s+3.14\\s+};/g\n));"},{"text":"<p><code>PI</code> should equal <code>3.14</code>.</p>","testString":"assert(PI === 3.14);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function freezeObj() {\n  const MATH_CONSTANTS = {\n    PI: 3.14\n  };\n  // Only change code below this line\n\n\n  // Only change code above this line\n  try {\n    MATH_CONSTANTS.PI = 99;\n  } catch(ex) {\n    console.log(ex);\n  }\n  return MATH_CONSTANTS.PI;\n}\nconst PI = freezeObj();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#es6","dashedName":"prevent-object-mutation","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"es6","isFirstStep":false,"template":null,"required":[],"nextBlock":"es6","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/mutate-an-array-declared-with-const","id":"598f48a36c8c40764b4e52b3"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/es6/prevent-object-mutation"}},
    "staticQueryHashes": ["1800977889","4268002518"]}