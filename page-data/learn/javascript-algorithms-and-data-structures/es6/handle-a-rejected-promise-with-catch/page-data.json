{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/es6/handle-a-rejected-promise-with-catch",
    "result": {"data":{"challengeNode":{"challenge":{"block":"es6","title":"Handle a Rejected Promise with catch","description":"<section id=\"description\">\n<p><code>catch</code> is the method used when your promise has been rejected. It is executed immediately after a promise's <code>reject</code> method is called. Hereâ€™s the syntax:</p>\n<pre><code class=\"language-js\">myPromise.catch(error => {\n  \n});\n</code></pre>\n<p><code>error</code> is the argument passed in to the <code>reject</code> method.</p>\n</section>","id":"5cdafbe72913098997531682","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the <code>catch</code> method to your promise. Use <code>error</code> as the parameter of its callback function and log <code>error</code> to the console.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301204,"fields":{"blockName":"es6","slug":"/learn/javascript-algorithms-and-data-structures/es6/handle-a-rejected-promise-with-catch","tests":[{"text":"<p>You should call the <code>catch</code> method on the promise.</p>","testString":"assert(\n  __helpers.removeWhiteSpace(__helpers.removeJSComments(code)).match(/(makeServerRequest|\\))\\.catch\\(/g)\n);"},{"text":"<p>Your <code>catch</code> method should have a callback function with <code>error</code> as its parameter.</p>","testString":"assert(errorIsParameter);"},{"text":"<p>You should log <code>error</code> to the console.</p>","testString":"assert(\n  errorIsParameter &&\n    __helpers\n      .removeWhiteSpace(__helpers.removeJSComments(code))\n      .match(/\\.catch\\(.*?error.*?console.log\\(error\\).*?\\)/)\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#es6","dashedName":"handle-a-rejected-promise-with-catch","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"es6","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/handle-a-fulfilled-promise-with-then","id":"5cdafbe72913098997531682"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/es6/handle-a-rejected-promise-with-catch"}},
    "staticQueryHashes": ["1800977889","4268002518"]}