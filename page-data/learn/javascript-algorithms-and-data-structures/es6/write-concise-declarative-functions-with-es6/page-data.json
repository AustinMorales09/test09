{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/es6/write-concise-declarative-functions-with-es6",
    "result": {"data":{"challengeNode":{"challenge":{"block":"es6","title":"Write Concise Declarative Functions with ES6","description":"<section id=\"description\">\n<p>When defining functions within objects in ES5, we have to use the keyword <code>function</code> as follows:</p>\n<pre><code class=\"language-js\">const person = {\n  name: \"Taylor\",\n  sayHello: function() {\n    return `Hello! My name is ${this.name}.`;\n  }\n};\n</code></pre>\n<p>With ES6, you can remove the <code>function</code> keyword and colon altogether when defining functions in objects. Here's an example of this syntax:</p>\n<pre><code class=\"language-js\">const person = {\n  name: \"Taylor\",\n  sayHello() {\n    return `Hello! My name is ${this.name}.`;\n  }\n};\n</code></pre>\n</section>","id":"587d7b8b367417b2b2512b50","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Refactor the function <code>setGear</code> inside the object <code>bicycle</code> to use the shorthand syntax described above.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301224,"fields":{"blockName":"es6","slug":"/learn/javascript-algorithms-and-data-structures/es6/write-concise-declarative-functions-with-es6","tests":[{"text":"<p>Traditional function expression should not be used.</p>","testString":"assert(!__helpers.removeJSComments(code).match(/function/));"},{"text":"<p><code>setGear</code> should be a declarative function.</p>","testString":"assert(\n  typeof bicycle.setGear === 'function' && __helpers.removeJSComments(code).match(/setGear\\s*\\(.+\\)\\s*\\{/)\n);"},{"text":"<p><code>bicycle.setGear(48)</code> should change the <code>gear</code> value to 48.</p>","testString":"bicycle.setGear(48);\nassert(bicycle.gear === 48);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Only change code below this line\nconst bicycle = {\n  gear: 2,\n  setGear: function(newGear) {\n    this.gear = newGear;\n  }\n};\n// Only change code above this line\nbicycle.setGear(3);\nconsole.log(bicycle.gear);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#es6","dashedName":"write-concise-declarative-functions-with-es6","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"es6","isFirstStep":false,"template":null,"required":[],"nextBlock":"es6","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/use-class-syntax-to-define-a-constructor-function","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/write-concise-object-literal-declarations-using-object-property-shorthand","id":"587d7b8b367417b2b2512b50"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/es6/write-concise-declarative-functions-with-es6"}},
    "staticQueryHashes": ["1800977889","4268002518"]}