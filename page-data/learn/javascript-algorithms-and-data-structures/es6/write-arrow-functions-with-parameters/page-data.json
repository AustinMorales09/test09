{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters",
    "result": {"data":{"challengeNode":{"challenge":{"block":"es6","title":"Write Arrow Functions with Parameters","description":"<section id=\"description\">\n<p>Just like a regular function, you can pass arguments into an arrow function.</p>\n<pre><code class=\"language-js\">const doubler = (item) => item * 2;\ndoubler(4);\n</code></pre>\n<p><code>doubler(4)</code> would return the value <code>8</code>.</p>\n<p>If an arrow function has a single parameter, the parentheses enclosing the parameter may be omitted.</p>\n<pre><code class=\"language-js\">const doubler = item => item * 2;\n</code></pre>\n<p>It is possible to pass more than one argument into an arrow function.</p>\n<pre><code class=\"language-js\">const multiplier = (item, multi) => item * multi;\nmultiplier(4, 2);\n</code></pre>\n<p><code>multiplier(4, 2)</code> would return the value <code>8</code>.</p>\n</section>","id":"587d7b88367417b2b2512b44","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Rewrite the <code>myConcat</code> function which appends contents of <code>arr2</code> to <code>arr1</code> so that the function uses arrow function syntax.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301223,"fields":{"blockName":"es6","slug":"/learn/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters","tests":[{"text":"<p>You should replace the <code>var</code> keyword.</p>","testString":"assert.notMatch(code, /var/g);"},{"text":"<p><code>myConcat</code> should be a constant variable (by using <code>const</code>).</p>","testString":"assert.match(code, /const\\s+myConcat/g);"},{"text":"<p><code>myConcat</code> should be an arrow function with two parameters</p>","testString":"assert(\n  /myConcat=\\(\\w+,\\w+\\)=>/.test(__helpers.removeJSComments(code).replace(/\\s/g, '')) &&\n    typeof myConcat === 'function'\n);"},{"text":"<p><code>myConcat()</code> should return <code>[1, 2, 3, 4, 5]</code>.</p>","testString":"assert.deepEqual(myConcat([1, 2], [3, 4, 5]), [1, 2, 3, 4, 5]);"},{"text":"<p>The <code>function</code> keyword should not be used.</p>","testString":"assert.notMatch(code, /function/g);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"var myConcat = function(arr1, arr2) {\n  return arr1.concat(arr2);\n};\n\nconsole.log(myConcat([1, 2], [3, 4, 5]));","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#es6","dashedName":"write-arrow-functions-with-parameters","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"es6","isFirstStep":false,"template":null,"required":[],"nextBlock":"es6","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/set-default-parameters-for-your-functions","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/use-arrow-functions-to-write-concise-anonymous-functions","id":"587d7b88367417b2b2512b44"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/es6/write-arrow-functions-with-parameters"}},
    "staticQueryHashes": ["1800977889","4268002518"]}