{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/es6/reuse-javascript-code-using-import",
    "result": {"data":{"challengeNode":{"challenge":{"block":"es6","title":"Reuse JavaScript Code Using import","description":"<section id=\"description\">\n<p><code>import</code> allows you to choose which parts of a file or module to load. In the previous lesson, the examples exported <code>add</code> from the <code>math_functions.js</code> file. Here's how you can import it to use in another file:</p>\n<pre><code class=\"language-js\">import { add } from './math_functions.js';\n</code></pre>\n<p>Here, <code>import</code> will find <code>add</code> in <code>math_functions.js</code>, import just that function for you to use, and ignore the rest. The <code>./</code> tells the import to look for the <code>math_functions.js</code> file in the same folder as the current file. The relative file path (<code>./</code>) and file extension (<code>.js</code>) are required when using import in this way.</p>\n<p>You can import more than one item from the file by adding them in the <code>import</code> statement like this:</p>\n<pre><code class=\"language-js\">import { add, subtract } from './math_functions.js';\n</code></pre>\n</section>","id":"587d7b8c367417b2b2512b55","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the appropriate <code>import</code> statement that will allow the current file to use the <code>uppercaseString</code> and <code>lowercaseString</code> functions you exported in the previous lesson. These functions are in a file called <code>string_functions.js</code>, which is in the same directory as the current file.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301208,"fields":{"blockName":"es6","slug":"/learn/javascript-algorithms-and-data-structures/es6/reuse-javascript-code-using-import","tests":[{"text":"<p>You should properly import <code>uppercaseString</code>.</p>","testString":"assert(\n  __helpers.removeJSComments(code).match(\n    /import\\s*{\\s*(uppercaseString[^}]*|[^,]*,\\s*uppercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n  )\n);"},{"text":"<p>You should properly import <code>lowercaseString</code>.</p>","testString":"assert(\n  __helpers.removeJSComments(code).match(\n    /import\\s*{\\s*(lowercaseString[^}]*|[^,]*,\\s*lowercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n  )\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"  \n// Only change code above this line\n\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#es6","dashedName":"reuse-javascript-code-using-import","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"es6","isFirstStep":false,"template":null,"required":[],"nextBlock":"es6","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/use--to-import-everything-from-a-file","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/use-export-to-share-a-code-block","id":"587d7b8c367417b2b2512b55"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const makeServerRequest = new Promise((resolve, reject) => {\n  // responseFromServer is set to false to represent an unsuccessful response from a server\n  let responseFromServer = false;\n    \n  if(responseFromServer) {\n    resolve(\"We got the data\");\n  } else {  \n    reject(\"Data not received\");\n  }\n});\n\nmakeServerRequest.then(result => {\n  console.log(result);\n});\n\nmakeServerRequest.catch(error => {\n  console.log(error);\n});","head":"","tail":"const errorIsParameter = /\\.catch\\((function\\(error\\){|error|\\(error\\)=>)/.test(__helpers.removeWhiteSpace(__helpers.removeJSComments(code)));","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/es6/reuse-javascript-code-using-import"}},
    "staticQueryHashes": ["1800977889","4268002518"]}