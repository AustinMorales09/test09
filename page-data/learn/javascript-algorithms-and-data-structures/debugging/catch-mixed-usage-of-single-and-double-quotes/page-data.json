{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/debugging/catch-mixed-usage-of-single-and-double-quotes",
    "result": {"data":{"challengeNode":{"challenge":{"block":"debugging","title":"Catch Mixed Usage of Single and Double Quotes","description":"<section id=\"description\">\n<p>JavaScript allows the use of both single (<code>'</code>) and double (<code>\"</code>) quotes to declare a string. Deciding which one to use generally comes down to personal preference, with some exceptions.</p>\n<p>Having two choices is great when a string has contractions or another piece of text that's in quotes. Just be careful that you don't close the string too early, which causes a syntax error.</p>\n<p>Here are some examples of mixing quotes:</p>\n<pre><code class=\"language-js\">const grouchoContraction = \"I've had a perfectly wonderful evening, but this wasn't it.\";\nconst quoteInString = \"Groucho Marx once said 'Quote me as saying I was mis-quoted.'\";\nconst uhOhGroucho = 'I've had a perfectly wonderful evening, but this wasn't it.';\n</code></pre>\n<p>The first two are correct, but the third is incorrect.</p>\n<p>Of course, it is okay to use only one style of quotes. You can escape the quotes inside the string by using the backslash (<code>\\</code>) escape character:</p>\n<pre><code class=\"language-js\">const allSameQuotes = 'I\\'ve had a perfectly wonderful evening, but this wasn\\'t it.';\n</code></pre>\n</section>","id":"587d7b84367417b2b2512b37","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Fix the string so it either uses different quotes for the <code>href</code> value, or escape the existing ones. Keep the double quote marks around the entire string.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301188,"fields":{"blockName":"debugging","slug":"/learn/javascript-algorithms-and-data-structures/debugging/catch-mixed-usage-of-single-and-double-quotes","tests":[{"text":"<p>Your code should fix the quotes around the <code>href</code> value <code>#Home</code> by either changing or escaping them.</p>","testString":"assert(__helpers.removeJSComments(code).match(/<a href=\\s*?('|\\\\\")#Home\\1\\s*?>/g));"},{"text":"<p>Your code should keep the double quotes around the entire string.</p>","testString":"assert(__helpers.removeJSComments(code).match(/\"<p>.*?<\\/p>\";/g));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let innerHtml = \"<p>Click here to <a href=\"#Home\">return home</a></p>\";\nconsole.log(innerHtml);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#debugging","dashedName":"catch-mixed-usage-of-single-and-double-quotes","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"debugging","isFirstStep":false,"template":null,"required":[],"nextBlock":"debugging","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/debugging/catch-use-of-assignment-operator-instead-of-equality-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/debugging/catch-unclosed-parentheses-brackets-braces-and-quotes","id":"587d7b84367417b2b2512b37"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function myFunc() {\n for (let i = 1; i <= 4; i += 2) {\n   console.log(\"Still going!\");\n }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/debugging/catch-mixed-usage-of-single-and-double-quotes"}},
    "staticQueryHashes": ["1800977889","4268002518"]}