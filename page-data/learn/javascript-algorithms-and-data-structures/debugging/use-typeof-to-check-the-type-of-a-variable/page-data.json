{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable",
    "result": {"data":{"challengeNode":{"challenge":{"block":"debugging","title":"Use typeof to Check the Type of a Variable","description":"<section id=\"description\">\n<p>You can use <code>typeof</code> to check the data structure, or type, of a variable. This is useful in debugging when working with multiple data types. If you think you're adding two numbers, but one is actually a string, the results can be unexpected. Type errors can lurk in calculations or function calls. Be careful especially when you're accessing and working with external data in the form of a JavaScript Object Notation (JSON) object.</p>\n<p>Here are some examples using <code>typeof</code>:</p>\n<pre><code class=\"language-js\">console.log(typeof \"\");\nconsole.log(typeof 0);\nconsole.log(typeof []);\nconsole.log(typeof {});\n</code></pre>\n<p>In order, the console will display the strings <code>string</code>, <code>number</code>, <code>object</code>, and <code>object</code>.</p>\n<p>JavaScript recognizes seven primitive (immutable) data types: <code>Boolean</code>, <code>Null</code>, <code>Undefined</code>, <code>Number</code>, <code>String</code>, <code>Symbol</code> (new with ES6), and <code>BigInt</code> (new with ES2020), and one type for mutable items: <code>Object</code>. Note that in JavaScript, arrays are technically a type of object.</p>\n</section>","id":"587d7b84367417b2b2512b34","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add two <code>console.log()</code> statements to check the <code>typeof</code> each of the two variables <code>seven</code> and <code>three</code> in the code.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18374,"fields":{"blockName":"debugging","slug":"/learn/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable","tests":[{"text":"<p>Your code should use <code>typeof</code> in two <code>console.log()</code> statements to check the type of the variables.</p>","testString":"assert(__helpers.removeJSComments(code).match(/console\\.log\\s*\\(typeof[\\( ].*\\)?\\)/g).length == 2);"},{"text":"<p>Your code should use <code>typeof</code> to check the type of the variable <code>seven</code>.</p>","testString":"assert(__helpers.removeJSComments(code).match(/typeof[\\( ]seven\\)?/g));"},{"text":"<p>Your code should use <code>typeof</code> to check the type of the variable <code>three</code>.</p>","testString":"assert(__helpers.removeJSComments(code).match(/typeof[\\( ]three\\)?/g));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let seven = 7;\nlet three = \"3\";\nconsole.log(seven + three);\n// Only change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#debugging","dashedName":"use-typeof-to-check-the-type-of-a-variable","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"debugging","isFirstStep":false,"template":null,"required":[],"nextBlock":"debugging","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/debugging/catch-misspelled-variable-and-function-names","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/debugging/understanding-the-differences-between-the-freecodecamp-and-browser-console","id":"587d7b84367417b2b2512b34"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function myFunc() {\n for (let i = 1; i <= 4; i += 2) {\n   console.log(\"Still going!\");\n }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/debugging/use-typeof-to-check-the-type-of-a-variable"}},
    "staticQueryHashes": ["1800977889","4268002518"]}