{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-undefined-value-returned-from-a-function",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Understanding Undefined Value returned from a Function","description":"<section id=\"description\">\n<p>A function can include the <code>return</code> statement but it does not have to. In the case that the function doesn't have a <code>return</code> statement, when you call it, the function processes the inner code but the returned value is <code>undefined</code>.</p>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">let sum = 0;\n\nfunction addSum(num) {\n  sum = sum + num;\n}\n\naddSum(3);\n</code></pre>\n<p><code>addSum</code> is a function without a <code>return</code> statement. The function will change the global <code>sum</code> variable but the returned value of the function is <code>undefined</code>.</p>\n</section>","id":"598e8944f009e646fc236146","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a function <code>addFive</code> without any arguments. This function adds 5 to the <code>sum</code> variable, but its returned value is <code>undefined</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/ce2p7cL","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301177,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-undefined-value-returned-from-a-function","tests":[{"text":"<p><code>addFive</code> should be a function.</p>","testString":"assert(typeof addFive === 'function');"},{"text":"<p>Once both functions have run, the <code>sum</code> should be equal to <code>8</code>.</p>","testString":"assert(sum === 8);"},{"text":"<p>Returned value from <code>addFive</code> should be <code>undefined</code>.</p>","testString":"assert(addFive() === undefined);"},{"text":"<p>Inside the <code>addFive</code> function, you should add <code>5</code> to the <code>sum</code> variable.</p>","testString":"assert(\n  __helpers.removeWhiteSpace(addFive.toString()).match(/sum=sum\\+5|sum\\+=5/)\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nlet sum = 0;\n\nfunction addThree() {\n  sum = sum + 3;\n}\n\n// Only change code below this line\n\n\n// Only change code above this line\n\naddThree();\naddFive();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"understanding-undefined-value-returned-from-a-function","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/global-vs--local-scope-in-functions","id":"598e8944f009e646fc236146"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-undefined-value-returned-from-a-function"}},
    "staticQueryHashes": ["1800977889","4268002518"]}