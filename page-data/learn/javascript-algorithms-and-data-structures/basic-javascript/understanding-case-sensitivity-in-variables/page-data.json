{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-case-sensitivity-in-variables",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Understanding Case Sensitivity in Variables","description":"<section id=\"description\">\n<p>In JavaScript all variables and function names are case sensitive. This means that capitalization matters.</p>\n<p><code>MYVAR</code> is not the same as <code>MyVar</code> nor <code>myvar</code>. It is possible to have multiple distinct variables with the same name but different casing. It is strongly recommended that for the sake of clarity, you <em>do not</em> use this language feature.</p>\n<p><strong>Best Practice</strong></p>\n<p>Write variable names in JavaScript in <dfn>camelCase</dfn>. In <dfn>camelCase</dfn>, multi-word variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.</p>\n<p><strong>Examples:</strong></p>\n<pre><code class=\"language-js\">var someVariable;\nvar anotherVariableName;\nvar thisVariableNameIsSoLong;\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244ab","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Modify the existing declarations and assignments so their names use <dfn>camelCase</dfn>.</p>\n<p>Do not create any new variables.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cd6GDcD","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18334,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-case-sensitivity-in-variables","tests":[{"text":"<p><code>studlyCapVar</code> should be defined and have a value of <code>10</code>.</p>","testString":"assert(typeof studlyCapVar !== 'undefined' && studlyCapVar === 10);"},{"text":"<p><code>properCamelCase</code> should be defined and have a value of the string <code>A String</code>.</p>","testString":"assert(\n  typeof properCamelCase !== 'undefined' && properCamelCase === 'A String'\n);"},{"text":"<p><code>titleCaseOver</code> should be defined and have a value of <code>9000</code>.</p>","testString":"assert(typeof titleCaseOver !== 'undefined' && titleCaseOver === 9000);"},{"text":"<p><code>studlyCapVar</code> should use camelCase in both declaration and assignment sections.</p>","testString":"assert(__helpers.removeJSComments(code).match(/studlyCapVar/g).length === 2);"},{"text":"<p><code>properCamelCase</code> should use camelCase in both declaration and assignment sections.</p>","testString":"assert(__helpers.removeJSComments(code).match(/properCamelCase/g).length === 2);"},{"text":"<p><code>titleCaseOver</code> should use camelCase in both declaration and assignment sections.</p>","testString":"assert(__helpers.removeJSComments(code).match(/titleCaseOver/g).length === 2);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Variable declarations\nvar StUdLyCapVaR;\nvar properCamelCase;\nvar TitleCaseOver;\n\n// Variable assignments\nSTUDLYCAPVAR = 10;\nPRoperCAmelCAse = \"A String\";\ntITLEcASEoVER = 9000;","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"understanding-case-sensitivity-in-variables","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/explore-differences-between-the-var-and-let-keywords","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-uninitialized-variables","id":"56533eb9ac21ba0edf2244ab"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-case-sensitivity-in-variables"}},
    "staticQueryHashes": ["1800977889","4268002518"]}