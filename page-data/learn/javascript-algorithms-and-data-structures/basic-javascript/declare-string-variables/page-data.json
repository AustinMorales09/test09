{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-string-variables",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Declare String Variables","description":"<section id=\"description\">\n<p>Previously you used the following code to declare a variable:</p>\n<pre><code class=\"language-js\">var myName;\n</code></pre>\n<p>But you can also declare a string variable like this:</p>\n<pre><code class=\"language-js\">var myName = \"your name\";\n</code></pre>\n<p><code>\"your name\"</code> is called a <dfn>string</dfn> <dfn>literal</dfn>. A string literal, or string, is a series of zero or more characters enclosed in single or double quotes.</p>\n</section>","id":"bd7123c9c444eddfaeb5bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create two new string variables: <code>myFirstName</code> and <code>myLastName</code> and assign them the values of your first and last name, respectively.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c2QvWU6","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":17557,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-string-variables","tests":[{"text":"<p><code>myFirstName</code> should be a string with at least one character in it.</p>","testString":"assert(\n  (function () {\n    if (\n      typeof myFirstName !== 'undefined' &&\n      typeof myFirstName === 'string' &&\n      myFirstName.length > 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"},{"text":"<p><code>myLastName</code> should be a string with at least one character in it.</p>","testString":"assert(\n  (function () {\n    if (\n      typeof myLastName !== 'undefined' &&\n      typeof myLastName === 'string' &&\n      myLastName.length > 0\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"","head":"","tail":"if(typeof myFirstName !== \"undefined\" && typeof myLastName !== \"undefined\"){(function(){return myFirstName + ', ' + myLastName;})();}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"declare-string-variables","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-uninitialized-variables","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/initializing-variables-with-the-assignment-operator","id":"bd7123c9c444eddfaeb5bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-string-variables"}},
    "staticQueryHashes": ["1800977889","4268002518"]}