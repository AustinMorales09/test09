{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Local Scope and Functions","description":"<section id=\"description\">\n<p>Variables which are declared within a function, as well as the function parameters, have <dfn>local</dfn> scope. That means they are only visible within that function.</p>\n<p>Here is a function <code>myTest</code> with a local variable called <code>loc</code>.</p>\n<pre><code class=\"language-js\">function myTest() {\n  const loc = \"foo\";\n  console.log(loc);\n}\n\nmyTest();\nconsole.log(loc);\n</code></pre>\n<p>The <code>myTest()</code> function call will display the string <code>foo</code> in the console. The <code>console.log(loc)</code> line (outside of the <code>myTest</code> function) will throw an error, as <code>loc</code> is not defined outside of the function.</p>\n</section>","id":"56533eb9ac21ba0edf2244bf","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The editor has two <code>console.log</code>s to help you see what is happening. Check the console as you code to see how it changes. Declare a local variable <code>myVar</code> inside <code>myLocalScope</code> and run the tests.</p>\n<p><strong>Note:</strong> The console will still display <code>ReferenceError: myVar is not defined</code>, but this will not cause the tests to fail.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cd62NhM","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18227,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions","tests":[{"text":"<p>The code should not contain a global <code>myVar</code> variable.</p>","testString":"function declared() {\n  myVar;\n}\n\nassert.throws(declared, ReferenceError);"},{"text":"<p>You should add a local <code>myVar</code> variable.</p>","testString":"assert(\n  /functionmyLocalScope\\(\\)\\{.*(var|let|const)myVar[\\s\\S]*}/.test(\n    __helpers.removeWhiteSpace(__helpers.removeJSComments(code))\n  )\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function myLocalScope() {\n  // Only change code below this line\n\n  console.log('inside myLocalScope', myVar);\n}\nmyLocalScope();\n\n// Run and check the console\n// myVar is not defined outside of myLocalScope\nconsole.log('outside myLocalScope', myVar);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"local-scope-and-functions","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/global-vs--local-scope-in-functions","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/global-scope-and-functions","id":"56533eb9ac21ba0edf2244bf"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/local-scope-and-functions"}},
    "staticQueryHashes": ["1800977889","4268002518"]}