{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Use the parseInt Function with a Radix","description":"<section id=\"description\">\n<p>The <code>parseInt()</code> function parses a string and returns an integer. It takes a second argument for the radix, which specifies the base of the number in the string. The radix can be an integer between 2 and 36.</p>\n<p>The function call looks like:</p>\n<pre><code class=\"language-js\">parseInt(string, radix);\n</code></pre>\n<p>And here's an example:</p>\n<pre><code class=\"language-js\">const a = parseInt(\"11\", 2);\n</code></pre>\n<p>The radix variable says that <code>11</code> is in the binary system, or base 2. This example converts the string <code>11</code> to an integer <code>3</code>.</p>\n</section>","id":"587d7b7e367417b2b2512b22","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use <code>parseInt()</code> in the <code>convertToInteger</code> function so it converts a binary number to an integer and returns it.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c6K4Kh3","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301182,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix","tests":[{"text":"<p><code>convertToInteger</code> should use the <code>parseInt()</code> function</p>","testString":"assert(/parseInt/g.test(__helpers.removeJSComments(code)));"},{"text":"<p><code>convertToInteger(\"10011\")</code> should return a number</p>","testString":"assert(typeof convertToInteger('10011') === 'number');"},{"text":"<p><code>convertToInteger(\"10011\")</code> should return 19</p>","testString":"assert(convertToInteger('10011') === 19);"},{"text":"<p><code>convertToInteger(\"111001\")</code> should return 57</p>","testString":"assert(convertToInteger('111001') === 57);"},{"text":"<p><code>convertToInteger(\"JamesBond\")</code> should return <code>NaN</code></p>","testString":"assert.isNaN(convertToInteger('JamesBond'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function convertToInteger(str) {\n\n}\n\nconvertToInteger(\"10011\");","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"use-the-parseint-function-with-a-radix","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function","id":"587d7b7e367417b2b2512b22"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-parseint-function-with-a-radix"}},
    "staticQueryHashes": ["1800977889","4268002518"]}