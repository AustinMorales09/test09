{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/multiple-identical-options-in-switch-statements",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Multiple Identical Options in Switch Statements","description":"<section id=\"description\">\n<p>If the <code>break</code> statement is omitted from a <code>switch</code> statement's <code>case</code>, the following <code>case</code> statement(s) are executed until a <code>break</code> is encountered. If you have multiple inputs with the same output, you can represent them in a <code>switch</code> statement like this:</p>\n<pre><code class=\"language-js\">let result = \"\";\nswitch (val) {\n  case 1:\n  case 2:\n  case 3:\n    result = \"1, 2, or 3\";\n    break;\n  case 4:\n    result = \"4 alone\";\n}\n</code></pre>\n<p>Cases for 1, 2, and 3 will all produce the same result.</p>\n</section>","id":"56533eb9ac21ba0edf2244df","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a switch statement to set <code>answer</code> for the following ranges:<br>\n<code>1-3</code> - <code>Low</code><br>\n<code>4-6</code> - <code>Mid</code><br>\n<code>7-9</code> - <code>High</code></p>\n<p><strong>Note:</strong> You will need to have a <code>case</code> statement for each number in the range.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cdBKWCV","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18242,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/multiple-identical-options-in-switch-statements","tests":[{"text":"<p><code>sequentialSizes(1)</code> should return the string <code>Low</code></p>","testString":"assert(sequentialSizes(1) === 'Low');"},{"text":"<p><code>sequentialSizes(2)</code> should return the string <code>Low</code></p>","testString":"assert(sequentialSizes(2) === 'Low');"},{"text":"<p><code>sequentialSizes(3)</code> should return the string <code>Low</code></p>","testString":"assert(sequentialSizes(3) === 'Low');"},{"text":"<p><code>sequentialSizes(4)</code> should return the string <code>Mid</code></p>","testString":"assert(sequentialSizes(4) === 'Mid');"},{"text":"<p><code>sequentialSizes(5)</code> should return the string <code>Mid</code></p>","testString":"assert(sequentialSizes(5) === 'Mid');"},{"text":"<p><code>sequentialSizes(6)</code> should return the string <code>Mid</code></p>","testString":"assert(sequentialSizes(6) === 'Mid');"},{"text":"<p><code>sequentialSizes(7)</code> should return the string <code>High</code></p>","testString":"assert(sequentialSizes(7) === 'High');"},{"text":"<p><code>sequentialSizes(8)</code> should return the string <code>High</code></p>","testString":"assert(sequentialSizes(8) === 'High');"},{"text":"<p><code>sequentialSizes(9)</code> should return the string <code>High</code></p>","testString":"assert(sequentialSizes(9) === 'High');"},{"text":"<p>You should not use any <code>if</code> or <code>else</code> statements</p>","testString":"assert(!/else/g.test(__helpers.removeJSComments(code)) || !/if/g.test(__helpers.removeJSComments(code)));"},{"text":"<p>You should have nine <code>case</code> statements</p>","testString":"assert(__helpers.removeJSComments(code).match(/case/g).length === 9);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function sequentialSizes(val) {\n  let answer = \"\";\n  // Only change code below this line\n\n\n\n  // Only change code above this line\n  return answer;\n}\n\nsequentialSizes(1);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"multiple-identical-options-in-switch-statements","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/replacing-if-else-chains-with-switch","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/adding-a-default-option-in-switch-statements","id":"56533eb9ac21ba0edf2244df"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/multiple-identical-options-in-switch-statements"}},
    "staticQueryHashes": ["1800977889","4268002518"]}