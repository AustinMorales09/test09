{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/word-blanks",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Word Blanks","description":"<section id=\"description\">\n<p>You are provided sentences with some missing words, like nouns, verbs, adjectives and adverbs. You then fill in the missing pieces with words of your choice in a way that the completed sentence makes sense.</p>\n<p>Consider this sentence:</p>\n<pre><code class=\"language-md\">It was really ____, and we ____ ourselves ____.\n</code></pre>\n<p>This sentence has three missing pieces- an adjective, a verb and an adverb, and we can add words of our choice to complete it. We can then assign the completed sentence to a variable as follows:</p>\n<pre><code class=\"language-js\">const sentence = \"It was really \" + \"hot\" + \", and we \" + \"laughed\" + \" ourselves \" + \"silly\" + \".\";\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244bb","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>In this challenge, we provide you with a noun, a verb, an adjective and an adverb. You need to form a complete sentence using words of your choice, along with the words we provide.</p>\n<p>You will need to use the string concatenation operator <code>+</code> to build a new string, using the provided variables: <code>myNoun</code>, <code>myAdjective</code>, <code>myVerb</code>, and <code>myAdverb</code>. You will then assign the formed string to the <code>wordBlanks</code> variable. You should not change the words assigned to the variables.</p>\n<p>You will also need to account for spaces in your string, so that the final sentence has spaces between all the words. The result should be a complete sentence.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/caqn8zuP","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18377,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/word-blanks","tests":[{"text":"<p><code>wordBlanks</code> should be a string.</p>","testString":"assert(typeof wordBlanks === 'string');"},{"text":"<p>You should not change the values assigned to <code>myNoun</code>, <code>myVerb</code>, <code>myAdjective</code> or <code>myAdverb</code>.</p>","testString":"assert(\n  myNoun === 'dog' &&\n    myVerb === 'ran' &&\n    myAdjective === 'big' &&\n    myAdverb === 'quickly'\n);"},{"text":"<p>You should not directly use the values <code>dog</code>, <code>ran</code>, <code>big</code>, or <code>quickly</code> to create <code>wordBlanks</code>.</p>","testString":"const newCode = removeAssignments(__helpers.removeJSComments(code));\nassert(\n  !/dog/.test(newCode) &&\n    !/ran/.test(newCode) &&\n    !/big/.test(newCode) &&\n    !/quickly/.test(newCode)\n);"},{"text":"<p><code>wordBlanks</code> should contain all of the words assigned to the variables <code>myNoun</code>, <code>myVerb</code>, <code>myAdjective</code> and <code>myAdverb</code> separated by non-word characters (and any additional words of your choice).</p>","testString":"assert(\n  /\\bdog\\b/.test(wordBlanks) &&\n    /\\bbig\\b/.test(wordBlanks) &&\n    /\\bran\\b/.test(wordBlanks) &&\n    /\\bquickly\\b/.test(wordBlanks)\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const myNoun = \"dog\";\nconst myAdjective = \"big\";\nconst myVerb = \"ran\";\nconst myAdverb = \"quickly\";\n\n// Only change code below this line\nconst wordBlanks = \"\"; // Change this line\n// Only change code above this line","head":"","tail":"const removeAssignments = str => str\n  .replace(/myNoun\\s*=\\s*[\"']dog[\"']/g, '')\n  .replace(/myAdjective\\s*=\\s*[\"']big[\"']/g, '')\n  .replace(/myVerb\\s*=\\s*[\"']ran[\"']/g, '')\n  .replace(/myAdverb\\s*=\\s*[\"']quickly[\"']/g, '');","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"word-blanks","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/store-multiple-values-in-one-variable-using-javascript-arrays","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-bracket-notation-to-find-the-nth-to-last-character-in-a-string","id":"56533eb9ac21ba0edf2244bb"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/word-blanks"}},
    "staticQueryHashes": ["1800977889","4268002518"]}