{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Chaining If Else Statements","description":"<section id=\"description\">\n<p><code>if/else</code> statements can be chained together for complex logic. Here is <dfn>pseudocode</dfn> of multiple chained <code>if</code> / <code>else if</code> statements:</p>\n<pre><code class=\"language-js\">if (condition1) {\n  statement1\n} else if (condition2) {\n  statement2\n} else if (condition3) {\n  statement3\n. . .\n} else {\n  statementN\n}\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244dc","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write chained <code>if</code>/<code>else if</code> statements to fulfill the following conditions:</p>\n<p><code>num &#x3C; 5</code> - return <code>Tiny</code><br>\n<code>num &#x3C; 10</code> - return <code>Small</code><br>\n<code>num &#x3C; 15</code> - return <code>Medium</code><br>\n<code>num &#x3C; 20</code> - return <code>Large</code><br>\n<code>num >= 20</code> - return <code>Huge</code></p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/caeJgsw","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16772,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements","tests":[{"text":"<p>You should have at least four <code>else</code> statements</p>","testString":"assert(__helpers.removeJSComments(code).match(/else/g).length > 3);"},{"text":"<p>You should have at least four <code>if</code> statements</p>","testString":"assert(__helpers.removeJSComments(code).match(/if/g).length > 3);"},{"text":"<p>You should have at least one <code>return</code> statement</p>","testString":"assert(__helpers.removeJSComments(code).match(/return/g).length >= 1);"},{"text":"<p><code>testSize(0)</code> should return the string <code>Tiny</code></p>","testString":"assert(testSize(0) === 'Tiny');"},{"text":"<p><code>testSize(4)</code> should return the string <code>Tiny</code></p>","testString":"assert(testSize(4) === 'Tiny');"},{"text":"<p><code>testSize(5)</code> should return the string <code>Small</code></p>","testString":"assert(testSize(5) === 'Small');"},{"text":"<p><code>testSize(8)</code> should return the string <code>Small</code></p>","testString":"assert(testSize(8) === 'Small');"},{"text":"<p><code>testSize(10)</code> should return the string <code>Medium</code></p>","testString":"assert(testSize(10) === 'Medium');"},{"text":"<p><code>testSize(14)</code> should return the string <code>Medium</code></p>","testString":"assert(testSize(14) === 'Medium');"},{"text":"<p><code>testSize(15)</code> should return the string <code>Large</code></p>","testString":"assert(testSize(15) === 'Large');"},{"text":"<p><code>testSize(17)</code> should return the string <code>Large</code></p>","testString":"assert(testSize(17) === 'Large');"},{"text":"<p><code>testSize(20)</code> should return the string <code>Huge</code></p>","testString":"assert(testSize(20) === 'Huge');"},{"text":"<p><code>testSize(25)</code> should return the string <code>Huge</code></p>","testString":"assert(testSize(25) === 'Huge');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function testSize(num) {\n  // Only change code below this line\n\n\n  return \"Change Me\";\n  // Only change code above this line\n}\n\ntestSize(7);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"chaining-if-else-statements","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/golf-code","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/logical-order-in-if-else-statements","id":"56533eb9ac21ba0edf2244dc"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements"}},
    "staticQueryHashes": ["1800977889","4268002518"]}