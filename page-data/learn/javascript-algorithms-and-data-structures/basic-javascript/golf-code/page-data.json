{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/golf-code",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Golf Code","description":"<section id=\"description\">\n<p>In the game of Golf, each hole has a <code>par</code>, meaning, the average number of <code>strokes</code> a golfer is expected to make in order to sink the ball in the hole to complete the play. Depending on how far above or below <code>par</code> your <code>strokes</code> are, there is a different nickname.</p>\n<p>Your function will be passed <code>par</code> and <code>strokes</code> arguments. Return the correct string according to this table which lists the strokes in order of priority; top (highest) to bottom (lowest):</p>\n<table><thead><tr><th>Strokes</th><th>Return</th></tr></thead><tbody><tr><td>1</td><td>\"Hole-in-one!\"</td></tr><tr><td>&#x3C;= par - 2</td><td>\"Eagle\"</td></tr><tr><td>par - 1</td><td>\"Birdie\"</td></tr><tr><td>par</td><td>\"Par\"</td></tr><tr><td>par + 1</td><td>\"Bogey\"</td></tr><tr><td>par + 2</td><td>\"Double Bogey\"</td></tr><tr><td>>= par + 3</td><td>\"Go Home!\"</td></tr></tbody></table>\n<p><code>par</code> and <code>strokes</code> will always be numeric and positive. We have added an array of all the names for your convenience.</p>\n</section>","id":"5664820f61c48e80c9fa476c","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c9ykNUR","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18195,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/golf-code","tests":[{"text":"<p><code>golfScore(4, 1)</code> should return the string <code>Hole-in-one!</code></p>","testString":"assert(golfScore(4, 1) === 'Hole-in-one!');"},{"text":"<p><code>golfScore(4, 2)</code> should return the string <code>Eagle</code></p>","testString":"assert(golfScore(4, 2) === 'Eagle');"},{"text":"<p><code>golfScore(5, 2)</code> should return the string <code>Eagle</code></p>","testString":"assert(golfScore(5, 2) === 'Eagle');"},{"text":"<p><code>golfScore(4, 3)</code> should return the string <code>Birdie</code></p>","testString":"assert(golfScore(4, 3) === 'Birdie');"},{"text":"<p><code>golfScore(4, 4)</code> should return the string <code>Par</code></p>","testString":"assert(golfScore(4, 4) === 'Par');"},{"text":"<p><code>golfScore(1, 1)</code> should return the string <code>Hole-in-one!</code></p>","testString":"assert(golfScore(1, 1) === 'Hole-in-one!');"},{"text":"<p><code>golfScore(5, 5)</code> should return the string <code>Par</code></p>","testString":"assert(golfScore(5, 5) === 'Par');"},{"text":"<p><code>golfScore(4, 5)</code> should return the string <code>Bogey</code></p>","testString":"assert(golfScore(4, 5) === 'Bogey');"},{"text":"<p><code>golfScore(4, 6)</code> should return the string <code>Double Bogey</code></p>","testString":"assert(golfScore(4, 6) === 'Double Bogey');"},{"text":"<p><code>golfScore(4, 7)</code> should return the string <code>Go Home!</code></p>","testString":"assert(golfScore(4, 7) === 'Go Home!');"},{"text":"<p><code>golfScore(5, 9)</code> should return the string <code>Go Home!</code></p>","testString":"assert(golfScore(5, 9) === 'Go Home!');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const names = [\"Hole-in-one!\", \"Eagle\", \"Birdie\", \"Par\", \"Bogey\", \"Double Bogey\", \"Go Home!\"];\n\nfunction golfScore(par, strokes) {\n  // Only change code below this line\n\n\n  return \"Change Me\";\n  // Only change code above this line\n}\n\ngolfScore(5, 4);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"golf-code","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/selecting-from-many-options-with-switch-statements","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/chaining-if-else-statements","id":"5664820f61c48e80c9fa476c"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/golf-code"}},
    "staticQueryHashes": ["1800977889","4268002518"]}