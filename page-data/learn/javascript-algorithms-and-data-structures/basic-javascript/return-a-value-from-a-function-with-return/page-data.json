{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/return-a-value-from-a-function-with-return",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Return a Value from a Function with Return","description":"<section id=\"description\">\n<p>We can pass values into a function with <dfn>arguments</dfn>. You can use a <code>return</code> statement to send a value back out of a function.</p>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">function plusThree(num) {\n  return num + 3;\n}\n\nconst answer = plusThree(5);\n</code></pre>\n<p><code>answer</code> has the value <code>8</code>.</p>\n<p><code>plusThree</code> takes an <dfn>argument</dfn> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\n</section>","id":"56533eb9ac21ba0edf2244c2","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a function <code>timesFive</code> that accepts one argument, multiplies it by <code>5</code>, and returns the new value.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cy87wue","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18271,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/return-a-value-from-a-function-with-return","tests":[{"text":"<p><code>timesFive</code> should be a function</p>","testString":"assert(typeof timesFive === 'function');"},{"text":"<p><code>timesFive(5)</code> should return <code>25</code></p>","testString":"assert(timesFive(5) === 25);"},{"text":"<p><code>timesFive(2)</code> should return <code>10</code></p>","testString":"assert(timesFive(2) === 10);"},{"text":"<p><code>timesFive(0)</code> should return <code>0</code></p>","testString":"assert(timesFive(0) === 0);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"return-a-value-from-a-function-with-return","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/global-scope-and-functions","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/passing-values-to-functions-with-arguments","id":"56533eb9ac21ba0edf2244c2"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/return-a-value-from-a-function-with-return"}},
    "staticQueryHashes": ["1800977889","4268002518"]}