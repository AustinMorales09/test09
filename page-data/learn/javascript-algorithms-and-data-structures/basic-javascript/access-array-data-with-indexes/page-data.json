{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Access Array Data with Indexes","description":"<section id=\"description\">\n<p>We can access the data inside arrays using <dfn>indexes</dfn>.</p>\n<p>Array indexes are written in the same bracket notation that strings use, except that instead of specifying a character, they are specifying an entry in the array. Like strings, arrays use <dfn>zero-based</dfn> indexing, so the first element in an array has an index of <code>0</code>.</p>\n<br>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">const array = [50, 60, 70];\nconsole.log(array[0]);\nconst data = array[1];\n</code></pre>\n<p>The <code>console.log(array[0])</code> prints <code>50</code>, and <code>data</code> has the value <code>60</code>.</p>\n</section>","id":"56bbb991ad1ed5201cd392ca","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a variable called <code>myData</code> and set it to equal the first value of <code>myArray</code> using bracket notation.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cBZQbTz","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16158,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes","tests":[{"text":"<p>The variable <code>myData</code> should equal the first value of <code>myArray</code>.</p>","testString":"assert(\n  (function () {\n    if (\n      typeof myArray !== 'undefined' &&\n      typeof myData !== 'undefined' &&\n      myArray[0] === myData\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"},{"text":"<p>The data in variable <code>myArray</code> should be accessed using bracket notation.</p>","testString":"assert(\n  (function () {\n    if (__helpers.removeJSComments(code).match(/\\s*=\\s*myArray\\[0\\]/g)) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const myArray = [50, 60, 70];\n\n","head":"","tail":"if(typeof myArray !== \"undefined\" && typeof myData !== \"undefined\"){(function(y,z){return 'myArray = ' + JSON.stringify(y) + ', myData = ' + JSON.stringify(z);})(myArray, myData);}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"access-array-data-with-indexes","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/modify-array-data-with-indexes","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/nest-one-array-within-another-array","id":"56bbb991ad1ed5201cd392ca"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/access-array-data-with-indexes"}},
    "staticQueryHashes": ["1800977889","4268002518"]}