{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/store-multiple-values-in-one-variable-using-javascript-arrays",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Store Multiple Values in one Variable using JavaScript Arrays","description":"<section id=\"description\">\n<p>With JavaScript <code>array</code> variables, we can store several pieces of data in one place.</p>\n<p>You start an array declaration with an opening square bracket, end it with a closing square bracket, and put a comma between each entry, like this:</p>\n<pre><code class=\"language-js\">const sandwich = [\"peanut butter\", \"jelly\", \"bread\"];\n</code></pre>\n</section>","id":"bd7993c9c69feddfaeb8bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Modify the new array <code>myArray</code> so that it contains both a string and a number (in that order).</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/crZQWAm","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18309,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/store-multiple-values-in-one-variable-using-javascript-arrays","tests":[{"text":"<p><code>myArray</code> should be an array.</p>","testString":"assert(typeof myArray == 'object');"},{"text":"<p>The first item in <code>myArray</code> should be a string.</p>","testString":"assert(typeof myArray[0] !== 'undefined' && typeof myArray[0] == 'string');"},{"text":"<p>The second item in <code>myArray</code> should be a number.</p>","testString":"assert(typeof myArray[1] !== 'undefined' && typeof myArray[1] == 'number');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Only change code below this line\nconst myArray = [];","head":"","tail":"(function(z){return z;})(myArray);","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"store-multiple-values-in-one-variable-using-javascript-arrays","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/nest-one-array-within-another-array","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/word-blanks","id":"bd7993c9c69feddfaeb8bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/store-multiple-values-in-one-variable-using-javascript-arrays"}},
    "staticQueryHashes": ["1800977889","4268002518"]}