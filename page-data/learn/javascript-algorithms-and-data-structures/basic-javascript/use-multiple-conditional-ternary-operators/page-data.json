{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/use-multiple-conditional-ternary-operators",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Use Multiple Conditional (Ternary) Operators","description":"<section id=\"description\">\n<p>In the previous challenge, you used a single conditional operator. You can also chain them together to check for multiple conditions.</p>\n<p>The following function uses <code>if</code>, <code>else if</code>, and <code>else</code> statements to check multiple conditions:</p>\n<pre><code class=\"language-js\">function findGreaterOrEqual(a, b) {\n  if (a === b) {\n    return \"a and b are equal\";\n  }\n  else if (a > b) {\n    return \"a is greater\";\n  }\n  else {\n    return \"b is greater\";\n  }\n}\n</code></pre>\n<p>The above function can be re-written using multiple conditional operators:</p>\n<pre><code class=\"language-js\">function findGreaterOrEqual(a, b) {\n  return (a === b) ? \"a and b are equal\" \n    : (a > b) ? \"a is greater\" \n    : \"b is greater\";\n}\n</code></pre>\n<p>It is considered best practice to format multiple conditional operators such that each condition is on a separate line, as shown above. Using multiple conditional operators without proper indentation may make your code hard to read. For example:</p>\n<pre><code class=\"language-js\">function findGreaterOrEqual(a, b) {\n  return (a === b) ? \"a and b are equal\" : (a > b) ? \"a is greater\" : \"b is greater\";\n}\n</code></pre>\n</section>","id":"587d7b7e367417b2b2512b21","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>In the <code>checkSign</code> function, use multiple conditional operators - following the recommended format used in <code>findGreaterOrEqual</code> - to check if a number is positive, negative or zero. The function should return <code>positive</code>, <code>negative</code> or <code>zero</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cyWJBT4","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301179,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-multiple-conditional-ternary-operators","tests":[{"text":"<p><code>checkSign</code> should use multiple conditional operators</p>","testString":"assert(/.+?\\s*?\\?\\s*?.+?\\s*?:\\s*?.+?\\s*?\\?\\s*?.+?\\s*?:\\s*?.+?/gi.test(__helpers.removeJSComments(code)));"},{"text":"<p><code>checkSign(10)</code> should return the string <code>positive</code>. Note that capitalization matters</p>","testString":"assert(checkSign(10) === 'positive');"},{"text":"<p><code>checkSign(-12)</code> should return the string <code>negative</code>. Note that capitalization matters</p>","testString":"assert(checkSign(-12) === 'negative');"},{"text":"<p><code>checkSign(0)</code> should return the string <code>zero</code>. Note that capitalization matters</p>","testString":"assert(checkSign(0) === 'zero');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function checkSign(num) {\n\n}\n\ncheckSign(10);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"use-multiple-conditional-ternary-operators","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-recursion-to-create-a-countdown","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-the-conditional-ternary-operator","id":"587d7b7e367417b2b2512b21"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-multiple-conditional-ternary-operators"}},
    "staticQueryHashes": ["1800977889","4268002518"]}