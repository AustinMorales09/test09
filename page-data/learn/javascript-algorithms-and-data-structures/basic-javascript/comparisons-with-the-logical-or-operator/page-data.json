{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-or-operator",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Comparisons with the Logical Or Operator","description":"<section id=\"description\">\n<p>The <dfn>logical or</dfn> operator (<code>||</code>) returns <code>true</code> if either of the <dfn>operands</dfn> is <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>The <dfn>logical or</dfn> operator is composed of two pipe symbols: (<code>||</code>). This can typically be found between your Backspace and Enter keys.</p>\n<p>The pattern below should look familiar from prior waypoints.</p>\n<pre><code class=\"language-js\">if (num > 10) {\n  return \"No\";\n}\nif (num &#x3C; 5) {\n  return \"No\";\n}\nreturn \"Yes\";\n</code></pre>\n<p>This code will return <code>Yes</code> if <code>num</code> is between <code>5</code> and <code>10</code> (<code>5</code> and <code>10</code> included). The same logic can be written with the <dfn>logical or</dfn> operator.</p>\n<pre><code class=\"language-js\">if (num > 10 || num &#x3C; 5) {\n  return \"No\";\n}\nreturn \"Yes\";\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244d9","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Combine the two <code>if</code> statements into one statement which returns the string <code>Outside</code> if <code>val</code> is not between <code>10</code> and <code>20</code>, inclusive. Otherwise, return the string <code>Inside</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cEPrGTN","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16800,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-or-operator","tests":[{"text":"<p>You should use the <code>||</code> operator once</p>","testString":"assert(__helpers.removeJSComments(code).match(/\\|\\|/g).length === 1);"},{"text":"<p>You should only have one <code>if</code> statement</p>","testString":"assert(__helpers.removeJSComments(code).match(/if/g).length === 1);"},{"text":"<p><code>testLogicalOr(0)</code> should return the string <code>Outside</code></p>","testString":"assert(testLogicalOr(0) === 'Outside');"},{"text":"<p><code>testLogicalOr(9)</code> should return the string <code>Outside</code></p>","testString":"assert(testLogicalOr(9) === 'Outside');"},{"text":"<p><code>testLogicalOr(10)</code> should return the string <code>Inside</code></p>","testString":"assert(testLogicalOr(10) === 'Inside');"},{"text":"<p><code>testLogicalOr(15)</code> should return the string <code>Inside</code></p>","testString":"assert(testLogicalOr(15) === 'Inside');"},{"text":"<p><code>testLogicalOr(19)</code> should return the string <code>Inside</code></p>","testString":"assert(testLogicalOr(19) === 'Inside');"},{"text":"<p><code>testLogicalOr(20)</code> should return the string <code>Inside</code></p>","testString":"assert(testLogicalOr(20) === 'Inside');"},{"text":"<p><code>testLogicalOr(21)</code> should return the string <code>Outside</code></p>","testString":"assert(testLogicalOr(21) === 'Outside');"},{"text":"<p><code>testLogicalOr(25)</code> should return the string <code>Outside</code></p>","testString":"assert(testLogicalOr(25) === 'Outside');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function testLogicalOr(val) {\n  // Only change code below this line\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  // Only change code above this line\n  return \"Inside\";\n}\n\ntestLogicalOr(15);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"comparisons-with-the-logical-or-operator","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/introducing-else-statements","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-and-operator","id":"56533eb9ac21ba0edf2244d9"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparisons-with-the-logical-or-operator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}