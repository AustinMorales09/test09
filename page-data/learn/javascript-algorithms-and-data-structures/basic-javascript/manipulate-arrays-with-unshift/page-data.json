{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-unshift",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Manipulate Arrays With unshift Method","description":"<section id=\"description\">\n<p>Not only can you <code>shift</code> elements off of the beginning of an array, you can also <code>unshift</code> elements to the beginning of an array i.e. add elements in front of the array.</p>\n<p><code>.unshift()</code> works exactly like <code>.push()</code>, but instead of adding the element at the end of the array, <code>unshift()</code> adds the element at the beginning of the array.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const ourArray = [\"Stimpson\", \"J\", \"cat\"];\nourArray.shift();\nourArray.unshift(\"Happy\");\n</code></pre>\n<p>After the <code>shift</code>, <code>ourArray</code> would have the value <code>[\"J\", \"cat\"]</code>. After the <code>unshift</code>, <code>ourArray</code> would have the value <code>[\"Happy\", \"J\", \"cat\"]</code>.</p>\n</section>","id":"56bbb991ad1ed5201cd392ce","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add <code>[\"Paul\", 35]</code> to the beginning of the <code>myArray</code> variable using <code>unshift()</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/ckNDESv","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18239,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-unshift","tests":[{"text":"<p><code>myArray</code> should now have <code>[[\"Paul\", 35], [\"dog\", 3]]</code>.</p>","testString":"assert(\n  (function (d) {\n    if (\n      typeof d[0] === 'object' &&\n      d[0][0] == 'Paul' &&\n      d[0][1] === 35 &&\n      d[1][0] != undefined &&\n      d[1][0] == 'dog' &&\n      d[1][1] != undefined &&\n      d[1][1] == 3\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })(myArray)\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nconst myArray = [[\"John\", 23], [\"dog\", 3]];\nmyArray.shift();\n\n// Only change code below this line\n","head":"","tail":"(function(y, z){return 'myArray = ' + JSON.stringify(y);})(myArray);","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"manipulate-arrays-with-unshift","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/shopping-list","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-shift","id":"56bbb991ad1ed5201cd392ce"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-unshift"}},
    "staticQueryHashes": ["1800977889","4268002518"]}