{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Declare JavaScript Variables","description":"<section id=\"description\">\n<p>In computer science, <dfn>data</dfn> is anything that is meaningful to the computer. JavaScript provides eight different <dfn>data types</dfn> which are <code>undefined</code>, <code>null</code>, <code>boolean</code>, <code>string</code>, <code>symbol</code>, <code>bigint</code>, <code>number</code>, and <code>object</code>.</p>\n<p>For example, computers distinguish between numbers, such as the number <code>12</code>, and <code>strings</code>, such as <code>\"12\"</code>, <code>\"dog\"</code>, or <code>\"123 cats\"</code>, which are collections of characters. Computers can perform mathematical operations on a number, but not on a string.</p>\n<p><dfn>Variables</dfn> allow computers to store and manipulate data in a dynamic fashion. They do this by using a \"label\" to point to the data rather than using the data itself. Any of the eight data types may be stored in a variable.</p>\n<p>Variables are similar to the x and y variables you use in mathematics, which means they're a simple name to represent the data we want to refer to. Computer variables differ from mathematical variables in that they can store different values at different times.</p>\n<p>We tell JavaScript to create or <dfn>declare</dfn> a variable by putting the keyword <code>var</code> in front of it, like so:</p>\n<pre><code class=\"language-js\">var ourName;\n</code></pre>\n<p>creates a variable called <code>ourName</code>. In JavaScript we end statements with semicolons. Variable names can be made up of numbers, letters, and <code>$</code> or <code>_</code>, but may not contain spaces or start with a number.</p>\n</section>","id":"bd7123c9c443eddfaeb5bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use the <code>var</code> keyword to create a variable called <code>myName</code>.</p>\n<p><strong>Hint</strong><br>\nLook at the <code>ourName</code> example above if you get stuck.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cNanrHq","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":17556,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables","tests":[{"text":"<p>You should declare <code>myName</code> with the <code>var</code> keyword, ending with a semicolon</p>","testString":"assert(/var\\s+myName\\s*;/.test(__helpers.removeJSComments(code)));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"","head":"","tail":"if(typeof myName !== \"undefined\"){(function(v){return v;})(myName);}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"declare-javascript-variables","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code","id":"bd7123c9c443eddfaeb5bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables"}},
    "staticQueryHashes": ["1800977889","4268002518"]}