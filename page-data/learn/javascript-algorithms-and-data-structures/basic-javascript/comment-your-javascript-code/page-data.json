{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Comment Your JavaScript Code","description":"<section id=\"description\">\n<p>Comments are lines of code that JavaScript will intentionally ignore. Comments are a great way to leave notes to yourself and to other people who will later need to figure out what that code does.</p>\n<p>There are two ways to write comments in JavaScript:</p>\n<p>Using <code>//</code> will tell JavaScript to ignore the remainder of the text on the current line. This is an in-line comment:</p>\n<pre><code class=\"language-js\">// This is an in-line comment.\n</code></pre>\n<p>You can make a multi-line comment beginning with <code>/*</code> and ending with <code>*/</code>. This is a multi-line comment:</p>\n<pre><code class=\"language-js\">/* This is a\nmulti-line comment */\n</code></pre>\n<p><strong>NOTE:</strong> As you write code, you should regularly add comments to clarify the function of parts of your code. Good commenting can help communicate the intent of your codeâ€”both for others <em>and</em> for your future self.</p>\n</section>","id":"bd7123c9c441eddfaeb4bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Try creating one of each type of comment.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c7ynnTp","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16783,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code","tests":[{"text":"<p>You should create a <code>//</code> style comment that contains at least five letters.</p>","testString":"assert(code.match(/(\\/\\/)...../g));"},{"text":"<p>You should create a <code>/* */</code> style comment that contains at least five letters.</p>","testString":"assert(code.match(/(\\/\\*)([^\\/]{5,})(?=\\*\\/)/gm));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"comment-your-javascript-code","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":true,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/declare-javascript-variables","prevChallengePath":"/learn/responsive-web-design/css-grid/create-grids-within-grids","id":"bd7123c9c441eddfaeb4bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comment-your-javascript-code"}},
    "staticQueryHashes": ["1800977889","4268002518"]}