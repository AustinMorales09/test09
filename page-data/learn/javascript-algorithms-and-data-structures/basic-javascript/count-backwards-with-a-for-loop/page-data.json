{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/count-backwards-with-a-for-loop",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Count Backwards With a For Loop","description":"<section id=\"description\">\n<p>A for loop can also count backwards, so long as we can define the right conditions.</p>\n<p>In order to decrement by two each iteration, we'll need to change our initialization, condition, and final expression.</p>\n<p>We'll start at <code>i = 10</code> and loop while <code>i > 0</code>. We'll decrement <code>i</code> by 2 each loop with <code>i -= 2</code>.</p>\n<pre><code class=\"language-js\">const ourArray = [];\n\nfor (let i = 10; i > 0; i -= 2) {\n  ourArray.push(i);\n}\n</code></pre>\n<p><code>ourArray</code> will now contain <code>[10, 8, 6, 4, 2]</code>. Let's change our initialization and final expression so we can count backwards by twos to create an array of descending odd numbers.</p>\n</section>","id":"56105e7b514f539506016a5e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Push the odd numbers from 9 through 1 to <code>myArray</code> using a <code>for</code> loop.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c2R6BHa","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16808,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/count-backwards-with-a-for-loop","tests":[{"text":"<p>You should be using a <code>for</code> loop for this.</p>","testString":"assert(/for\\s*\\([^)]+?\\)/.test(__helpers.removeJSComments(code)));"},{"text":"<p>You should be using the array method <code>push</code>.</p>","testString":"assert(__helpers.removeJSComments(code).match(/myArray.push/));"},{"text":"<p><code>myArray</code> should equal <code>[9, 7, 5, 3, 1]</code>.</p>","testString":"assert.deepEqual(myArray, [9, 7, 5, 3, 1]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nconst myArray = [];\n\n// Only change code below this line\n","head":"","tail":"if(typeof myArray !== \"undefined\"){(function(){return myArray;})();}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"count-backwards-with-a-for-loop","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-through-an-array-with-a-for-loop","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-odd-numbers-with-a-for-loop","id":"56105e7b514f539506016a5e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/count-backwards-with-a-for-loop"}},
    "staticQueryHashes": ["1800977889","4268002518"]}