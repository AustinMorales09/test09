{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-strict-inequality-operator",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Comparison with the Strict Inequality Operator","description":"<section id=\"description\">\n<p>The strict inequality operator (<code>!==</code>) is the logical opposite of the strict equality operator. It means \"Strictly Not Equal\" and returns <code>false</code> where strict equality would return <code>true</code> and <em>vice versa</em>. The strict inequality operator will not convert data types.</p>\n<p><strong>Examples</strong></p>\n<pre><code class=\"language-js\">3 !==  3  // false\n3 !== '3' // true\n4 !==  3  // true\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244d3","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the strict inequality operator to the <code>if</code> statement so the function will return the string <code>Not Equal</code> when <code>val</code> is not strictly equal to <code>17</code></p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cKekkUy","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16791,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-strict-inequality-operator","tests":[{"text":"<p><code>testStrictNotEqual(17)</code> should return the string <code>Equal</code></p>","testString":"assert(testStrictNotEqual(17) === 'Equal');"},{"text":"<p><code>testStrictNotEqual(\"17\")</code> should return the string <code>Not Equal</code></p>","testString":"assert(testStrictNotEqual('17') === 'Not Equal');"},{"text":"<p><code>testStrictNotEqual(12)</code> should return the string <code>Not Equal</code></p>","testString":"assert(testStrictNotEqual(12) === 'Not Equal');"},{"text":"<p><code>testStrictNotEqual(\"bob\")</code> should return the string <code>Not Equal</code></p>","testString":"assert(testStrictNotEqual('bob') === 'Not Equal');"},{"text":"<p>You should use the <code>!==</code> operator</p>","testString":"assert(__helpers.removeJSComments(code).match(/(val\\s*!==\\s*\\d+)|(\\d+\\s*!==\\s*val)/g).length > 0);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nfunction testStrictNotEqual(val) {\n  if (val) { // Change this line\n    return \"Not Equal\";\n  }\n  return \"Equal\";\n}\n\ntestStrictNotEqual(10);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"comparison-with-the-strict-inequality-operator","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-greater-than-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-inequality-operator","id":"56533eb9ac21ba0edf2244d3"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-strict-inequality-operator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}