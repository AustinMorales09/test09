{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Iterate with JavaScript While Loops","description":"<section id=\"description\">\n<p>You can run the same code multiple times by using a loop.</p>\n<p>The first type of loop we will learn is called a <code>while</code> loop because it runs while a specified condition is true and stops once that condition is no longer true.</p>\n<pre><code class=\"language-js\">const ourArray = [];\nlet i = 0;\n\nwhile (i &#x3C; 5) {\n  ourArray.push(i);\n  i++;\n}\n</code></pre>\n<p>In the code example above, the <code>while</code> loop will execute 5 times and append the numbers 0 through 4 to <code>ourArray</code>.</p>\n<p>Let's try getting a while loop to work by pushing values to an array.</p>\n</section>","id":"cf1111c1c11feddfaeb1bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the numbers 5 through 0 (inclusive) in descending order to <code>myArray</code> using a <code>while</code> loop.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/c8QbnCM","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18220,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops","tests":[{"text":"<p>You should be using a <code>while</code> loop for this.</p>","testString":"assert(__helpers.removeJSComments(code).match(/while/g));"},{"text":"<p><code>myArray</code> should equal <code>[5, 4, 3, 2, 1, 0]</code>.</p>","testString":"assert.deepEqual(myArray, [5, 4, 3, 2, 1, 0]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nconst myArray = [];\n\n// Only change code below this line\n","head":"","tail":"if(typeof myArray !== \"undefined\"){(function(){return myArray;})();}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"iterate-with-javascript-while-loops","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-for-loops","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/record-collection","id":"cf1111c1c11feddfaeb1bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/iterate-with-javascript-while-loops"}},
    "staticQueryHashes": ["1800977889","4268002518"]}