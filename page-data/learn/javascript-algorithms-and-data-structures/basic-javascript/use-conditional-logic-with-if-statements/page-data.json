{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Use Conditional Logic with If Statements","description":"<section id=\"description\">\n<p><code>if</code> statements are used to make decisions in code. The keyword <code>if</code> tells JavaScript to execute the code in the curly braces under certain conditions, defined in the parentheses. These conditions are known as <code>Boolean</code> conditions and they may only be <code>true</code> or <code>false</code>.</p>\n<p>When the condition evaluates to <code>true</code>, the program executes the statement inside the curly braces. When the Boolean condition evaluates to <code>false</code>, the statement inside the curly braces will not execute.</p>\n<p><strong>Pseudocode</strong></p>\n<blockquote>if (<i>condition is true</i>) {<br>  <i>statement is executed</i><br>}</blockquote>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">function test(myCondition) {\n  if (myCondition) {\n    return \"It was true\";\n  }\n  return \"It was false\";\n}\n\ntest(true);\ntest(false);\n</code></pre>\n<p><code>test(true)</code> returns the string <code>It was true</code>, and <code>test(false)</code> returns the string <code>It was false</code>.</p>\n<p>When <code>test</code> is called with a value of <code>true</code>, the <code>if</code> statement evaluates <code>myCondition</code> to see if it is <code>true</code> or not. Since it is <code>true</code>, the function returns <code>It was true</code>. When we call <code>test</code> with a value of <code>false</code>, <code>myCondition</code> is <em>not</em> <code>true</code> and the statement in the curly braces is not executed and the function returns <code>It was false</code>.</p>\n</section>","id":"cf1111c1c12feddfaeb3bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create an <code>if</code> statement inside the function to return <code>Yes, that was true</code> if the parameter <code>wasThatTrue</code> is <code>true</code> and return <code>No, that was false</code> otherwise.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cy87mf3","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18348,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements","tests":[{"text":"<p><code>trueOrFalse</code> should be a function</p>","testString":"assert(typeof trueOrFalse === 'function');"},{"text":"<p><code>trueOrFalse(true)</code> should return a string</p>","testString":"assert(typeof trueOrFalse(true) === 'string');"},{"text":"<p><code>trueOrFalse(false)</code> should return a string</p>","testString":"assert(typeof trueOrFalse(false) === 'string');"},{"text":"<p><code>trueOrFalse(true)</code> should return the string <code>Yes, that was true</code></p>","testString":"assert(trueOrFalse(true) === 'Yes, that was true');"},{"text":"<p><code>trueOrFalse(false)</code> should return the string <code>No, that was false</code></p>","testString":"assert(trueOrFalse(false) === 'No, that was false');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function trueOrFalse(wasThatTrue) {\n  // Only change code below this line\n\n\n\n  // Only change code above this line\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"use-conditional-logic-with-if-statements","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-boolean-values","id":"cf1111c1c12feddfaeb3bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements"}},
    "staticQueryHashes": ["1800977889","4268002518"]}