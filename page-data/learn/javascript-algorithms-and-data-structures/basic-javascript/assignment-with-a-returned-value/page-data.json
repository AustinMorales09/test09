{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Assignment with a Returned Value","description":"<section id=\"description\">\n<p>If you'll recall from our discussion about <a href=\"/learn/javascript-algorithms-and-data-structures/basic-javascript/storing-values-with-the-assignment-operator\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Storing Values with the Assignment Operator</a>, everything to the right of the equal sign is resolved before the value is assigned. This means we can take the return value of a function and assign it to a variable.</p>\n<p>Assume we have defined a function <code>sum</code> which adds two numbers together.</p>\n<pre><code class=\"language-js\">ourSum = sum(5, 12);\n</code></pre>\n<p>Calling the <code>sum</code> function with the arguments of <code>5</code> and <code>12</code> produces a return value of <code>17</code>. This return value is assigned to the <code>ourSum</code> variable.</p>\n</section>","id":"56533eb9ac21ba0edf2244c3","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Call the <code>processArg</code> function with an argument of <code>7</code> and assign its return value to the variable <code>processed</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/ce2pEtB","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16658,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value","tests":[{"text":"<p><code>processed</code> should have a value of <code>2</code></p>","testString":"assert(processed === 2);"},{"text":"<p>You should assign <code>processArg</code> to <code>processed</code></p>","testString":"assert(/processed\\s*=\\s*processArg\\(\\s*7\\s*\\)/.test(__helpers.removeJSComments(code)));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nlet processed = 0;\n\nfunction processArg(num) {\n  return (num + 3) / 5;\n}\n\n// Only change code below this line\n","head":"","tail":"(function(){return \"processed = \" + processed})();","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"assignment-with-a-returned-value","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/stand-in-line","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/understanding-undefined-value-returned-from-a-function","id":"56533eb9ac21ba0edf2244c3"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/assignment-with-a-returned-value"}},
    "staticQueryHashes": ["1800977889","4268002518"]}