{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Manipulate Arrays With push Method","description":"<section id=\"description\">\n<p>An easy way to append data to the end of an array is via the <code>push()</code> method.</p>\n<p>The <code>push()</code> method takes one or more <dfn>arguments</dfn> and appends them to the end of the array, in the order in which they appear. It returns the new length of the array.</p>\n<p>Examples:</p>\n<pre><code class=\"language-js\">const arr1 = [1, 2, 3];\narr1.push(4, 5);\n\nconst arr2 = [\"Stimpson\", \"J\", \"cat\"];\narr2.push([\"happy\", \"joy\"]);\n</code></pre>\n<p><code>arr1</code> now has the value <code>[1, 2, 3, 4, 5]</code> and <code>arr2</code> has the value <code>[\"Stimpson\", \"J\", \"cat\", [\"happy\", \"joy\"]]</code>.</p>\n</section>","id":"56bbb991ad1ed5201cd392cb","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Push <code>[\"dog\", 3]</code> onto the end of the <code>myArray</code> variable.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cnqmVtJ","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18237,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push","tests":[{"text":"<p><code>myArray</code> should now equal <code>[[\"John\", 23], [\"cat\", 2], [\"dog\", 3]]</code>.</p>","testString":"assert(\n  (function (d) {\n    if (\n      d[2] != undefined &&\n      d[0][0] == 'John' &&\n      d[0][1] === 23 &&\n      d[2][0] == 'dog' &&\n      d[2][1] === 3 &&\n      d[2].length == 2\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })(myArray)\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nconst myArray = [[\"John\", 23], [\"cat\", 2]];\n\n// Only change code below this line\n","head":"","tail":"(function(z){return 'myArray = ' + JSON.stringify(z);})(myArray);","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"manipulate-arrays-with-push","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-pop","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/access-multi-dimensional-arrays-with-indexes","id":"56bbb991ad1ed5201cd392cb"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/manipulate-arrays-with-push"}},
    "staticQueryHashes": ["1800977889","4268002518"]}