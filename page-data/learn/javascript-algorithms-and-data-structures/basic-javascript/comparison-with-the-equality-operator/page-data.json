{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-javascript","title":"Comparison with the Equality Operator","description":"<section id=\"description\">\n<p>There are many <dfn>comparison operators</dfn> in JavaScript. All of these operators return a boolean <code>true</code> or <code>false</code> value.</p>\n<p>The most basic operator is the equality operator <code>==</code>. The equality operator compares two values and returns <code>true</code> if they're equivalent or <code>false</code> if they are not. Note that equality is different from assignment (<code>=</code>), which assigns the value on the right of the operator to a variable on the left.</p>\n<pre><code class=\"language-js\">function equalityTest(myVal) {\n  if (myVal == 10) {\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}\n</code></pre>\n<p>If <code>myVal</code> is equal to <code>10</code>, the equality operator returns <code>true</code>, so the code in the curly braces will execute, and the function will return <code>Equal</code>. Otherwise, the function will return <code>Not Equal</code>. In order for JavaScript to compare two different <dfn>data types</dfn> (for example, <code>numbers</code> and <code>strings</code>), it must convert one type to another. This is known as Type Coercion. Once it does, however, it can compare terms as follows:</p>\n<pre><code class=\"language-js\">1   ==  1  // true\n1   ==  2  // false\n1   == '1' // true\n\"3\" ==  3  // true\n</code></pre>\n</section>","id":"56533eb9ac21ba0edf2244d0","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add the equality operator to the indicated line so that the function will return the string <code>Equal</code> when <code>val</code> is equivalent to <code>12</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":"https://scrimba.com/c/cKyVMAL","superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16784,"fields":{"blockName":"basic-javascript","slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator","tests":[{"text":"<p><code>testEqual(10)</code> should return the string <code>Not Equal</code></p>","testString":"assert(testEqual(10) === 'Not Equal');"},{"text":"<p><code>testEqual(12)</code> should return the string <code>Equal</code></p>","testString":"assert(testEqual(12) === 'Equal');"},{"text":"<p><code>testEqual(\"12\")</code> should return the string <code>Equal</code></p>","testString":"assert(testEqual('12') === 'Equal');"},{"text":"<p>You should use the <code>==</code> operator</p>","testString":"assert(__helpers.removeJSComments(code).match(/==/g) && !__helpers.removeJSComments(code).match(/===/g));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Setup\nfunction testEqual(val) {\n  if (val) { // Change this line\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}\n\ntestEqual(10);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-javascript","dashedName":"comparison-with-the-equality-operator","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-javascript","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-javascript","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-strict-equality-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-javascript/use-conditional-logic-with-if-statements","id":"56533eb9ac21ba0edf2244d0"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function rangeOfNumbers(startNum, endNum) {\n  if (endNum - startNum === 0) {\n    return [startNum];\n  } else {\n    const numbers = rangeOfNumbers(startNum, endNum - 1);\n    numbers.push(endNum);\n    return numbers;\n  }\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-javascript/comparison-with-the-equality-operator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}