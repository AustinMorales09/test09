{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-the-immediately-invoked-function-expression-iife",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Understand the Immediately Invoked Function Expression (IIFE)","description":"<section id=\"description\">\n<p>A common pattern in JavaScript is to execute a function as soon as it is declared:</p>\n<pre><code class=\"language-js\">(function () {\n  console.log(\"Chirp, chirp!\");\n})();\n</code></pre>\n<p>This is an anonymous function expression that executes right away, and outputs <code>Chirp, chirp!</code> immediately.</p>\n<p>Note that the function has no name and is not stored in a variable. The two parentheses () at the end of the function expression cause it to be immediately executed or invoked. This pattern is known as an <dfn>immediately invoked function expression</dfn> or <dfn>IIFE</dfn>.</p>\n</section>","id":"587d7db2367417b2b2512b8b","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Rewrite the function <code>makeNest</code> and remove its call so instead it's an anonymous immediately invoked function expression (IIFE).</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301328,"fields":{"blockName":"object-oriented-programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-the-immediately-invoked-function-expression-iife","tests":[{"text":"<p>The function should be anonymous.</p>","testString":"assert(/\\((function|\\(\\))(=>|\\(\\)){?/.test(__helpers.removeJSComments(code).replace(/\\s/g, '')));"},{"text":"<p>Your function should have parentheses at the end of the expression to call it immediately.</p>","testString":"assert(/\\(.*(\\)\\(|\\}\\(\\))\\)/.test(__helpers.removeJSComments(code).replace(/[\\s;]/g, '')));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function makeNest() {\n  console.log(\"A cozy nest is ready\");\n}\n\nmakeNest();","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#object-oriented-programming","dashedName":"understand-the-immediately-invoked-function-expression-iife","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-closure-to-protect-properties-within-an-object-from-being-modified-externally","id":"587d7db2367417b2b2512b8b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-the-immediately-invoked-function-expression-iife"}},
    "staticQueryHashes": ["1800977889","4268002518"]}