{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-prototype-properties-to-reduce-duplicate-code",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Use Prototype Properties to Reduce Duplicate Code","description":"<section id=\"description\">\n<p>Since <code>numLegs</code> will probably have the same value for all instances of <code>Bird</code>, you essentially have a duplicated variable <code>numLegs</code> inside each <code>Bird</code> instance.</p>\n<p>This may not be an issue when there are only two instances, but imagine if there are millions of instances. That would be a lot of duplicated variables.</p>\n<p>A better way is to use the <code>prototype</code> of <code>Bird</code>. Properties in the <code>prototype</code> are shared among ALL instances of <code>Bird</code>. Here's how to add <code>numLegs</code> to the <code>Bird prototype</code>:</p>\n<pre><code class=\"language-js\">Bird.prototype.numLegs = 2;\n</code></pre>\n<p>Now all instances of <code>Bird</code> have the <code>numLegs</code> property.</p>\n<pre><code class=\"language-js\">console.log(duck.numLegs);\nconsole.log(canary.numLegs);\n</code></pre>\n<p>Since all instances automatically have the properties on the <code>prototype</code>, think of a <code>prototype</code> as a \"recipe\" for creating objects. Note that the <code>prototype</code> for <code>duck</code> and <code>canary</code> is part of the <code>Bird</code> constructor as <code>Bird.prototype</code>.</p>\n</section>","id":"587d7dae367417b2b2512b7c","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Add a <code>numLegs</code> property to the <code>prototype</code> of <code>Dog</code></p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301336,"fields":{"blockName":"object-oriented-programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-prototype-properties-to-reduce-duplicate-code","tests":[{"text":"<p><code>beagle</code> should have a <code>numLegs</code> property.</p>","testString":"assert(beagle.numLegs !== undefined);"},{"text":"<p><code>beagle.numLegs</code> should be a number.</p>","testString":"assert(typeof beagle.numLegs === 'number');"},{"text":"<p><code>numLegs</code> should be a <code>prototype</code> property not an own property.</p>","testString":"assert(beagle.hasOwnProperty('numLegs') === false);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function Dog(name) {\n  this.name = name;\n}\n\n\n\n// Only change code above this line\nlet beagle = new Dog(\"Snoopy\");","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#object-oriented-programming","dashedName":"use-prototype-properties-to-reduce-duplicate-code","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/iterate-over-all-properties","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties","id":"587d7dae367417b2b2512b7c"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-prototype-properties-to-reduce-duplicate-code"}},
    "staticQueryHashes": ["1800977889","4268002518"]}