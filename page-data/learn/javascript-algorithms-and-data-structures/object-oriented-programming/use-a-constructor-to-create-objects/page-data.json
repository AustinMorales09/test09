{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-a-constructor-to-create-objects",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Use a Constructor to Create Objects","description":"<section id=\"description\">\n<p>Here's the <code>Bird</code> constructor from the previous challenge:</p>\n<pre><code class=\"language-js\">function Bird() {\n  this.name = \"Albert\";\n  this.color  = \"blue\";\n  this.numLegs = 2;\n}\n\nlet blueBird = new Bird();\n</code></pre>\n<p><strong>NOTE:</strong> <code>this</code> inside the constructor always refers to the object being created.</p>\n<p>Notice that the <code>new</code> operator is used when calling a constructor. This tells JavaScript to create a new instance of <code>Bird</code> called <code>blueBird</code>. Without the <code>new</code> operator, <code>this</code> inside the constructor would not point to the newly created object, giving unexpected results. Now <code>blueBird</code> has all the properties defined inside the <code>Bird</code> constructor:</p>\n<pre><code class=\"language-js\">blueBird.name;\nblueBird.color;\nblueBird.numLegs;\n</code></pre>\n<p>Just like any other object, its properties can be accessed and modified:</p>\n<pre><code class=\"language-js\">blueBird.name = 'Elvira';\nblueBird.name;\n</code></pre>\n</section>","id":"587d7dad367417b2b2512b78","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use the <code>Dog</code> constructor from the last lesson to create a new instance of <code>Dog</code>, assigning it to a variable <code>hound</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18233,"fields":{"blockName":"object-oriented-programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-a-constructor-to-create-objects","tests":[{"text":"<p><code>hound</code> should be created using the <code>Dog</code> constructor.</p>","testString":"assert(hound instanceof Dog);"},{"text":"<p>Your code should use the <code>new</code> operator to create an instance of <code>Dog</code>.</p>","testString":"assert(__helpers.removeJSComments(code).match(/new/g));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function Dog() {\n  this.name = \"Rupert\";\n  this.color = \"brown\";\n  this.numLegs = 4;\n}\n// Only change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#object-oriented-programming","dashedName":"use-a-constructor-to-create-objects","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/extend-constructors-to-receive-arguments","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/define-a-constructor-function","id":"587d7dad367417b2b2512b78"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-a-constructor-to-create-objects"}},
    "staticQueryHashes": ["1800977889","4268002518"]}