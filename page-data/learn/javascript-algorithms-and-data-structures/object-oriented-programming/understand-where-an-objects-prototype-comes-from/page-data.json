{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-where-an-objects-prototype-comes-from",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Understand Where an Objectâ€™s Prototype Comes From","description":"<section id=\"description\">\n<p>Just like people inherit genes from their parents, an object inherits its <code>prototype</code> directly from the constructor function that created it. For example, here the <code>Bird</code> constructor creates the <code>duck</code> object:</p>\n<pre><code class=\"language-js\">function Bird(name) {\n  this.name = name;\n}\n\nlet duck = new Bird(\"Donald\");\n</code></pre>\n<p><code>duck</code> inherits its <code>prototype</code> from the <code>Bird</code> constructor function. You can show this relationship with the <code>isPrototypeOf</code> method:</p>\n<pre><code class=\"language-js\">Bird.prototype.isPrototypeOf(duck);\n</code></pre>\n<p>This would return <code>true</code>.</p>\n</section>","id":"587d7db0367417b2b2512b81","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use <code>isPrototypeOf</code> to check the <code>prototype</code> of <code>beagle</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301330,"fields":{"blockName":"object-oriented-programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-where-an-objects-prototype-comes-from","tests":[{"text":"<p>You should show that <code>Dog.prototype</code> is the <code>prototype</code> of <code>beagle</code></p>","testString":"assert(/Dog\\.prototype\\.isPrototypeOf\\(beagle\\)/.test(__helpers.removeJSComments(code)));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function Dog(name) {\n  this.name = name;\n}\n\nlet beagle = new Dog(\"Snoopy\");\n\n// Only change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#object-oriented-programming","dashedName":"understand-where-an-objects-prototype-comes-from","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-the-prototype-chain","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/remember-to-set-the-constructor-property-when-changing-the-prototype","id":"587d7db0367417b2b2512b81"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-where-an-objects-prototype-comes-from"}},
    "staticQueryHashes": ["1800977889","4268002518"]}