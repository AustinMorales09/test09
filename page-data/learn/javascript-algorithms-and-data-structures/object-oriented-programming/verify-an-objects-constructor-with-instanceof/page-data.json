{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof",
    "result": {"data":{"challengeNode":{"challenge":{"block":"object-oriented-programming","title":"Verify an Object's Constructor with instanceof","description":"<section id=\"description\">\n<p>Anytime a constructor function creates a new object, that object is said to be an <dfn>instance</dfn> of its constructor. JavaScript gives a convenient way to verify this with the <code>instanceof</code> operator. <code>instanceof</code> allows you to compare an object to a constructor, returning <code>true</code> or <code>false</code> based on whether or not that object was created with the constructor. Here's an example:</p>\n<pre><code class=\"language-js\">let Bird = function(name, color) {\n  this.name = name;\n  this.color = color;\n  this.numLegs = 2;\n}\n\nlet crow = new Bird(\"Alexis\", \"black\");\n\ncrow instanceof Bird;\n</code></pre>\n<p>This <code>instanceof</code> method would return <code>true</code>.</p>\n<p>If an object is created without using a constructor, <code>instanceof</code> will verify that it is not an instance of that constructor:</p>\n<pre><code class=\"language-js\">let canary = {\n  name: \"Mildred\",\n  color: \"Yellow\",\n  numLegs: 2\n};\n\ncanary instanceof Bird;\n</code></pre>\n<p>This <code>instanceof</code> method would return <code>false</code>.</p>\n</section>","id":"587d7dae367417b2b2512b7a","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a new instance of the <code>House</code> constructor, calling it <code>myHouse</code> and passing a number of bedrooms. Then, use <code>instanceof</code> to verify that it is an instance of <code>House</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301337,"fields":{"blockName":"object-oriented-programming","slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof","tests":[{"text":"<p><code>myHouse</code> should have a <code>numBedrooms</code> attribute set to a number.</p>","testString":"assert(typeof myHouse.numBedrooms === 'number');"},{"text":"<p>You should verify that <code>myHouse</code> is an instance of <code>House</code> using the <code>instanceof</code> operator.</p>","testString":"assert(/myHouse\\s*instanceof\\s*House/.test(__helpers.removeJSComments(code)));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function House(numBedrooms) {\n  this.numBedrooms = numBedrooms;\n}\n\n// Only change code below this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#object-oriented-programming","dashedName":"verify-an-objects-constructor-with-instanceof","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"object-oriented-programming","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/understand-own-properties","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/extend-constructors-to-receive-arguments","id":"587d7dae367417b2b2512b7a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const funModule = (function () {\n  return {\n    isCuteMixin: obj => {\n      obj.isCute = () => true;\n    },\n    singMixin: obj => {\n      obj.sing = () => console.log(\"Singing to an awesome tune\");\n    }\n  };\n})();","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/verify-an-objects-constructor-with-instanceof"}},
    "staticQueryHashes": ["1800977889","4268002518"]}