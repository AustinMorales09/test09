{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming",
    "result": {"data":{"challengeNode":{"challenge":{"block":"functional-programming","title":"Learn About Functional Programming","description":"<section id=\"description\">\n<p>Functional programming is a style of programming where solutions are simple, isolated functions, without any side effects outside of the function scope: <code>INPUT -> PROCESS -> OUTPUT</code></p>\n<p>Functional programming is about:</p>\n<ol>\n<li>\n<p>Isolated functions - there is no dependence on the state of the program, which includes global variables that are subject to change</p>\n</li>\n<li>\n<p>Pure functions - the same input always gives the same output</p>\n</li>\n<li>\n<p>Functions with limited side effects - any changes, or mutations, to the state of the program outside the function are carefully controlled</p>\n</li>\n</ol>\n</section>","id":"587d7b8d367417b2b2512b5b","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>The members of freeCodeCamp happen to love tea.</p>\n<p>In the code editor, the <code>prepareTea</code> and <code>getTea</code> functions are already defined for you. Call the <code>getTea</code> function to get 40 cups of tea for the team, and store them in the <code>tea4TeamFCC</code> variable.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301233,"fields":{"blockName":"functional-programming","slug":"/learn/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming","tests":[{"text":"<p>The <code>tea4TeamFCC</code> variable should hold 40 cups of tea for the team.</p>","testString":"assert(tea4TeamFCC.length === 40);"},{"text":"<p>The <code>tea4TeamFCC</code> variable should hold cups of green tea.</p>","testString":"assert(tea4TeamFCC[0] === 'greenTea');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"// Function that returns a string representing a cup of green tea\nconst prepareTea = () => 'greenTea';\n\n/*\nGiven a function (representing the tea type) and number of cups needed, the\nfollowing function returns an array of strings (each representing a cup of\na specific type of tea).\n*/\nconst getTea = (numOfCups) => {\n  const teaCups = [];\n\n  for(let cups = 1; cups <= numOfCups; cups += 1) {\n    const teaCup = prepareTea();\n    teaCups.push(teaCup);\n  }\n  return teaCups;\n};\n\n// Only change code below this line\nconst tea4TeamFCC = null;\n// Only change code above this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#functional-programming","dashedName":"learn-about-functional-programming","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"functional-programming","isFirstStep":true,"template":null,"required":[],"nextBlock":"functional-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/functional-programming/understand-functional-programming-terminology","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/use-an-iife-to-create-a-module","id":"587d7b8d367417b2b2512b5b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const add = x => y => z => x + y + z","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/functional-programming/learn-about-functional-programming"}},
    "staticQueryHashes": ["1800977889","4268002518"]}