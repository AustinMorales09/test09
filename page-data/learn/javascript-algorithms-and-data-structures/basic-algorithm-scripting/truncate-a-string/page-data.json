{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/truncate-a-string",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Truncate a String","description":"<section id=\"description\">\n<p>Truncate a string (first argument) if it is longer than the given maximum string length (second argument). Return the truncated string with a <code>...</code> ending.</p>\n</section>","id":"ac6993d51946422351508a41","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16089,"fields":{"blockName":"basic-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/truncate-a-string","tests":[{"text":"<p><code>truncateString(\"A-tisket a-tasket A green and yellow basket\", 8)</code> should return the string <code>A-tisket...</code>.</p>","testString":"assert(\n  truncateString('A-tisket a-tasket A green and yellow basket', 8) ===\n    'A-tisket...'\n);"},{"text":"<p><code>truncateString(\"Peter Piper picked a peck of pickled peppers\", 11)</code> should return the string <code>Peter Piper...</code>.</p>","testString":"assert(\n  truncateString('Peter Piper picked a peck of pickled peppers', 11) ===\n    'Peter Piper...'\n);"},{"text":"<p><code>truncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\".length)</code> should return the string <code>A-tisket a-tasket A green and yellow basket</code>.</p>","testString":"assert(\n  truncateString(\n    'A-tisket a-tasket A green and yellow basket',\n    'A-tisket a-tasket A green and yellow basket'.length\n  ) === 'A-tisket a-tasket A green and yellow basket'\n);"},{"text":"<p><code>truncateString(\"A-tisket a-tasket A green and yellow basket\", \"A-tisket a-tasket A green and yellow basket\".length + 2)</code> should return the string <code>A-tisket a-tasket A green and yellow basket</code>.</p>","testString":"assert(\n  truncateString(\n    'A-tisket a-tasket A green and yellow basket',\n    'A-tisket a-tasket A green and yellow basket'.length + 2\n  ) === 'A-tisket a-tasket A green and yellow basket'\n);"},{"text":"<p><code>truncateString(\"A-\", 1)</code> should return the string <code>A...</code>.</p>","testString":"assert(truncateString('A-', 1) === 'A...');"},{"text":"<p><code>truncateString(\"Absolutely Longer\", 2)</code> should return the string <code>Ab...</code>.</p>","testString":"assert(truncateString('Absolutely Longer', 2) === 'Ab...');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function truncateString(str, num) {\n  return str;\n}\n\ntruncateString(\"A-tisket a-tasket A green and yellow basket\", 8);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting","dashedName":"truncate-a-string","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/finders-keepers","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string","id":"ac6993d51946422351508a41"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/truncate-a-string"}},
    "staticQueryHashes": ["1800977889","4268002518"]}