{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Mutations","description":"<section id=\"description\">\n<p>Return <code>true</code> if the string in the first element of the array contains all of the letters of the string in the second element of the array.</p>\n<p>For example, <code>[\"hello\", \"Hello\"]</code>, should return <code>true</code> because all of the letters in the second string are present in the first, ignoring case.</p>\n<p>The arguments <code>[\"hello\", \"hey\"]</code> should return <code>false</code> because the string <code>hello</code> does not contain a <code>y</code>.</p>\n<p>Lastly, <code>[\"Alien\", \"line\"]</code>, should return <code>true</code> because all of the letters in <code>line</code> are present in <code>Alien</code>.</p>\n</section>","id":"af2170cad53daa0770fabdea","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16025,"fields":{"blockName":"basic-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations","tests":[{"text":"<p><code>mutation([\"hello\", \"hey\"])</code> should return <code>false</code>.</p>","testString":"assert(mutation(['hello', 'hey']) === false);"},{"text":"<p><code>mutation([\"hello\", \"Hello\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['hello', 'Hello']) === true);"},{"text":"<p><code>mutation([\"zyxwvutsrqponmlkjihgfedcba\", \"qrstu\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['zyxwvutsrqponmlkjihgfedcba', 'qrstu']) === true);"},{"text":"<p><code>mutation([\"Mary\", \"Army\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['Mary', 'Army']) === true);"},{"text":"<p><code>mutation([\"Mary\", \"Aarmy\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['Mary', 'Aarmy']) === true);"},{"text":"<p><code>mutation([\"Alien\", \"line\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['Alien', 'line']) === true);"},{"text":"<p><code>mutation([\"floor\", \"for\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['floor', 'for']) === true);"},{"text":"<p><code>mutation([\"hello\", \"neo\"])</code> should return <code>false</code>.</p>","testString":"assert(mutation(['hello', 'neo']) === false);"},{"text":"<p><code>mutation([\"voodoo\", \"no\"])</code> should return <code>false</code>.</p>","testString":"assert(mutation(['voodoo', 'no']) === false);"},{"text":"<p><code>mutation([\"ate\", \"date\"])</code> should return <code>false</code>.</p>","testString":"assert(mutation(['ate', 'date']) === false);"},{"text":"<p><code>mutation([\"Tiger\", \"Zebra\"])</code> should return <code>false</code>.</p>","testString":"assert(mutation(['Tiger', 'Zebra']) === false);"},{"text":"<p><code>mutation([\"Noel\", \"Ole\"])</code> should return <code>true</code>.</p>","testString":"assert(mutation(['Noel', 'Ole']) === true);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function mutation(arr) {\n  return arr;\n}\n\nmutation([\"hello\", \"hey\"]);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting","dashedName":"mutations","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/where-do-i-belong","id":"af2170cad53daa0770fabdea"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations"}},
    "staticQueryHashes": ["1800977889","4268002518"]}