{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Repeat a String Repeat a String","description":"<section id=\"description\">\n<p>Repeat a given string <code>str</code> (first argument) for <code>num</code> times (second argument). Return an empty string if <code>num</code> is not a positive number. For the purpose of this challenge, do <em>not</em> use the built-in <code>.repeat()</code> method.</p>\n</section>","id":"afcc8d540bea9ea2669306b6","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16041,"fields":{"blockName":"basic-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string","tests":[{"text":"<p><code>repeatStringNumTimes(\"*\", 3)</code> should return the string <code>***</code>.</p>","testString":"assert(repeatStringNumTimes('*', 3) === '***');"},{"text":"<p><code>repeatStringNumTimes(\"abc\", 3)</code> should return the string <code>abcabcabc</code>.</p>","testString":"assert(repeatStringNumTimes('abc', 3) === 'abcabcabc');"},{"text":"<p><code>repeatStringNumTimes(\"abc\", 4)</code> should return the string <code>abcabcabcabc</code>.</p>","testString":"assert(repeatStringNumTimes('abc', 4) === 'abcabcabcabc');"},{"text":"<p><code>repeatStringNumTimes(\"abc\", 1)</code> should return the string <code>abc</code>.</p>","testString":"assert(repeatStringNumTimes('abc', 1) === 'abc');"},{"text":"<p><code>repeatStringNumTimes(\"*\", 8)</code> should return the string <code>********</code>.</p>","testString":"assert(repeatStringNumTimes('*', 8) === '********');"},{"text":"<p><code>repeatStringNumTimes(\"abc\", -2)</code> should return an empty string (<code>\"\"</code>).</p>","testString":"assert(repeatStringNumTimes('abc', -2) === '');"},{"text":"<p>The built-in <code>repeat()</code> method should not be used.</p>","testString":"assert(!/\\.repeat/g.test(__helpers.removeJSComments(code)));"},{"text":"<p><code>repeatStringNumTimes(\"abc\", 0)</code> should return <code>\"\"</code>.</p>","testString":"assert(repeatStringNumTimes('abc', 0) === '');"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function repeatStringNumTimes(str, num) {\n  return str;\n}\n\nrepeatStringNumTimes(\"abc\", 3);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting","dashedName":"repeat-a-string-repeat-a-string","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/truncate-a-string","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/confirm-the-ending","id":"afcc8d540bea9ea2669306b6"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/repeat-a-string-repeat-a-string"}},
    "staticQueryHashes": ["1800977889","4268002518"]}