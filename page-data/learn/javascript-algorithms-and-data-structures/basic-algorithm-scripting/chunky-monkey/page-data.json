{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Chunky Monkey","description":"<section id=\"description\">\n<p>Write a function that splits an array (first argument) into groups the length of <code>size</code> (second argument) and returns them as a two-dimensional array.</p>\n</section>","id":"a9bd25c716030ec90084d8a1","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16005,"fields":{"blockName":"basic-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey","tests":[{"text":"<p><code>chunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2)</code> should return <code>[[\"a\", \"b\"], [\"c\", \"d\"]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups(['a', 'b', 'c', 'd'], 2), [\n  ['a', 'b'],\n  ['c', 'd']\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3)</code> should return <code>[[0, 1, 2], [3, 4, 5]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 3), [\n  [0, 1, 2],\n  [3, 4, 5]\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2)</code> should return <code>[[0, 1], [2, 3], [4, 5]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 2), [\n  [0, 1],\n  [2, 3],\n  [4, 5]\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4)</code> should return <code>[[0, 1, 2, 3], [4, 5]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5], 4), [\n  [0, 1, 2, 3],\n  [4, 5]\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3)</code> should return <code>[[0, 1, 2], [3, 4, 5], [6]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3), [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6]\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4)</code> should return <code>[[0, 1, 2, 3], [4, 5, 6, 7], [8]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4), [\n  [0, 1, 2, 3],\n  [4, 5, 6, 7],\n  [8]\n]);"},{"text":"<p><code>chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2)</code> should return <code>[[0, 1], [2, 3], [4, 5], [6, 7], [8]]</code>.</p>","testString":"assert.deepEqual(chunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2), [\n  [0, 1],\n  [2, 3],\n  [4, 5],\n  [6, 7],\n  [8]\n]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function chunkArrayInGroups(arr, size) {\n  return arr;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting","dashedName":"chunky-monkey","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"object-oriented-programming","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/object-oriented-programming/create-a-basic-javascript-object","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/mutations","id":"a9bd25c716030ec90084d8a1"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/chunky-monkey"}},
    "staticQueryHashes": ["1800977889","4268002518"]}