{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/falsy-bouncer",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-algorithm-scripting","title":"Falsy Bouncer","description":"<section id=\"description\">\n<p>Remove all falsy values from an array. Return a new array; do not mutate the original array.</p>\n<p>Falsy values in JavaScript are <code>false</code>, <code>null</code>, <code>0</code>, <code>\"\"</code>, <code>undefined</code>, and <code>NaN</code>.</p>\n<p>Hint: Try converting each value to a Boolean.</p>\n</section>","id":"adf08ec01beb4f99fc7a68f2","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16014,"fields":{"blockName":"basic-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/falsy-bouncer","tests":[{"text":"<p><code>bouncer([7, \"ate\", \"\", false, 9])</code> should return <code>[7, \"ate\", 9]</code>.</p>","testString":"assert.deepEqual(bouncer([7, 'ate', '', false, 9]), [7, 'ate', 9]);"},{"text":"<p><code>bouncer([\"a\", \"b\", \"c\"])</code> should return <code>[\"a\", \"b\", \"c\"]</code>.</p>","testString":"assert.deepEqual(bouncer(['a', 'b', 'c']), ['a', 'b', 'c']);"},{"text":"<p><code>bouncer([false, null, 0, NaN, undefined, \"\"])</code> should return <code>[]</code>.</p>","testString":"assert.deepEqual(bouncer([false, null, 0, NaN, undefined, '']), []);"},{"text":"<p><code>bouncer([null, NaN, 1, 2, undefined])</code> should return <code>[1, 2]</code>.</p>","testString":"assert.deepEqual(bouncer([null, NaN, 1, 2, undefined]), [1, 2]);"},{"text":"<p>You should not mutate <code>arr</code>.</p>","testString":"const arr = ['a', false, 0, 'Naomi'];\nbouncer(arr);\nassert.deepEqual(arr, ['a', false, 0, 'Naomi'])"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function bouncer(arr) {\n  return arr;\n}\n\nbouncer([7, \"ate\", \"\", false, 9]);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-algorithm-scripting","dashedName":"falsy-bouncer","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/where-do-i-belong","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/slice-and-splice","id":"adf08ec01beb4f99fc7a68f2"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function chunkArrayInGroups(arr, size) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i += size) {\n    out.push(arr.slice(i, i + size));\n  }\n\n  return out;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-algorithm-scripting/falsy-bouncer"}},
    "staticQueryHashes": ["1800977889","4268002518"]}