{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Match All Numbers","description":"<section id=\"description\">\n<p>You've learned shortcuts for common string patterns like alphanumerics. Another common pattern is looking for just digits or numbers.</p>\n<p>The shortcut to look for digit characters is <code>\\d</code>, with a lowercase <code>d</code>. This is equal to the character class <code>[0-9]</code>, which looks for a single character of any number between zero and nine.</p>\n</section>","id":"5d712346c441eddfaeb5bdef","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use the shorthand character class <code>\\d</code> to count how many digits are in movie titles. Written out numbers (\"six\" instead of 6) do not count.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18181,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers","tests":[{"text":"<p>Your regex should use the shortcut character to match digit characters</p>","testString":"assert(/\\\\d/.test(numRegex.source));"},{"text":"<p>Your regex should use the global flag.</p>","testString":"assert(numRegex.global);"},{"text":"<p>Your regex should find 1 digit in the string <code>9</code>.</p>","testString":"assert('9'.match(numRegex).length == 1);"},{"text":"<p>Your regex should find 2 digits in the string <code>Catch 22</code>.</p>","testString":"assert('Catch 22'.match(numRegex).length == 2);"},{"text":"<p>Your regex should find 3 digits in the string <code>101 Dalmatians</code>.</p>","testString":"assert('101 Dalmatians'.match(numRegex).length == 3);"},{"text":"<p>Your regex should find no digits in the string <code>One, Two, Three</code>.</p>","testString":"assert('One, Two, Three'.match(numRegex) == null);"},{"text":"<p>Your regex should find 2 digits in the string <code>21 Jump Street</code>.</p>","testString":"assert('21 Jump Street'.match(numRegex).length == 2);"},{"text":"<p>Your regex should find 4 digits in the string <code>2001: A Space Odyssey</code>.</p>","testString":"assert('2001: A Space Odyssey'.match(numRegex).length == 4);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let movieName = \"2001: A Space Odyssey\";\nlet numRegex = /change/; // Change this line\nlet result = movieName.match(numRegex).length;","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"match-all-numbers","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-all-non-numbers","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-everything-but-letters-and-numbers","id":"5d712346c441eddfaeb5bdef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-all-numbers"}},
    "staticQueryHashes": ["1800977889","4268002518"]}