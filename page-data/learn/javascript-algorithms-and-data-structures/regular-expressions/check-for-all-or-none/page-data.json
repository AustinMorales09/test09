{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Check for All or None","description":"<section id=\"description\">\n<p>Sometimes the patterns you want to search for may have parts of it that may or may not exist. However, it may be important to check for them nonetheless.</p>\n<p>You can specify the possible existence of an element with a question mark, <code>?</code>. This checks for zero or one of the preceding element. You can think of this symbol as saying the previous element is optional.</p>\n<p>For example, there are slight differences in American and British English and you can use the question mark to match both spellings.</p>\n<pre><code class=\"language-js\">let american = \"color\";\nlet british = \"colour\";\nlet rainbowRegex= /colou?r/;\nrainbowRegex.test(american);\nrainbowRegex.test(british);\n</code></pre>\n<p>Both uses of the <code>test</code> method would return <code>true</code>.</p>\n</section>","id":"587d7dba367417b2b2512ba8","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the regex <code>favRegex</code> to match both the American English (<code>favorite</code>) and the British English (<code>favourite</code>) version of the word.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301338,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none","tests":[{"text":"<p>Your regex should use the optional symbol, <code>?</code>.</p>","testString":"favRegex.lastIndex = 0;\nassert(favRegex.source.match(/\\?/).length > 0);"},{"text":"<p>Your regex should match the string <code>favorite</code></p>","testString":"favRegex.lastIndex = 0;\nassert(favRegex.test('favorite'));"},{"text":"<p>Your regex should match the string <code>favourite</code></p>","testString":"favRegex.lastIndex = 0;\nassert(favRegex.test('favourite'));"},{"text":"<p>Your regex should not match the string <code>fav</code></p>","testString":"favRegex.lastIndex = 0;\nassert(!favRegex.test('fav'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let favWord = \"favorite\";\nlet favRegex = /change/; // Change this line\nlet result = favRegex.test(favWord);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"check-for-all-or-none","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/positive-and-negative-lookahead","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches","id":"587d7dba367417b2b2512ba8"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none"}},
    "staticQueryHashes": ["1800977889","4268002518"]}