{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Specify Exact Number of Matches","description":"<section id=\"description\">\n<p>You can specify the lower and upper number of patterns with quantity specifiers using curly brackets. Sometimes you only want a specific number of matches.</p>\n<p>To specify a certain number of patterns, just have that one number between the curly brackets.</p>\n<p>For example, to match only the word <code>hah</code> with the letter <code>a</code> <code>3</code> times, your regex would be <code>/ha{3}h/</code>.</p>\n<pre><code class=\"language-js\">let A4 = \"haaaah\";\nlet A3 = \"haaah\";\nlet A100 = \"h\" + \"a\".repeat(100) + \"h\";\nlet multipleHA = /ha{3}h/;\nmultipleHA.test(A4);\nmultipleHA.test(A3);\nmultipleHA.test(A100);\n</code></pre>\n<p>In order, the three <code>test</code> calls would return <code>false</code>, <code>true</code>, and <code>false</code>.</p>\n</section>","id":"587d7db9367417b2b2512ba7","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the regex <code>timRegex</code> to match the word <code>Timber</code> only when it has four letter <code>m</code>'s.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301365,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches","tests":[{"text":"<p>Your regex should use curly brackets.</p>","testString":"assert(timRegex.source.match(/{.*?}/).length > 0);"},{"text":"<p>Your regex should not match the string <code>Timber</code></p>","testString":"timRegex.lastIndex = 0;\nassert(!timRegex.test('Timber'));"},{"text":"<p>Your regex should not match the string <code>Timmber</code></p>","testString":"timRegex.lastIndex = 0;\nassert(!timRegex.test('Timmber'));"},{"text":"<p>Your regex should not match the string <code>Timmmber</code></p>","testString":"timRegex.lastIndex = 0;\nassert(!timRegex.test('Timmmber'));"},{"text":"<p>Your regex should match the string <code>Timmmmber</code></p>","testString":"timRegex.lastIndex = 0;\nassert(timRegex.test('Timmmmber'));"},{"text":"<p>Your regex should not match the string <code>Timber</code> with 30 <code>m</code>'s in it.</p>","testString":"timRegex.lastIndex = 0;\nassert(!timRegex.test('Ti' + 'm'.repeat(30) + 'ber'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let timStr = \"Timmmmber\";\nlet timRegex = /change/; // Change this line\nlet result = timRegex.test(timStr);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"specify-exact-number-of-matches","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/check-for-all-or-none","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches","id":"587d7db9367417b2b2512ba7"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-exact-number-of-matches"}},
    "staticQueryHashes": ["1800977889","4268002518"]}