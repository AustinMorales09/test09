{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/match-beginning-string-patterns",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Match Beginning String Patterns","description":"<section id=\"description\">\n<p>Prior challenges showed that regular expressions can be used to look for a number of matches. They are also used to search for patterns in specific positions in strings.</p>\n<p>In an earlier challenge, you used the caret character (<code>^</code>) inside a character set to create a negated character set in the form <code>[^thingsThatWillNotBeMatched]</code>. Outside of a character set, the caret is used to search for patterns at the beginning of strings.</p>\n<pre><code class=\"language-js\">let firstString = \"Ricky is first and can be found.\";\nlet firstRegex = /^Ricky/;\nfirstRegex.test(firstString);\nlet notFirst = \"You can't find Ricky now.\";\nfirstRegex.test(notFirst);\n</code></pre>\n<p>The first <code>test</code> call would return <code>true</code>, while the second would return <code>false</code>.</p>\n</section>","id":"587d7db7367417b2b2512b9d","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Use the caret character in a regex to find <code>Cal</code> only in the beginning of the string <code>rickyAndCal</code>.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301349,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-beginning-string-patterns","tests":[{"text":"<p>Your regex should search for the string <code>Cal</code> with a capital letter.</p>","testString":"assert(calRegex.source == '^Cal');"},{"text":"<p>Your regex should not use any flags.</p>","testString":"assert(calRegex.flags == '');"},{"text":"<p>Your regex should match the string <code>Cal</code> at the beginning of the string.</p>","testString":"calRegex.lastIndex = 0;\nassert(calRegex.test('Cal and Ricky both like racing.'));"},{"text":"<p>Your regex should not match the string <code>Cal</code> in the middle of a string.</p>","testString":"calRegex.lastIndex = 0;\nassert(!calRegex.test('Ricky and Cal both like racing.'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let rickyAndCal = \"Cal and Ricky both like racing.\";\nlet calRegex = /change/; // Change this line\nlet result = calRegex.test(rickyAndCal);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"match-beginning-string-patterns","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-ending-string-patterns","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/find-one-or-more-criminals-in-a-hunt","id":"587d7db7367417b2b2512b9d"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-beginning-string-patterns"}},
    "staticQueryHashes": ["1800977889","4268002518"]}