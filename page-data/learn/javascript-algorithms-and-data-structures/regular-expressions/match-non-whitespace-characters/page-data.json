{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/match-non-whitespace-characters",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Match Non-Whitespace Characters","description":"<section id=\"description\">\n<p>You learned about searching for whitespace using <code>\\s</code>, with a lowercase <code>s</code>. You can also search for everything except whitespace.</p>\n<p>Search for non-whitespace using <code>\\S</code>, which is an uppercase <code>s</code>. This pattern will not match whitespace, carriage return, tab, form feed, and new line characters. You can think of it being similar to the character class <code>[^ \\r\\t\\f\\n\\v]</code>.</p>\n<pre><code class=\"language-js\">let whiteSpace = \"Whitespace. Whitespace everywhere!\"\nlet nonSpaceRegex = /\\S/g;\nwhiteSpace.match(nonSpaceRegex).length;\n</code></pre>\n<p>The value returned by the <code>.length</code> method would be <code>32</code>.</p>\n</section>","id":"587d7db9367417b2b2512ba4","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the regex <code>countNonWhiteSpace</code> to look for multiple non-whitespace characters in a string.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":18210,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-non-whitespace-characters","tests":[{"text":"<p>Your regex should use the global flag.</p>","testString":"assert(countNonWhiteSpace.global);"},{"text":"<p>Your regex should use the shorthand character <code>\\S</code> to match all non-whitespace characters.</p>","testString":"assert(/\\\\S/.test(countNonWhiteSpace.source));"},{"text":"<p>Your regex should find 35 non-spaces in the string <code>Men are from Mars and women are from Venus.</code></p>","testString":"assert(\n  'Men are from Mars and women are from Venus.'.match(countNonWhiteSpace)\n    .length == 35\n);"},{"text":"<p>Your regex should find 23 non-spaces in the string <code>Space: the final frontier.</code></p>","testString":"assert('Space: the final frontier.'.match(countNonWhiteSpace).length == 23);"},{"text":"<p>Your regex should find 21 non-spaces in the string <code>MindYourPersonalSpace</code></p>","testString":"assert('MindYourPersonalSpace'.match(countNonWhiteSpace).length == 21);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let sample = \"Whitespace is important in separating words\";\nlet countNonWhiteSpace = /change/; // Change this line\nlet result = sample.match(countNonWhiteSpace);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"match-non-whitespace-characters","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-upper-and-lower-number-of-matches","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-whitespace","id":"587d7db9367417b2b2512ba4"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-non-whitespace-characters"}},
    "staticQueryHashes": ["1800977889","4268002518"]}