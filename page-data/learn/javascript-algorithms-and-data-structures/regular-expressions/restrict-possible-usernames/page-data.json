{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/restrict-possible-usernames",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Restrict Possible Usernames","description":"<section id=\"description\">\n<p>Usernames are used everywhere on the internet. They are what give users a unique identity on their favorite sites.</p>\n<p>You need to check all the usernames in a database. Here are some simple rules that users have to follow when creating their username.</p>\n<ol>\n<li>\n<p>Usernames can only use alphanumeric characters.</p>\n</li>\n<li>\n<p>The only numbers in the username have to be at the end. There can be zero or more of them at the end. Username cannot start with the number.</p>\n</li>\n<li>\n<p>Username letters can be lowercase and uppercase.</p>\n</li>\n<li>\n<p>Usernames have to be at least two characters long. A two-character username can only use alphabet letters as characters.</p>\n</li>\n</ol>\n</section>","id":"587d7db8367417b2b2512ba2","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the regex <code>userCheck</code> to fit the constraints listed above.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301363,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/restrict-possible-usernames","tests":[{"text":"<p>Your regex should match the string <code>JACK</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('JACK'));"},{"text":"<p>Your regex should not match the string <code>J</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('J'));"},{"text":"<p>Your regex should match the string <code>Jo</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('Jo'));"},{"text":"<p>Your regex should match the string <code>Oceans11</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('Oceans11'));"},{"text":"<p>Your regex should match the string <code>RegexGuru</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('RegexGuru'));"},{"text":"<p>Your regex should not match the string <code>007</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('007'));"},{"text":"<p>Your regex should not match the string <code>9</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('9'));"},{"text":"<p>Your regex should not match the string <code>A1</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('A1'));"},{"text":"<p>Your regex should not match the string <code>BadUs3rnam3</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('BadUs3rnam3'));"},{"text":"<p>Your regex should match the string <code>Z97</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('Z97'));"},{"text":"<p>Your regex should not match the string <code>c57bT3</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('c57bT3'));"},{"text":"<p>Your regex should match the string <code>AB1</code></p>","testString":"userCheck.lastIndex = 0;\nassert(userCheck.test('AB1'));"},{"text":"<p>Your regex should not match the string <code>J%4</code></p>","testString":"userCheck.lastIndex = 0;\nassert(!userCheck.test('J%4'))"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let username = \"JackOfAllTrades\";\nlet userCheck = /change/; // Change this line\nlet result = userCheck.test(username);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"restrict-possible-usernames","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-whitespace","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-all-non-numbers","id":"587d7db8367417b2b2512ba2"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/restrict-possible-usernames"}},
    "staticQueryHashes": ["1800977889","4268002518"]}