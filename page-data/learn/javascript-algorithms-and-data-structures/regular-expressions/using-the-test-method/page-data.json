{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Using the Test Method","description":"<section id=\"description\">\n<p>Regular expressions are used in programming languages to match parts of strings. You create patterns to help you do that matching.</p>\n<p>If you want to find the word <code>the</code> in the string <code>The dog chased the cat</code>, you could use the following regular expression: <code>/the/</code>. Notice that quote marks are not required within the regular expression.</p>\n<p>JavaScript has multiple ways to use regexes. One way to test a regex is using the <code>.test()</code> method. The <code>.test()</code> method takes the regex, applies it to a string (which is placed inside the parentheses), and returns <code>true</code> or <code>false</code> if your pattern finds something or not.</p>\n<pre><code class=\"language-js\">let testStr = \"freeCodeCamp\";\nlet testRegex = /Code/;\ntestRegex.test(testStr);\n</code></pre>\n<p>The <code>test</code> method here returns <code>true</code>.</p>\n</section>","id":"587d7db3367417b2b2512b8e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Apply the regex <code>myRegex</code> on the string <code>myString</code> using the <code>.test()</code> method.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301369,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method","tests":[{"text":"<p>You should use <code>.test()</code> to test the regex.</p>","testString":"assert(__helpers.removeJSComments(code).match(/myRegex.test\\(\\s*myString\\s*\\)/));"},{"text":"<p>Your result should return <code>true</code>.</p>","testString":"assert(result === true);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let myString = \"Hello, World!\";\nlet myRegex = /Hello/;\nlet result = myRegex; // Change this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"using-the-test-method","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":true,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-literal-strings","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/es6/handle-a-rejected-promise-with-catch","id":"587d7db3367417b2b2512b8e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/using-the-test-method"}},
    "staticQueryHashes": ["1800977889","4268002518"]}