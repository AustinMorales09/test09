{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/match-numbers-and-letters-of-the-alphabet",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Match Numbers and Letters of the Alphabet","description":"<section id=\"description\">\n<p>Using the hyphen (<code>-</code>) to match a range of characters is not limited to letters. It also works to match a range of numbers.</p>\n<p>For example, <code>/[0-5]/</code> matches any number between <code>0</code> and <code>5</code>, including the <code>0</code> and <code>5</code>.</p>\n<p>Also, it is possible to combine a range of letters and numbers in a single character set.</p>\n<pre><code class=\"language-js\">let jennyStr = \"Jenny8675309\";\nlet myRegex = /[a-z0-9]/ig;\njennyStr.match(myRegex);\n</code></pre>\n</section>","id":"587d7db5367417b2b2512b97","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create a single regex that matches a range of letters between <code>h</code> and <code>s</code>, and a range of numbers between <code>2</code> and <code>6</code>. Remember to include the appropriate flags in the regex.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301356,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-numbers-and-letters-of-the-alphabet","tests":[{"text":"<p>Your regex <code>myRegex</code> should match 17 items.</p>","testString":"assert(result.length == 17);"},{"text":"<p>Your regex <code>myRegex</code> should use the global flag.</p>","testString":"assert(myRegex.flags.match(/g/).length == 1);"},{"text":"<p>Your regex <code>myRegex</code> should use the case insensitive flag.</p>","testString":"assert(myRegex.flags.match(/i/).length == 1);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let quoteSample = \"Blueberry 3.141592653s are delicious.\";\nlet myRegex = /change/; // Change this line\nlet result = myRegex; // Change this line","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"match-numbers-and-letters-of-the-alphabet","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-single-characters-not-specified","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-letters-of-the-alphabet","id":"587d7db5367417b2b2512b97"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-numbers-and-letters-of-the-alphabet"}},
    "staticQueryHashes": ["1800977889","4268002518"]}