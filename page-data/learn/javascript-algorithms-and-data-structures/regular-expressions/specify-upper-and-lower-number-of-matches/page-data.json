{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-upper-and-lower-number-of-matches",
    "result": {"data":{"challengeNode":{"challenge":{"block":"regular-expressions","title":"Specify Upper and Lower Number of Matches","description":"<section id=\"description\">\n<p>Recall that you use the plus sign <code>+</code> to look for one or more characters and the asterisk <code>*</code> to look for zero or more characters. These are convenient but sometimes you want to match a certain range of patterns.</p>\n<p>You can specify the lower and upper number of patterns with <dfn>quantity specifiers</dfn>. Quantity specifiers are used with curly brackets (<code>{</code> and <code>}</code>). You put two numbers between the curly brackets - for the lower and upper number of patterns.</p>\n<p>For example, to match only the letter <code>a</code> appearing between <code>3</code> and <code>5</code> times in the string <code>ah</code>, your regex would be <code>/a{3,5}h/</code>.</p>\n<pre><code class=\"language-js\">let A4 = \"aaaah\";\nlet A2 = \"aah\";\nlet multipleA = /a{3,5}h/;\nmultipleA.test(A4);\nmultipleA.test(A2);\n</code></pre>\n<p>The first <code>test</code> call would return <code>true</code>, while the second would return <code>false</code>.</p>\n</section>","id":"587d7db9367417b2b2512ba5","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Change the regex <code>ohRegex</code> to match the entire phrase <code>Oh no</code> only when it has <code>3</code> to <code>6</code> letter <code>h</code>'s.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301367,"fields":{"blockName":"regular-expressions","slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-upper-and-lower-number-of-matches","tests":[{"text":"<p>Your regex should use curly brackets.</p>","testString":"assert(ohRegex.source.match(/{.*?}/).length > 0);"},{"text":"<p>Your regex should not match the string <code>Ohh no</code></p>","testString":"ohRegex.lastIndex = 0;\nassert(!ohRegex.test('Ohh no'));"},{"text":"<p>Your regex should match the string <code>Ohhh no</code></p>","testString":"assert('Ohhh no'.match(ohRegex)[0].length === 7);"},{"text":"<p>Your regex should match the string <code>Ohhhh no</code></p>","testString":"assert('Ohhhh no'.match(ohRegex)[0].length === 8);"},{"text":"<p>Your regex should match the string <code>Ohhhhh no</code></p>","testString":"assert('Ohhhhh no'.match(ohRegex)[0].length === 9);"},{"text":"<p>Your regex should match the string <code>Ohhhhhh no</code></p>","testString":"assert('Ohhhhhh no'.match(ohRegex)[0].length === 10);"},{"text":"<p>Your regex should not match the string <code>Ohhhhhhh no</code></p>","testString":"ohRegex.lastIndex = 0;\nassert(!ohRegex.test('Ohhhhhhh no'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let ohStr = \"Ohhh no\";\nlet ohRegex = /change/; // Change this line\nlet result = ohRegex.test(ohStr);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#regular-expressions","dashedName":"specify-upper-and-lower-number-of-matches","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"regular-expressions","isFirstStep":false,"template":null,"required":[],"nextBlock":"regular-expressions","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-only-the-lower-number-of-matches","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/regular-expressions/match-non-whitespace-characters","id":"587d7db9367417b2b2512ba5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let hello = \"   Hello, World!  \";\nlet wsRegex = /^(\\s+)(.+[^\\s])(\\s+)$/;\nlet result = hello.replace(wsRegex, '$2');","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/regular-expressions/specify-upper-and-lower-number-of-matches"}},
    "staticQueryHashes": ["1800977889","4268002518"]}