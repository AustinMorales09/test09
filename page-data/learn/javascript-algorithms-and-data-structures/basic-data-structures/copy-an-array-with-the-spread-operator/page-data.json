{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-data-structures/copy-an-array-with-the-spread-operator",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-data-structures","title":"Copy an Array with the Spread Operator","description":"<section id=\"description\">\n<p>While <code>slice()</code> allows us to be selective about what elements of an array to copy, among several other useful tasks, ES6's new <dfn>spread operator</dfn> allows us to easily copy <em>all</em> of an array's elements, in order, with a simple and highly readable syntax. The spread syntax simply looks like this: <code>...</code></p>\n<p>In practice, we can use the spread operator to copy an array like so:</p>\n<pre><code class=\"language-js\">let thisArray = [true, true, undefined, false, null];\nlet thatArray = [...thisArray];\n</code></pre>\n<p><code>thatArray</code> equals <code>[true, true, undefined, false, null]</code>. <code>thisArray</code> remains unchanged and <code>thatArray</code> contains the same elements as <code>thisArray</code>.</p>\n</section>","id":"587d7b7b367417b2b2512b13","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>We have defined a function, <code>copyMachine</code> which takes <code>arr</code> (an array) and <code>num</code> (a number) as arguments. The function is supposed to return a new array made up of <code>num</code> copies of <code>arr</code>. We have done most of the work for you, but it doesn't work quite right yet. Modify the function using spread syntax so that it works correctly (hint: another method we have already covered might come in handy here!).</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301157,"fields":{"blockName":"basic-data-structures","slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/copy-an-array-with-the-spread-operator","tests":[{"text":"<p><code>copyMachine([true, false, true], 2)</code> should return <code>[[true, false, true], [true, false, true]]</code></p>","testString":"assert.deepEqual(copyMachine([true, false, true], 2), [\n  [true, false, true],\n  [true, false, true]\n]);"},{"text":"<p><code>copyMachine([1, 2, 3], 5)</code> should return <code>[[1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3], [1, 2, 3]]</code></p>","testString":"assert.deepEqual(copyMachine([1, 2, 3], 5), [\n  [1, 2, 3],\n  [1, 2, 3],\n  [1, 2, 3],\n  [1, 2, 3],\n  [1, 2, 3]\n]);"},{"text":"<p><code>copyMachine([true, true, null], 1)</code> should return <code>[[true, true, null]]</code></p>","testString":"assert.deepEqual(copyMachine([true, true, null], 1), [[true, true, null]]);"},{"text":"<p><code>copyMachine([\"it works\"], 3)</code> should return <code>[[\"it works\"], [\"it works\"], [\"it works\"]]</code></p>","testString":"assert.deepEqual(copyMachine(['it works'], 3), [\n  ['it works'],\n  ['it works'],\n  ['it works']\n]);"},{"text":"<p>The <code>copyMachine</code> function should utilize the <code>spread operator</code> with array <code>arr</code></p>","testString":"assert(__helpers.removeJSComments(__helpers.removeJSComments(code)).match(/\\.\\.\\.\\s*arr/));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function copyMachine(arr, num) {\n  let newArr = [];\n  while (num >= 1) {\n    // Only change code below this line\n\n    // Only change code above this line\n    num--;\n  }\n  return newArr;\n}\n\nconsole.log(copyMachine([true, false, true], 2));","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-data-structures","dashedName":"copy-an-array-with-the-spread-operator","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-data-structures","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-data-structures","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/combine-arrays-with-the-spread-operator","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/copy-array-items-using-slice","id":"587d7b7b367417b2b2512b13"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let user = {\n  name: 'Kenneth',\n  age: 28,\n  data: {\n    username: 'kennethCodesAllDay',\n    joinDate: 'March 26, 2016',\n    organization: 'freeCodeCamp',\n    friends: [\n      'Sam',\n      'Kira',\n      'Tomo'\n    ],\n    location: {\n      city: 'San Francisco',\n      state: 'CA',\n      country: 'USA'\n    }\n  }\n};\n\nfunction addFriend(userObj, friend) {\n  userObj.data.friends.push(friend);\n  return userObj.data.friends;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/copy-an-array-with-the-spread-operator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}