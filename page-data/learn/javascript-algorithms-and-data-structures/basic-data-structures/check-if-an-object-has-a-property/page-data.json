{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-data-structures/check-if-an-object-has-a-property",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-data-structures","title":"Check if an Object has a Property","description":"<section id=\"description\">\n<p>Now we can add, modify, and remove keys from objects. But what if we just wanted to know if an object has a specific property? JavaScript provides us with two different ways to do this. One uses the <code>hasOwnProperty()</code> method and the other uses the <code>in</code> keyword. If we have an object <code>users</code> with a property of <code>Alan</code>, we could check for its presence in either of the following ways:</p>\n<pre><code class=\"language-js\">users.hasOwnProperty('Alan');\n'Alan' in users;\n</code></pre>\n<p>Both of these would return <code>true</code>.</p>\n</section>","id":"587d7b7d367417b2b2512b1c","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Finish writing the function so that it returns <code>true</code> if the object passed to it contains all four names, <code>Alan</code>, <code>Jeff</code>, <code>Sarah</code> and <code>Ryan</code> and returns <code>false</code> otherwise.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301155,"fields":{"blockName":"basic-data-structures","slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/check-if-an-object-has-a-property","tests":[{"text":"<p>The <code>users</code> object should not be accessed directly</p>","testString":"\nassert(__helpers.removeJSComments(code).match(/users/gm).length <= 2)\n"},{"text":"<p>The <code>users</code> object should only contain the keys <code>Alan</code>, <code>Jeff</code>, <code>Sarah</code>, and <code>Ryan</code></p>","testString":"assert(\n  'Alan' in users &&\n    'Jeff' in users &&\n    'Sarah' in users &&\n    'Ryan' in users &&\n    Object.keys(users).length === 4\n);"},{"text":"<p>The function <code>isEveryoneHere</code> should return <code>true</code> if <code>Alan</code>, <code>Jeff</code>, <code>Sarah</code>, and <code>Ryan</code> are properties on the object passed to it.</p>","testString":"assert(isEveryoneHere(users) === true);"},{"text":"<p>The function <code>isEveryoneHere</code> should return <code>false</code> if <code>Alan</code> is not a property on the object passed to it.</p>","testString":"assert(\n  (function () {\n    delete users.Alan;\n    return isEveryoneHere(users);\n  })() === false\n);"},{"text":"<p>The function <code>isEveryoneHere</code> should return <code>false</code> if <code>Jeff</code> is not a property on the object passed to it.</p>","testString":"assert(\n  (function () {\n    delete users.Jeff;\n    return isEveryoneHere(users);\n  })() === false\n);"},{"text":"<p>The function <code>isEveryoneHere</code> should return <code>false</code> if <code>Sarah</code> is not a property on the object passed to it.</p>","testString":"assert(\n  (function () {\n    delete users.Sarah;\n    return isEveryoneHere(users);\n  })() === false\n);"},{"text":"<p>The function <code>isEveryoneHere</code> should return <code>false</code> if <code>Ryan</code> is not a property on the object passed to it.</p>","testString":"assert(\n  (function () {\n    delete users.Ryan;\n    return isEveryoneHere(users);\n  })() === false\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let users = {\n  Alan: {\n    age: 27,\n    online: true\n  },\n  Jeff: {\n    age: 32,\n    online: true\n  },\n  Sarah: {\n    age: 48,\n    online: true\n  },\n  Ryan: {\n    age: 19,\n    online: true\n  }\n};\n\nfunction isEveryoneHere(userObj) {\n  // Only change code below this line\n  \n  // Only change code above this line\n}\n\nconsole.log(isEveryoneHere(users));","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-data-structures","dashedName":"check-if-an-object-has-a-property","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-data-structures","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-data-structures","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/iterate-through-the-keys-of-an-object-with-a-for---in-statement","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/use-the-delete-keyword-to-remove-object-properties","id":"587d7b7d367417b2b2512b1c"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let user = {\n  name: 'Kenneth',\n  age: 28,\n  data: {\n    username: 'kennethCodesAllDay',\n    joinDate: 'March 26, 2016',\n    organization: 'freeCodeCamp',\n    friends: [\n      'Sam',\n      'Kira',\n      'Tomo'\n    ],\n    location: {\n      city: 'San Francisco',\n      state: 'CA',\n      country: 'USA'\n    }\n  }\n};\n\nfunction addFriend(userObj, friend) {\n  userObj.data.friends.push(friend);\n  return userObj.data.friends;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/check-if-an-object-has-a-property"}},
    "staticQueryHashes": ["1800977889","4268002518"]}