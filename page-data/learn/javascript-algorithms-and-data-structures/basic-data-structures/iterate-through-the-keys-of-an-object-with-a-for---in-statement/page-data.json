{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-data-structures/iterate-through-the-keys-of-an-object-with-a-for---in-statement",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-data-structures","title":"Iterate Through the Keys of an Object with a for...in Statement","description":"<section id=\"description\">\n<p>Sometimes you need to iterate through all the keys within an object. You can use a <dfn>for...in</dfn> loop to do this. The for...in loop looks like:</p>\n<pre><code class=\"language-javascript\">const refrigerator = {\n  'milk': 1,\n  'eggs': 12,\n};\n\nfor (const food in refrigerator) {\n  console.log(food, refrigerator[food]);\n}\n</code></pre>\n<p>This code logs <code>milk 1</code>  and <code>eggs 12</code>, with each key-value pair on its own line.</p>\n<p>We defined the variable <code>food</code> in the loop head and this variable was set to each of the object's keys on each iteration, resulting in each food's name being printed to the console.</p>\n<p><strong>NOTE:</strong> Objects do not maintain an ordering to stored keys like arrays do; thus a key's position on an object, or the relative order in which it appears, is irrelevant when referencing or accessing that key.</p>\n</section>","id":"587d7b7d367417b2b2512b1d","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>We've defined a function <code>countOnline</code> which accepts one argument, <code>allUsers</code>. Use a <dfn>for...in</dfn> statement inside this function to loop through the <code>allUsers</code> object and return the number of users whose <code>online</code> property is set to <code>true</code>. An example of an object which could be passed to <code>countOnline</code> is shown below. Each user will have an <code>online</code> property set to either <code>true</code> or <code>false</code>.</p>\n<pre><code class=\"language-js\">{\n  Alan: {\n    online: false\n  },\n  Jeff: {\n    online: true\n  },\n  Sarah: {\n    online: false\n  }\n}\n</code></pre>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301162,"fields":{"blockName":"basic-data-structures","slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/iterate-through-the-keys-of-an-object-with-a-for---in-statement","tests":[{"text":"<p>The function <code>countOnline</code> should use a <code>for in</code> statement to iterate through the object keys of the object passed to it.</p>","testString":"assert(\n  __helpers.removeJSComments(code).match(\n    /for\\s*\\(\\s*(var|let|const)\\s+[a-zA-Z_$]\\w*\\s+in\\s+[a-zA-Z_$]\\w*\\s*\\)/\n  )\n);"},{"text":"<p>The function <code>countOnline</code> should return <code>1</code> when the object <code>{ Alan: { online: false }, Jeff: { online: true }, Sarah: { online: false } }</code> is passed to it</p>","testString":"assert(countOnline(usersObj1) === 1);"},{"text":"<p>The function <code>countOnline</code> should return <code>2</code> when the object <code>{ Alan: { online: true }, Jeff: { online: false }, Sarah: { online: true } }</code> is passed to it</p>","testString":"assert(countOnline(usersObj2) === 2);"},{"text":"<p>The function <code>countOnline</code> should return <code>0</code> when the object <code>{ Alan: { online: false }, Jeff: { online: false }, Sarah: { online: false } }</code> is passed to it</p>","testString":"assert(countOnline(usersObj3) === 0);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const users = {\n  Alan: {\n    online: false\n  },\n  Jeff: {\n    online: true\n  },\n  Sarah: {\n    online: false\n  }\n}\n\nfunction countOnline(allUsers) {\n  // Only change code below this line\n\n  // Only change code above this line\n}\n\nconsole.log(countOnline(users));","head":"","tail":"const usersObj1 = {\n  Alan: {\n    online: false\n  },\n  Jeff: {\n    online: true\n  },\n  Sarah: {\n    online: false\n  }\n}\n\nconst usersObj2 = {\n  Alan: {\n    online: true\n  },\n  Jeff: {\n    online: false\n  },\n  Sarah: {\n    online: true\n  }\n}\n\n\nconst usersObj3 = {\n  Alan: {\n    online: false\n  },\n  Jeff: {\n    online: false\n  },\n  Sarah: {\n    online: false\n  }\n}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-data-structures","dashedName":"iterate-through-the-keys-of-an-object-with-a-for---in-statement","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-data-structures","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-data-structures","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/generate-an-array-of-all-object-keys-with-object-keys","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/check-if-an-object-has-a-property","id":"587d7b7d367417b2b2512b1d"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let user = {\n  name: 'Kenneth',\n  age: 28,\n  data: {\n    username: 'kennethCodesAllDay',\n    joinDate: 'March 26, 2016',\n    organization: 'freeCodeCamp',\n    friends: [\n      'Sam',\n      'Kira',\n      'Tomo'\n    ],\n    location: {\n      city: 'San Francisco',\n      state: 'CA',\n      country: 'USA'\n    }\n  }\n};\n\nfunction addFriend(userObj, friend) {\n  userObj.data.friends.push(friend);\n  return userObj.data.friends;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/iterate-through-the-keys-of-an-object-with-a-for---in-statement"}},
    "staticQueryHashes": ["1800977889","4268002518"]}