{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/basic-data-structures/add-items-to-an-array-with-push-and-unshift",
    "result": {"data":{"challengeNode":{"challenge":{"block":"basic-data-structures","title":"Add Items to an Array with push() and unshift()","description":"<section id=\"description\">\n<p>An array's length, like the data types it can contain, is not fixed. Arrays can be defined with a length of any number of elements, and elements can be added or removed over time; in other words, arrays are <dfn>mutable</dfn>. In this challenge, we will look at two methods with which we can programmatically modify an array: <code>Array.push()</code> and <code>Array.unshift()</code>.</p>\n<p>Both methods take one or more elements as parameters and add those elements to the array the method is being called on; the <code>push()</code> method adds elements to the end of an array, and <code>unshift()</code> adds elements to the beginning. Consider the following:</p>\n<pre><code class=\"language-js\">let twentyThree = 'XXIII';\nlet romanNumerals = ['XXI', 'XXII'];\n\nromanNumerals.unshift('XIX', 'XX');\n</code></pre>\n<p><code>romanNumerals</code> would have the value <code>['XIX', 'XX', 'XXI', 'XXII']</code>.</p>\n<pre><code class=\"language-js\">romanNumerals.push(twentyThree);\n</code></pre>\n<p><code>romanNumerals</code> would have the value <code>['XIX', 'XX', 'XXI', 'XXII', 'XXIII']</code>. Notice that we can also pass variables, which allows us even greater flexibility in dynamically modifying our array's data.</p>\n</section>","id":"587d78b2367417b2b2512b0e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>We have defined a function, <code>mixedNumbers</code>, which we are passing an array as an argument. Modify the function by using <code>push()</code> and <code>unshift()</code> to add <code>'I', 2, 'three'</code> to the beginning of the array and <code>7, 'VIII', 9</code> to the end so that the returned array contains representations of the numbers 1-9 in order.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":301151,"fields":{"blockName":"basic-data-structures","slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/add-items-to-an-array-with-push-and-unshift","tests":[{"text":"<p><code>mixedNumbers([\"IV\", 5, \"six\"])</code> should now return <code>[\"I\", 2, \"three\", \"IV\", 5, \"six\", 7, \"VIII\", 9]</code></p>","testString":"assert.deepEqual(mixedNumbers(['IV', 5, 'six']), [\n  'I',\n  2,\n  'three',\n  'IV',\n  5,\n  'six',\n  7,\n  'VIII',\n  9\n]);"},{"text":"<p>The <code>mixedNumbers</code> function should utilize the <code>push()</code> method</p>","testString":"assert(mixedNumbers.toString().match(/\\.push/));"},{"text":"<p>The <code>mixedNumbers</code> function should utilize the <code>unshift()</code> method</p>","testString":"assert(mixedNumbers.toString().match(/\\.unshift/));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function mixedNumbers(arr) {\n  // Only change code below this line\n\n  // Only change code above this line\n  return arr;\n}\n\nconsole.log(mixedNumbers(['IV', 5, 'six']));","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#basic-data-structures","dashedName":"add-items-to-an-array-with-push-and-unshift","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"basic-data-structures","isFirstStep":false,"template":null,"required":[],"nextBlock":"basic-data-structures","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/remove-items-from-an-array-with-pop-and-shift","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/access-an-arrays-contents-using-bracket-notation","id":"587d78b2367417b2b2512b0e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"let user = {\n  name: 'Kenneth',\n  age: 28,\n  data: {\n    username: 'kennethCodesAllDay',\n    joinDate: 'March 26, 2016',\n    organization: 'freeCodeCamp',\n    friends: [\n      'Sam',\n      'Kira',\n      'Tomo'\n    ],\n    location: {\n      city: 'San Francisco',\n      state: 'CA',\n      country: 'USA'\n    }\n  }\n};\n\nfunction addFriend(userObj, friend) {\n  userObj.data.friends.push(friend);\n  return userObj.data.friends;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/basic-data-structures/add-items-to-an-array-with-push-and-unshift"}},
    "staticQueryHashes": ["1800977889","4268002518"]}