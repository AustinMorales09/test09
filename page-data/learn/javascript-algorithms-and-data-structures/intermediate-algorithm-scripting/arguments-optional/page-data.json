{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/arguments-optional",
    "result": {"data":{"challengeNode":{"challenge":{"block":"intermediate-algorithm-scripting","title":"Arguments Optional","description":"<section id=\"description\">\n<p>Create a function that sums two arguments together. If only one argument is provided, then return a function that expects one argument and returns the sum.</p>\n<p>For example, <code>addTogether(2, 3)</code> should return <code>5</code>, and <code>addTogether(2)</code> should return a function.</p>\n<p>Calling this returned function with a single argument will then return the sum:</p>\n<pre><code class=\"language-js\">var sumTwoAnd = addTogether(2);\n</code></pre>\n<p><code>sumTwoAnd(3)</code> returns <code>5</code>.</p>\n<p>If either argument isn't a valid number, return undefined.</p>\n</section>","id":"a97fd23d9b809dac9921074f","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":14271,"fields":{"blockName":"intermediate-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/arguments-optional","tests":[{"text":"<p><code>addTogether(2, 3)</code> should return 5.</p>","testString":"assert.deepEqual(addTogether(2, 3), 5);"},{"text":"<p><code>addTogether(23.4, 30)</code> should return 53.4.</p>","testString":"assert.deepEqual(addTogether(23.4, 30), 53.4);"},{"text":"<p><code>addTogether(\"2\", 3)</code> should return <code>undefined</code>.</p>","testString":"assert.isUndefined(addTogether('2', 3));"},{"text":"<p><code>addTogether(5, undefined)</code> should return <code>undefined</code>.</p>","testString":"assert.isUndefined(addTogether(5, undefined));"},{"text":"<p><code>addTogether(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\")</code> should return <code>undefined</code>.</p>","testString":"assert.isUndefined(addTogether('https://www.youtube.com/watch?v=dQw4w9WgXcQ'));"},{"text":"<p><code>addTogether(5)</code> should return a function.</p>","testString":"assert.deepEqual(typeof(addTogether(5)), 'function');"},{"text":"<p><code>addTogether(5)(7)</code> should return 12.</p>","testString":"assert.deepEqual(addTogether(5)(7), 12);"},{"text":"<p><code>addTogether(2)([3])</code> should return <code>undefined</code>.</p>","testString":"assert.isUndefined(addTogether(2)([3]));"},{"text":"<p><code>addTogether(2, \"3\")</code> should return <code>undefined</code>.</p>","testString":"assert.isUndefined(addTogether(2, '3'));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function addTogether() {\n  return false;\n}\n\naddTogether(2,3);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting","dashedName":"arguments-optional","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"intermediate-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"intermediate-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/make-a-person","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/everything-be-true","id":"a97fd23d9b809dac9921074f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function orbitalPeriod(arr) {\n  const GM = 398600.4418;\n  const earthRadius = 6367.4447;\n  const TAU = 2 * Math.PI;\n  return arr.map(function(obj) {\n    return {\n      name: obj.name,\n      orbitalPeriod: Math.round(TAU * Math.sqrt(Math.pow(obj.avgAlt+earthRadius, 3)/GM))\n    };\n  });\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/arguments-optional"}},
    "staticQueryHashes": ["1800977889","4268002518"]}