{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/steamroller",
    "result": {"data":{"challengeNode":{"challenge":{"block":"intermediate-algorithm-scripting","title":"Steamroller","description":"<section id=\"description\">\n<p>Flatten a nested array. You must account for varying levels of nesting.</p>\n</section>","id":"ab306dbdcc907c7ddfc30830","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16079,"fields":{"blockName":"intermediate-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/steamroller","tests":[{"text":"<p><code>steamrollArray([[[\"a\"]], [[\"b\"]]])</code> should return <code>[\"a\", \"b\"]</code>.</p>","testString":"assert.deepEqual(steamrollArray([[['a']], [['b']]]), ['a', 'b']);"},{"text":"<p><code>steamrollArray([1, [2], [3, [[4]]]])</code> should return <code>[1, 2, 3, 4]</code>.</p>","testString":"assert.deepEqual(steamrollArray([1, [2], [3, [[4]]]]), [1, 2, 3, 4]);"},{"text":"<p><code>steamrollArray([1, [], [3, [[4]]]])</code> should return <code>[1, 3, 4]</code>.</p>","testString":"assert.deepEqual(steamrollArray([1, [], [3, [[4]]]]), [1, 3, 4]);"},{"text":"<p><code>steamrollArray([1, {}, [3, [[4]]]])</code> should return <code>[1, {}, 3, 4]</code>.</p>","testString":"assert.deepEqual(steamrollArray([1, {}, [3, [[4]]]]), [1, {}, 3, 4]);"},{"text":"<p>Your solution should not use the <code>Array.prototype.flat()</code> or <code>Array.prototype.flatMap()</code> methods.</p>","testString":"assert(!__helpers.removeJSComments(code).match(/\\.\\s*flat\\s*\\(/) && !__helpers.removeJSComments(code).match(/\\.\\s*flatMap\\s*\\(/));"},{"text":"<p>Global variables should not be used.</p>","testString":"steamrollArray([1, {}, [3, [[4]]]])\nassert.deepEqual(steamrollArray([1, {}, [3, [[4]]]]), [1, {}, 3, 4])"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function steamrollArray(arr) {\n  return arr;\n}\n\nsteamrollArray([1, [2], [3, [[4]]]]);","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting","dashedName":"steamroller","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"intermediate-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"intermediate-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/binary-agents","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/drop-it","id":"ab306dbdcc907c7ddfc30830"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function orbitalPeriod(arr) {\n  const GM = 398600.4418;\n  const earthRadius = 6367.4447;\n  const TAU = 2 * Math.PI;\n  return arr.map(function(obj) {\n    return {\n      name: obj.name,\n      orbitalPeriod: Math.round(TAU * Math.sqrt(Math.pow(obj.avgAlt+earthRadius, 3)/GM))\n    };\n  });\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/steamroller"}},
    "staticQueryHashes": ["1800977889","4268002518"]}