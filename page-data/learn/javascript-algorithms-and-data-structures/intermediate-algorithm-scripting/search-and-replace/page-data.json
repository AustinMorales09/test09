{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace",
    "result": {"data":{"challengeNode":{"challenge":{"block":"intermediate-algorithm-scripting","title":"Search and Replace","description":"<section id=\"description\">\n<p>Perform a search and replace on the sentence using the arguments provided and return the new sentence.</p>\n<p>First argument is the sentence to perform the search and replace on.</p>\n<p>Second argument is the word that you will be replacing (before).</p>\n<p>Third argument is what you will be replacing the second argument with (after).</p>\n<p><strong>Note:</strong> Preserve the case of the first character in the original word when you are replacing it. For example if you mean to replace the word <code>Book</code> with the word <code>dog</code>, it should be replaced as <code>Dog</code></p>\n</section>","id":"a0b5010f579e69b815e7c5d6","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16045,"fields":{"blockName":"intermediate-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace","tests":[{"text":"<p><code>myReplace(\"Let us go to the store\", \"store\", \"mall\")</code> should return the string <code>Let us go to the mall</code>.</p>","testString":"assert.deepEqual(\n  myReplace('Let us go to the store', 'store', 'mall'),\n  'Let us go to the mall'\n);"},{"text":"<p><code>myReplace(\"He is Sleeping on the couch\", \"Sleeping\", \"sitting\")</code> should return the string <code>He is Sitting on the couch</code>.</p>","testString":"assert.deepEqual(\n  myReplace('He is Sleeping on the couch', 'Sleeping', 'sitting'),\n  'He is Sitting on the couch'\n);"},{"text":"<p><code>myReplace(\"I think we should look up there\", \"up\", \"Down\")</code> should return the string <code>I think we should look down there</code>.</p>","testString":"assert.deepEqual(\n  myReplace('I think we should look up there', 'up', 'Down'),\n  'I think we should look down there'\n);"},{"text":"<p><code>myReplace(\"This has a spellngi error\", \"spellngi\", \"spelling\")</code> should return the string <code>This has a spelling error</code>.</p>","testString":"assert.deepEqual(\n  myReplace('This has a spellngi error', 'spellngi', 'spelling'),\n  'This has a spelling error'\n);"},{"text":"<p><code>myReplace(\"His name is Tom\", \"Tom\", \"john\")</code> should return the string <code>His name is John</code>.</p>","testString":"assert.deepEqual(\n  myReplace('His name is Tom', 'Tom', 'john'),\n  'His name is John'\n);"},{"text":"<p><code>myReplace(\"Let us get back to more Coding\", \"Coding\", \"algorithms\")</code> should return the string <code>Let us get back to more Algorithms</code>.</p>","testString":"assert.deepEqual(\n  myReplace('Let us get back to more Coding', 'Coding', 'algorithms'),\n  'Let us get back to more Algorithms'\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function myReplace(str, before, after) {\n  return str;\n}\n\nmyReplace(\"A quick brown fox jumped over the lazy dog\", \"jumped\", \"leaped\");","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting","dashedName":"search-and-replace","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"intermediate-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"intermediate-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/pig-latin","id":"a0b5010f579e69b815e7c5d6"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function orbitalPeriod(arr) {\n  const GM = 398600.4418;\n  const earthRadius = 6367.4447;\n  const TAU = 2 * Math.PI;\n  return arr.map(function(obj) {\n    return {\n      name: obj.name,\n      orbitalPeriod: Math.round(TAU * Math.sqrt(Math.pow(obj.avgAlt+earthRadius, 3)/GM))\n    };\n  });\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace"}},
    "staticQueryHashes": ["1800977889","4268002518"]}