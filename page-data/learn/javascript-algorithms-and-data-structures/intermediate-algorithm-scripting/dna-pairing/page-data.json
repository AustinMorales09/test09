{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing",
    "result": {"data":{"challengeNode":{"challenge":{"block":"intermediate-algorithm-scripting","title":"DNA Pairing","description":"<section id=\"description\">\n<p>Pairs of DNA strands consist of nucleobase pairs. Base pairs are represented by the characters <em>AT</em> and <em>CG</em>, which form building blocks of the DNA double helix.</p>\n<p>The DNA strand is missing the pairing element. Write a function to match the missing base pairs for the provided DNA strand. For each character in the provided string, find the base pair character. Return the results as a 2d array.</p>\n<p>For example, for the input <code>GCG</code>, return <code>[[\"G\", \"C\"], [\"C\",\"G\"], [\"G\", \"C\"]]</code></p>\n<p>The character and its pair are paired up in an array, and all the arrays are grouped into one encapsulating array.</p>\n</section>","id":"afd15382cdfb22c9efe8b7de","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures","translationPending":false,"forumTopicId":16009,"fields":{"blockName":"intermediate-algorithm-scripting","slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing","tests":[{"text":"<p><code>pairElement(\"ATCGA\")</code> should return <code>[[\"A\",\"T\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"G\",\"C\"],[\"A\",\"T\"]]</code>.</p>","testString":"assert.deepEqual(pairElement('ATCGA'), [\n  ['A', 'T'],\n  ['T', 'A'],\n  ['C', 'G'],\n  ['G', 'C'],\n  ['A', 'T']\n]);"},{"text":"<p><code>pairElement(\"TTGAG\")</code> should return <code>[[\"T\",\"A\"],[\"T\",\"A\"],[\"G\",\"C\"],[\"A\",\"T\"],[\"G\",\"C\"]]</code>.</p>","testString":"assert.deepEqual(pairElement('TTGAG'), [\n  ['T', 'A'],\n  ['T', 'A'],\n  ['G', 'C'],\n  ['A', 'T'],\n  ['G', 'C']\n]);"},{"text":"<p><code>pairElement(\"CTCTA\")</code> should return <code>[[\"C\",\"G\"],[\"T\",\"A\"],[\"C\",\"G\"],[\"T\",\"A\"],[\"A\",\"T\"]]</code>.</p>","testString":"assert.deepEqual(pairElement('CTCTA'), [\n  ['C', 'G'],\n  ['T', 'A'],\n  ['C', 'G'],\n  ['T', 'A'],\n  ['A', 'T']\n]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function pairElement(str) {\n  return str;\n}\n\npairElement(\"GCG\");","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures/#intermediate-algorithm-scripting","dashedName":"dna-pairing","certification":"javascript-algorithms-and-data-structures","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures","block":"intermediate-algorithm-scripting","isFirstStep":false,"template":null,"required":[],"nextBlock":"intermediate-algorithm-scripting","nextChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/missing-letters","prevChallengePath":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/search-and-replace","id":"afd15382cdfb22c9efe8b7de"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function orbitalPeriod(arr) {\n  const GM = 398600.4418;\n  const earthRadius = 6367.4447;\n  const TAU = 2 * Math.PI;\n  return arr.map(function(obj) {\n    return {\n      name: obj.name,\n      orbitalPeriod: Math.round(TAU * Math.sqrt(Math.pow(obj.avgAlt+earthRadius, 3)/GM))\n    };\n  });\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures/intermediate-algorithm-scripting/dna-pairing"}},
    "staticQueryHashes": ["1800977889","4268002518"]}