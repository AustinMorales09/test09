{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/i-before-e-except-after-c",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"I before E except after C","description":"<section id=\"description\">\n<p><strong><a href=\"http://www.rosettacode.org/wiki/I_before_E_except_after_C\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\"I before E, except after C\"</a></strong> is a general rule for English language spelling. If one is unsure whether a word is spelled with the digraph <code>ei</code> or <code>ie</code>, the rhyme suggests that the correct order is <code>ie</code> unless the preceding letter is <code>c</code>, in which case it may be <code>ei</code>.</p>\n<p>Using the words provided, check if the two sub-clauses of the phrase are plausible individually:</p>\n<ol>\n  <li>\n    <i>\"I before E when not preceded by C\".</i>\n  </li>\n  <li>\n    <i>\"E before I when preceded by C\".</i>\n  </li>\n</ol>\n<p>If both sub-phrases are plausible then the original phrase can be said to be plausible.</p>\n</section>","id":"5a23c84252665b21eecc7eb0","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that accepts a word and check if the word follows this rule. The function should return true if the word follows the rule and false if it does not.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302288,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/i-before-e-except-after-c","tests":[{"text":"<p><code>IBeforeExceptC</code> should be a function.</p>","testString":"assert(typeof IBeforeExceptC == 'function');"},{"text":"<p><code>IBeforeExceptC(\"receive\")</code> should return a boolean.</p>","testString":"assert(typeof IBeforeExceptC('receive') == 'boolean');"},{"text":"<p><code>IBeforeExceptC(\"receive\")</code> should return <code>true</code>.</p>","testString":"assert.equal(IBeforeExceptC('receive'), true);"},{"text":"<p><code>IBeforeExceptC(\"science\")</code> should return <code>false</code>.</p>","testString":"assert.equal(IBeforeExceptC('science'), false);"},{"text":"<p><code>IBeforeExceptC(\"imperceivable\")</code> should return <code>true</code>.</p>","testString":"assert.equal(IBeforeExceptC('imperceivable'), true);"},{"text":"<p><code>IBeforeExceptC(\"inconceivable\")</code> should return <code>true</code>.</p>","testString":"assert.equal(IBeforeExceptC('inconceivable'), true);"},{"text":"<p><code>IBeforeExceptC(\"insufficient\")</code> should return <code>false</code>.</p>","testString":"assert.equal(IBeforeExceptC('insufficient'), false);"},{"text":"<p><code>IBeforeExceptC(\"omniscient\")</code> should return <code>false</code>.</p>","testString":"assert.equal(IBeforeExceptC('omniscient'), false);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function IBeforeExceptC(word) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"i-before-e-except-after-c","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/iban","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-q-sequence","id":"5a23c84252665b21eecc7eb0"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/i-before-e-except-after-c"}},
    "staticQueryHashes": ["1800977889","4268002518"]}