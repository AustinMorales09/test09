{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/24-game",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"24 game","description":"<section id=\"description\">\n<p>The 24 Game tests a person's mental arithmetic.</p>\n<p>The aim of the game is to arrange four numbers in a way that when evaluated, the result is 24</p>\n</section>","id":"5951e88f64ebf159166a1176","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Implement a function that takes a string of four digits as its argument, with each digit from 1 to 9 (inclusive) with repetitions allowed, and returns an arithmetic expression that evaluates to the number 24. If no such solution exists, return \"no solution exists\".</p>\n<p><strong>Rules:</strong></p>\n<ul>\n  <li> Only the following operators/functions are allowed: multiplication, division, addition, subtraction. </li>\n  <li> Division should use floating point or rational arithmetic, etc, to preserve remainders. </li>\n  <li> Forming multiple digit numbers from the supplied digits is disallowed. (So an answer of 12+12 when given 1, 2, 2, and 1 is wrong). </li>\n  <li> The order of the digits when given does not have to be preserved. </li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Example input</th>\n<th>Example output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>solve24(\"4878\");</code></td>\n<td><code>(7-8/8)*4</code></td>\n</tr>\n<tr>\n<td><code>solve24(\"1234\");</code></td>\n<td><code>3*1*4*2</code></td>\n</tr>\n<tr>\n<td><code>solve24(\"6789\");</code></td>\n<td><code>(6*8)/(9-7)</code></td>\n</tr>\n<tr>\n<td><code>solve24(\"1127\");</code></td>\n<td><code>(1+7)*(2+1)</code></td>\n</tr>\n</tbody>\n</table>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302218,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/24-game","tests":[{"text":"<p><code>solve24</code> should be a function.</p>","testString":"assert(typeof solve24 === 'function');"},{"text":"<p><code>solve24(\"4878\")</code> should return <code>(7-8/8)*4</code>, <code>4*(7-8/8)</code>, or a similar valid string</p>","testString":"assert(isValidSolution_(solve24(testCases_[0])));"},{"text":"<p><code>solve24(\"1234\")</code> should return <code>1*2*3*4</code> or a similar valid string</p>","testString":"assert(isValidSolution_(solve24(testCases_[1])));"},{"text":"<p><code>solve24(\"6789\")</code> should return <code>(6*8)/(9-7)</code>, <code>(8*6)/(9-7)</code>, or a similar valid string</p>","testString":"assert(isValidSolution_(solve24(testCases_[2])));"},{"text":"<p><code>solve24(\"1127\")</code> should return <code>(1+7)*(1+2)</code> or a similar valid string</p>","testString":"assert(isValidSolution_(solve24(testCases_[3])));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function solve24 (numStr) {\n\n  return true;\n}","head":"","tail":"const testCases_ = [\n  '4878',\n  '1234',\n  '6789',\n  '1127'\n];\n\nconst OPERATORS_ = {\n  \"+\": (a, b) => a + b,\n  \"-\": (a, b) => a - b,\n  \"*\": (a, b) => a * b,\n  \"/\": (a, b) => a / b,\n}\n\nconst PRECEDENCE_ = {\n  \"+\": 1,\n  \"-\": 1,\n  \"*\": 2,\n  \"/\": 2,\n}\n\nfunction evaluate_(expression) {\n  expression = expression.replace('/\\s+/g', '');\n  const stack = [];\n  let postfix = \"\";\n\n  // Convert from infix to postfix\n  let head = 0;\n  while (head < expression.length) {\n    let c = expression[head];\n    switch (c) {\n      case \"(\":\n        stack.push(c);\n        break;\n      case \")\":\n        let last = stack.pop();\n        while (last !== \"(\") {\n          postfix += last;\n          last = stack.pop();\n        }\n        break;\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n        while (stack.length &&\n               PRECEDENCE_[c] <= PRECEDENCE_[stack[stack.length-1]]) {\n          postfix += stack.pop();\n        }\n        stack.push(c);\n        break;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        postfix += c;\n        break;\n      default:\n        return false;\n    }\n    head++;\n  }\n\n  // Clear out stack\n  while (stack.length) {\n    postfix += stack.pop();\n  }\n\n  // Evaluate postfix\n  for (let c of postfix) {\n    switch (c) {\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n        const b = +stack.pop();\n        const a = +stack.pop();\n        stack.push(OPERATORS_[c](a, b));\n        break;\n      default:\n        stack.push(c);\n    }\n  }\n  return stack.pop();\n}\n\n// Check solution validity\nfunction isValidSolution_(userSolution) {\n  return evaluate_(userSolution) === 24;\n}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"24-game","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/9-billion-names-of-god-the-integer","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/100-doors","id":"5951e88f64ebf159166a1176"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/24-game"}},
    "staticQueryHashes": ["1800977889","4268002518"]}