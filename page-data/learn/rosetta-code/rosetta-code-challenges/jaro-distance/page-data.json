{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/jaro-distance",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Jaro distance","description":"<section id=\"description\">\n<p>The Jaro distance is a measure of similarity between two strings. The higher the Jaro distance for two strings is, the more similar the strings are. The score is normalized such that <code>0</code> equates to no similarity and <code>1</code> is an exact match.</p>\n<p><strong>Definition</strong></p>\n<p>The Jaro distance \\( d_j \\) of two given strings \\(s_1\\) and \\(s_2\\) is</p>\n<p>\\begin{align}d_j = \\begin{cases}0&#x26; &#x26; \\text{if }m=0 \\\\\\\\{\\frac {1}{3}}\\left({\\frac {m}{|s_{1}|}}+{\\frac {m}{|s_{2}|}}+{\\frac {m-t}{m}}\\right)&#x26; &#x26; \\text{otherwise}\\end{cases}\\end{align}</p>\n<p>Where:</p>\n<ul>\n  <li>\\(m\\) is the number of <i>matching characters</i>;</li>\n  <li> \\(t\\) is half the number of <i>transpositions</i>.</li>\n</ul>\n<p>Two characters from \\(s_1\\) and \\(s_2\\) respectively, are considered <em>matching</em> only if they are the same and not farther than \\(\\left\\lfloor\\frac{\\max(|s_1|,|s_2|)}{2}\\right\\rfloor-1\\).</p>\n<p>Each character of \\(s_1\\) is compared with all its matching characters in \\(s_2\\) . The number of matching (but different sequence order) characters divided by 2 defines the number of <em>transpositions</em>.</p>\n<p><strong>Example</strong></p>\n<p>Given the strings \\(s_1\\) <em>DWAYNE</em> and \\(s_2\\) <em>DUANE</em> we find:</p>\n<ul>\n  <li>\\(m = 4\\)</li>\n  <li>\\(|s_1| = 6\\)</li>\n  <li>\\(|s_2| = 5\\)</li>\n  <li>\\(t = 0\\)</li>\n</ul>\n<p>We find a Jaro score of: \\(d_j = \\frac{1}{3}\\left(\\frac{4}{6} + \\frac{4}{5} + \\frac{4-0}{4}\\right) = 0.822\\).</p>\n</section>","id":"5a23c84252665b21eecc7ec2","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function a that takes two strings as parameters and returns the associated Jaro distance.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302292,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/jaro-distance","tests":[{"text":"<p><code>jaro</code> should be a function.</p>","testString":"assert(typeof jaro == 'function');"},{"text":"<p><code>jaro(\"MARTHA\", \"MARHTA\")</code> should return a number.</p>","testString":"assert(typeof jaro('MARTHA', 'MARHTA') == 'number');"},{"text":"<p><code>jaro(\"MARTHA\", \"MARHTA\")</code> should return <code>0.9444444444444445</code>.</p>","testString":"assert.equal(jaro('MARTHA', 'MARHTA'), 0.9444444444444445);"},{"text":"<p><code>jaro(\"DIXON\", \"DICKSONX\")</code> should return <code>0.7666666666666666</code>.</p>","testString":"assert.equal(jaro('DIXON', 'DICKSONX'), 0.7666666666666666);"},{"text":"<p><code>jaro(\"JELLYFISH\", \"SMELLYFISH\")</code> should return <code>0.8962962962962964</code>.</p>","testString":"assert.equal(jaro('JELLYFISH', 'SMELLYFISH'), 0.8962962962962964);"},{"text":"<p><code>jaro(\"HELLOS\", \"CHELLO\")</code> should return <code>0.888888888888889</code>.</p>","testString":"assert.equal(jaro('HELLOS', 'CHELLO'), 0.888888888888889);"},{"text":"<p><code>jaro(\"ABCD\", \"BCDA\")</code> should return <code>0.8333333333333334</code>.</p>","testString":"assert.equal(jaro('ABCD', 'BCDA'), 0.8333333333333334);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function jaro(s, t) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"jaro-distance","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/jortsort","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/iterated-digits-squaring","id":"5a23c84252665b21eecc7ec2"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/jaro-distance"}},
    "staticQueryHashes": ["1800977889","4268002518"]}