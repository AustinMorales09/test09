{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/gamma-function",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Gamma function","description":"<section id=\"description\">\n<p>Implement one algorithm (or more) to compute the Gamma function (in the real field only).</p>\n<p>The Gamma function can be defined as:</p>\n<div style='padding-left: 4em;'><big><big>$\\Gamma(x) = \\displaystyle\\int_0^\\infty t^{x-1}e^{-t} dt$</big></big></div>\n</section>","id":"5a23c84252665b21eecc7e76","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302271,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/gamma-function","tests":[{"text":"<p><code>gamma</code> should be a function.</p>","testString":"assert(typeof gamma == 'function');"},{"text":"<p><code>gamma(.1)</code> should return a number.</p>","testString":"assert(typeof gamma(0.1) == 'number');"},{"text":"<p><code>gamma(.1)</code> should return <code>9.513507698668736</code>.</p>","testString":"assert.equal(round(gamma(0.1)), round(9.513507698668736));"},{"text":"<p><code>gamma(.2)</code> should return <code>4.590843711998803</code>.</p>","testString":"assert.equal(round(gamma(0.2)), round(4.590843711998803));"},{"text":"<p><code>gamma(.3)</code> should return <code>2.9915689876875904</code>.</p>","testString":"assert.equal(round(gamma(0.3)), round(2.9915689876875904));"},{"text":"<p><code>gamma(.4)</code> should return <code>2.218159543757687</code>.</p>","testString":"assert.equal(round(gamma(0.4)), round(2.218159543757687));"},{"text":"<p><code>gamma(.5)</code> should return <code>1.7724538509055159</code>.</p>","testString":"assert.equal(round(gamma(0.5)), round(1.7724538509055159));"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function gamma(x) {\n\n}","head":"","tail":"function round(x) {\n  return Number(x).toPrecision(13);\n}","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"gamma-function","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/gaussian-elimination","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/fractran","id":"5a23c84252665b21eecc7e76"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/gamma-function"}},
    "staticQueryHashes": ["1800977889","4268002518"]}