{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/combinations",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Combinations","description":"<section id=\"description\">\n<p>Given non-negative integers <code>m</code> and <code>n</code>, generate all size <code>m</code> combinations of the integers from <code>0</code> (zero) to <code>n-1</code> in sorted order (each combination is sorted and the entire table is sorted).</p>\n<p><strong>Example:</strong></p>\n<p><code>3</code> comb <code>5</code> is:</p>\n<pre>0 1 2\n0 1 3\n0 1 4\n0 2 3\n0 2 4\n0 3 4\n1 2 3\n1 2 4\n1 3 4\n2 3 4\n</pre>\n</section>","id":"5958469238c0d8d2632f46db","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302233,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/combinations","tests":[{"text":"<p><code>combinations</code> should be a function.</p>","testString":"assert(typeof combinations === 'function');"},{"text":"<p><code>combinations(3, 5)</code> should return <code>[[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3], [0, 2, 4], [0, 3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]]</code>.</p>","testString":"assert.deepEqual(combinations(testInput1[0], testInput1[1]), testOutput1);"},{"text":"<p><code>combinations(4, 6)</code> should return <code>[[0,1,2,3], [0,1,2,4], [0,1,2,5], [0,1,3,4], [0,1,3,5], [0,1,4,5], [0,2,3,4], [0,2,3,5], [0,2,4,5], [0,3,4,5], [1,2,3,4], [1,2,3,5], [1,2,4,5], [1,3,4,5], [2,3,4,5]]</code></p>","testString":"assert.deepEqual(combinations(testInput2[0], testInput2[1]), testOutput2);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function combinations(m, n) {\n\n  return true;\n}","head":"","tail":"const testInput1 = [3, 5];\nconst testOutput1 = [[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3], [0, 2, 4], [0, 3, 4], [1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]];\n\nconst testInput2 = [4, 6];\nconst testOutput2 = [[0, 1, 2, 3], [0, 1, 2, 4], [0, 1, 2, 5], [0, 1, 3, 4], [0, 1, 3, 5], [0, 1, 4, 5], [0, 2, 3, 4], [0, 2, 3, 5], [0, 2, 4, 5], [0, 3, 4, 5], [1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 4, 5], [1, 3, 4, 5], [2, 3, 4, 5]];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"combinations","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/comma-quibbling","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/closest-pair-problem","id":"5958469238c0d8d2632f46db"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/combinations"}},
    "staticQueryHashes": ["1800977889","4268002518"]}