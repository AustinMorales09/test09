{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/comma-quibbling",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Comma quibbling","description":"<section id=\"description\">\n<p><a href=\"https://rosettacode.org/wiki/Comma_quibbling\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Comma quibbling</a> is a task originally set by Eric Lippert in his blog.</p>\n</section>","id":"596e414344c3b2872167f0fe","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function to generate a string output which is the concatenation of input words from a list/sequence where:</p>\n<ol>\n  <li>An input of no words produces the output string of just the two brace characters (<code>\"{}\"</code>)</li>\n  <li>An input of just one word, e.g. <code>[\"ABC\"]</code>, produces the output string of the word inside the two braces, e.g. <code>\"{ABC}\"</code></li>\n  <li>An input of two words, e.g. <code>[\"ABC\", \"DEF\"]</code>, produces the output string of the two words inside the two braces with the words separated by the string <code>\" and \"</code>, e.g. <code>\"{ABC and DEF}\"</code></li>\n  <li>An input of three or more words, e.g. <code>[\"ABC\", \"DEF\", \"G\", \"H\"]</code>, produces the output string of all but the last word separated by <code>\", \"</code> with the last word separated by <code>\" and \"</code> and all within braces; e.g. <code>\"{ABC, DEF, G and H}\"</code></li>\n</ol>\n<p>Test your function with the following series of inputs showing your output here on this page:</p>\n<ul>\n  <li>[] # (No input words).</li>\n  <li>[\"ABC\"]</li>\n  <li>[\"ABC\", \"DEF\"]</li>\n  <li>[\"ABC\", \"DEF\", \"G\", \"H\"]</li>\n</ul>\n<p><strong>Note:</strong> Assume words are non-empty strings of uppercase characters for this task.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302234,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/comma-quibbling","tests":[{"text":"<p><code>quibble</code> should be a function.</p>","testString":"assert(typeof quibble === 'function');"},{"text":"<p><code>quibble([\"ABC\"])</code> should return a string.</p>","testString":"assert(typeof quibble(['ABC']) === 'string');"},{"text":"<p><code>quibble([])</code> should return \"{}\".</p>","testString":"assert.equal(quibble(testCases[0]), results[0]);"},{"text":"<p><code>quibble([\"ABC\"])</code> should return <code>\"{ABC}\"</code>.</p>","testString":"assert.equal(quibble(testCases[1]), results[1]);"},{"text":"<p><code>quibble([\"ABC\", \"DEF\"])</code> should return <code>\"{ABC and DEF}\"</code>.</p>","testString":"assert.equal(quibble(testCases[2]), results[2]);"},{"text":"<p><code>quibble([\"ABC\", \"DEF\", \"G\", \"H\"])</code> should return <code>\"{ABC, DEF, G and H}\"</code>.</p>","testString":"assert.equal(quibble(testCases[3]), results[3]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function quibble(words) {\n\n  return true;\n}","head":"","tail":"const testCases = [[], [\"ABC\"], [\"ABC\", \"DEF\"], [\"ABC\", \"DEF\", \"G\", \"H\"]];\nconst results = [\"{}\", \"{ABC}\", \"{ABC and DEF}\", \"{ABC, DEF, G and H}\"];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"comma-quibbling","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/compare-a-list-of-strings","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/combinations","id":"596e414344c3b2872167f0fe"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/comma-quibbling"}},
    "staticQueryHashes": ["1800977889","4268002518"]}