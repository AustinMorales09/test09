{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/equilibrium-index",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Equilibrium index","description":"<section id=\"description\">\n<p>An equilibrium index of a sequence is an index into the sequence such that the sum of elements at lower indices is equal to the sum of elements at higher indices.</p>\n<p>For example, in a sequence $A$:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 = -7$</big></li>\n  <li><big>$A_1 =  1$</big></li>\n  <li><big>$A_2 =  5$</big></li>\n  <li><big>$A_3 =  2$</big></li>\n  <li><big>$A_4 = -4$</big></li>\n  <li><big>$A_5 =  3$</big></li>\n  <li><big>$A_6 =  0$</big></li>\n</ul>\n<p><code>3</code> is an equilibrium index, because:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 + A_1 + A_2 = A_4 + A_5 + A_6$</big></li>\n</ul>\n<p><code>6</code> is also an equilibrium index, because:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 + A_1 + A_2 + A_3 + A_4 + A_5 = 0$</big></li>\n</ul>\n<p>(sum of zero elements is zero)</p>\n<p><code>7</code> is not an equilibrium index, because it is not a valid index of sequence $A$.</p>\n</section>","id":"5987fd532b954e0f21b5d3f6","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that, given a sequence, returns its equilibrium indices (if any).</p>\n<p>Assume that the sequence may be very long.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302255,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/equilibrium-index","tests":[{"text":"<p><code>equilibrium</code> should be a function.</p>","testString":"assert(typeof equilibrium === 'function');"},{"text":"<p><code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[0]), ans[0]);"},{"text":"<p><code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[1]), ans[1]);"},{"text":"<p><code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[2]), ans[2]);"},{"text":"<p><code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[3]), ans[3]);"},{"text":"<p><code>equilibrium([1])</code> should return <code>[0]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[4]), ans[4]);"},{"text":"<p><code>equilibrium([])</code> should return <code>[]</code>.</p>","testString":"assert.deepEqual(equilibrium(equilibriumTests[5]), ans[5]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function equilibrium(a) {\n\n}","head":"","tail":"const equilibriumTests =\n  [[-7, 1, 5, 2, -4, 3, 0], // 3, 6\n  [2, 4, 6], // empty\n  [2, 9, 2], // 1\n  [1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6\n  [1], // 0\n  [] // empty\n  ];\nconst ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"equilibrium-index","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/ethiopian-multiplication","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/entropy","id":"5987fd532b954e0f21b5d3f6"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/equilibrium-index"}},
    "staticQueryHashes": ["1800977889","4268002518"]}