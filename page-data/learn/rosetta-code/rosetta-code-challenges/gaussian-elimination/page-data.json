{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/gaussian-elimination",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Gaussian elimination","description":"<section id=\"description\">\n<p>Write a function to solve \\(Ax = b\\) using Gaussian elimination then backwards substitution.</p>\n<p>\\(A\\) being an \\(n \\times n\\) matrix. Also, \\(x\\) and \\(b\\) are \\(n\\) by 1 vectors.</p>\n<p>To improve accuracy, please use partial pivoting and scaling.</p>\n</section>","id":"5a23c84252665b21eecc7e77","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302272,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/gaussian-elimination","tests":[{"text":"<p><code>gaussianElimination</code> should be a function.</p>","testString":"assert(typeof gaussianElimination == 'function');"},{"text":"<p><code>gaussianElimination([[1,1],[1,-1]], [5,1])</code> should return an array.</p>","testString":"assert(\n  Array.isArray(\n    gaussianElimination(\n      [\n        [1, 1],\n        [1, -1]\n      ],\n      [5, 1]\n    )\n  )\n);"},{"text":"<p><code>gaussianElimination([[1,1],[1,-1]], [5,1])</code> should return <code>[ 3, 2 ]</code>.</p>","testString":"assert.deepEqual(\n  gaussianElimination(\n    [\n      [1, 1],\n      [1, -1]\n    ],\n    [5, 1]\n  ),\n  [3, 2]\n);"},{"text":"<p><code>gaussianElimination([[2,3],[2,1]] , [8,4])</code> should return <code>[ 1, 2 ]</code>.</p>","testString":"assert.deepEqual(\n  gaussianElimination(\n    [\n      [2, 3],\n      [2, 1]\n    ],\n    [8, 4]\n  ),\n  [1, 2]\n);"},{"text":"<p><code>gaussianElimination([[1,3],[5,-2]], [14,19])</code> should return <code>[ 5, 3 ]</code>.</p>","testString":"assert.deepEqual(\n  gaussianElimination(\n    [\n      [1, 3],\n      [5, -2]\n    ],\n    [14, 19]\n  ),\n  [5, 3]\n);"},{"text":"<p><code>gaussianElimination([[1,1],[5,-1]] , [10,14])</code> should return <code>[ 4, 6 ]</code>.</p>","testString":"assert.deepEqual(\n  gaussianElimination(\n    [\n      [1, 1],\n      [5, -1]\n    ],\n    [10, 14]\n  ),\n  [4, 6]\n);"},{"text":"<p><code>gaussianElimination([[1,2,3],[4,5,6],[7,8,8]] , [6,15,23])</code> should return <code>[ 1, 1, 1 ]</code>.</p>","testString":"assert.deepEqual(\n  gaussianElimination(\n    [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 8]\n    ],\n    [6, 15, 23]\n  ),\n  [1, 1, 1]\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function gaussianElimination(A,b) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"gaussian-elimination","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/general-fizzbuzz","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/gamma-function","id":"5a23c84252665b21eecc7e77"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/gaussian-elimination"}},
    "staticQueryHashes": ["1800977889","4268002518"]}