{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/hofstadter-q-sequence",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Hofstadter Q sequence","description":"<section id=\"description\">\n<p>The Hofstadter Q sequence is defined as:</p>\n<p>$Q(1)=Q(2)=1, \\\\ Q(n)=Q\\big(n-Q(n-1)\\big)+Q\\big(n-Q(n-2)), \\quad n>2.$</p>\n<p>It is defined like the Fibonacci sequence, but whereas the next term in the Fibonacci sequence is the sum of the previous two terms, in the Q sequence the previous two terms tell you how far to go back in the Q sequence to find the two numbers to sum to make the next term of the sequence.</p>\n</section>","id":"59637c4d89f6786115efd814","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Implement the Hofstadter Q Sequence equation as a function. The function should accept number, <code>n</code>, and return an integer.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302287,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-q-sequence","tests":[{"text":"<p><code>hofstadterQ</code> should be a function.</p>","testString":"assert(typeof hofstadterQ === 'function');"},{"text":"<p><code>hofstadterQ()</code> should return <code>integer</code></p>","testString":"assert(Number.isInteger(hofstadterQ(1000)));"},{"text":"<p><code>hofstadterQ(1000)</code> should return <code>502</code></p>","testString":"assert.equal(hofstadterQ(testCase[0]), res[0]);"},{"text":"<p><code>hofstadterQ(1500)</code> should return <code>755</code></p>","testString":"assert.equal(hofstadterQ(testCase[1]), res[1]);"},{"text":"<p><code>hofstadterQ(2000)</code> should return <code>1005</code></p>","testString":"assert.equal(hofstadterQ(testCase[2]), res[2]);"},{"text":"<p><code>hofstadterQ(2500)</code> should return <code>1261</code></p>","testString":"assert.equal(hofstadterQ(testCase[3]), res[3]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function hofstadterQ(n) {\n\n  return n;\n}","head":"","tail":"const testCase = [1000, 1500, 2000, 2500];\nconst res = [502, 755, 1005, 1261];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"hofstadter-q-sequence","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/i-before-e-except-after-c","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-figure-figure-sequences","id":"59637c4d89f6786115efd814"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-q-sequence"}},
    "staticQueryHashes": ["1800977889","4268002518"]}