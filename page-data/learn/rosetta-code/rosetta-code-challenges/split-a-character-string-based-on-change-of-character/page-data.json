{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/split-a-character-string-based-on-change-of-character",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Split a character string based on change of character","description":"<section id=\"description\">\n<p>Split a (character) string into comma (plus a blank) delimited strings based on a change of character (left to right). Blanks should be treated as any other character (except they are problematic to display clearly). The same applies to commas. For instance, the string:</p>\n<pre>\n\"gHHH5YY++///\\\\\"\n</pre>\n<p>should be split as:</p>\n<pre>\n[\"g\", \"HHH\", \"5\", \"YY\", \"++\", \"///\", \"\\\\\" ];\n</pre>\n</section>","id":"5a23c84252665b21eecc801d","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302322,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/split-a-character-string-based-on-change-of-character","tests":[{"text":"<p><code>split</code> should be a function.</p>","testString":"assert(typeof split == 'function');"},{"text":"<p><code>split(\"hello\")</code> should return an array.</p>","testString":"assert(Array.isArray(split('hello')));"},{"text":"<p><code>split(\"hello\")</code> should return <code>[\"h\", \"e\", \"ll\", \"o\"]</code>.</p>","testString":"assert.deepEqual(split('hello'), ['h', 'e', 'll', 'o']);"},{"text":"<p><code>split(\"commission\")</code> should return <code>[\"c\", \"o\", \"mm\", \"i\", \"ss\", \"i\", \"o\", \"n\"]</code>.</p>","testString":"assert.deepEqual(split('commission'), [\n  'c',\n  'o',\n  'mm',\n  'i',\n  'ss',\n  'i',\n  'o',\n  'n'\n]);"},{"text":"<p><code>split(\"ssss----====llloooo\")</code> should return <code>[\"ssss\", \"----\", \"====\", \"lll\", \"oooo\"]</code>.</p>","testString":"assert.deepEqual(split('ssss----====llloooo'), [\n  'ssss',\n  '----',\n  '====',\n  'lll',\n  'oooo'\n]);"},{"text":"<p><code>split(\"sssmmmaaammmaaat\")</code> should return <code>[\"sss\", \"mmm\", \"aaa\", \"mmm\", \"aaa\", \"t\"]</code>.</p>","testString":"assert.deepEqual(split('sssmmmaaammmaaat'), [\n  'sss',\n  'mmm',\n  'aaa',\n  'mmm',\n  'aaa',\n  't'\n]);"},{"text":"<p><code>split(\"gHHH5YY++///\\\\\")</code> should return <code>[\"g\", \"HHH\", \"5\", \"YY\", \"++\", \"///\", \"\\\\\"]</code>.</p>","testString":"assert.deepEqual(split('gHHH5YY++///\\\\'), [\n  'g',\n  'HHH',\n  '5',\n  'YY',\n  '++',\n  '///',\n  '\\\\'\n]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function split(str) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"split-a-character-string-based-on-change-of-character","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/state-name-puzzle","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/spiral-matrix","id":"5a23c84252665b21eecc801d"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/split-a-character-string-based-on-change-of-character"}},
    "staticQueryHashes": ["1800977889","4268002518"]}