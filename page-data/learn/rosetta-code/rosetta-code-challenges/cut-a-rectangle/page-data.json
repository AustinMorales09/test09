{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/cut-a-rectangle",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Cut a rectangle","description":"<section id=\"description\">\n<p>A given rectangle is made from <em>m</em> × <em>n</em> squares. If <em>m</em> and <em>n</em> are not both odd, then it is possible to cut a path through the rectangle along the square edges such that the rectangle splits into two connected pieces with the same shape (after rotating one of the pieces by 180°). All such paths for 2 × 2 and 4 × 3 rectangles are shown below.</p>\n<div style=\"width: 100%; text-align: center;\">\n  <svg xmlns=\"https://www.w3.org/2000/svg\" xmlns:xlink=\"https://www.w3.org/1999/xlink\" width=\"520\" height=\"170\" aria-hidden=\"true\" alt=\"Diagram showing the possible paths for 2 by 2 and 4 by 3 rectangles\">\n    <style>\n      .diagram-g { fill: none; stroke: #ccc }\n      .diagram-s, .diagram-s2 { fill: #bff; stroke: black; fill-opacity: .4 }\n      .diagram-s2 { fill: #fbf }\n      .diagram-d { stroke:black; fill:none}\n    </style>\n    <defs>\n      <g id=\"diagram-m\">\n        <g id=\"diagram-h4\">\n          <g id=\"diagram-h2\">\n            <path id=\"diagram-h\" d=\"m0 10h 640\" class=\"diagram-g\"/>\n            <use xlink:href=\"#diagram-h\" transform=\"translate(0, 20)\"/>\n          </g>\n          <use xlink:href=\"#diagram-h2\" transform=\"translate(0, 40)\"/>\n        </g>\n        <use xlink:href=\"#diagram-h4\" transform=\"translate(0, 80)\"/>\n        <g id=\"diagram-v8\">\n          <g id=\"diagram-v4\">\n            <g id=\"diagram-v2\">\n              <path id=\"diagram-v\" d=\"m10 0v160 m 20 0 v-160\" class=\"diagram-g\"/>\n              <use xlink:href=\"#diagram-v\" transform=\"translate(40, 0)\"/>\n            </g>\n            <use xlink:href=\"#diagram-v2\" transform=\"translate(80, 0)\"/>\n          </g>\n          <use xlink:href=\"#diagram-v4\" transform=\"translate(160, 0)\"/>\n        </g>\n        <use xlink:href=\"#diagram-v8\" transform=\"translate(320, 0)\"/>\n      </g>\n      <path id=\"diagram-b\" d=\"m0 0h80v60h-80z\" class=\"diagram-s\"/>\n    </defs>\n    <g transform=\"translate(.5, .5)\">\n      <use xlink:href=\"#diagram-m\"/>\n      <g transform=\"translate(10, 10)\">\n        <path d=\"m0 0v40h40v-40z\" class=\"diagram-s2\"/>\n        <path d=\"m20 0v40\" class=\"diagram-d\"/>\n        <path d=\"m60 0v40h40v-40z\" class=\"diagram-s2\"/>\n        <path d=\"m60 20h40\" class=\"diagram-d\"/>\n        <g transform=\"translate(120, 0)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m0 20h40v20h40\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(220, 0)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m0 40h40v-20h40\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(320, 0)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m20 0v40h20v-20h20v40\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(420, 0)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m60 0v40h-20v-20h-20v40\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(20, 80)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m40 0v60\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(120, 80)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m60 0v20h-20v20h-20v20\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(220, 80)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m20 0v20h20v20h20v20\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(320, 80)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m0 20h20v20h20v-20h20v20h20\" class=\"diagram-d\"/>\n        </g>\n        <g transform=\"translate(420, 80)\">\n          <use xlink:href=\"#diagram-b\"/>\n          <path d=\"m0 40h20v-20h20v20h20v-20h20\" class=\"diagram-d\"/>\n        </g>\n      </g>\n    </g>\n  </svg>\n</div>\n</section>","id":"5a23c84252665b21eecc7e06","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that calculates the number of different ways to cut an <em>m</em> × <em>n</em> rectangle.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302242,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/cut-a-rectangle","tests":[{"text":"<p><code>cutRectangle</code> should be a function.</p>","testString":"assert(typeof cutRectangle == 'function');"},{"text":"<p><code>cutRectangle(2, 2)</code> should return a number.</p>","testString":"assert(typeof cutRectangle(2, 2) == 'number');"},{"text":"<p><code>cutRectangle(2, 2)</code> should return <code>2</code>.</p>","testString":"assert.equal(cutRectangle(2, 2), 2);"},{"text":"<p><code>cutRectangle(4, 3)</code> should return <code>9</code>.</p>","testString":"assert.equal(cutRectangle(4, 3), 9);"},{"text":"<p><code>cutRectangle(4, 4)</code> should return <code>22</code>.</p>","testString":"assert.equal(cutRectangle(4, 4), 22);"},{"text":"<p><code>cutRectangle(8, 3)</code> should return <code>53</code>.</p>","testString":"assert.equal(cutRectangle(8, 3), 53);"},{"text":"<p><code>cutRectangle(7, 4)</code> should return <code>151</code>.</p>","testString":"assert.equal(cutRectangle(7, 4), 151);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function cutRectangle(w, h) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"cut-a-rectangle","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/date-format","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/cusip","id":"5a23c84252665b21eecc7e06"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/cut-a-rectangle"}},
    "staticQueryHashes": ["1800977889","4268002518"]}