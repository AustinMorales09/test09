{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/longest-string-challenge",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Longest string challenge","description":"<section id=\"description\">\n<p>In this challenge, you have to find the strings that are the longest among the given strings.</p>\n</section>","id":"5e6dd14192286d95fc43046e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes an array of strings and returns the strings that have a length equal to the longest length.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":385275,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/longest-string-challenge","tests":[{"text":"<p><code>longestString</code> should be a function.</p>","testString":"assert(typeof longestString == 'function');"},{"text":"<p><code>longestString([\"a\", \"bb\", \"ccc\", \"ee\", \"f\", \"ggg\"])</code> should return a array.</p>","testString":"assert(Array.isArray(longestString(['a', 'bb', 'ccc', 'ee', 'f', 'ggg'])));"},{"text":"<p><code>longestString([\"a\", \"bb\", \"ccc\", \"ee\", \"f\", \"ggg\"])</code> should return <code>[\"ccc\", \"ggg\"]</code>.</p>","testString":"assert.deepEqual(longestString(['a', 'bb', 'ccc', 'ee', 'f', 'ggg']), [\n  'ccc',\n  'ggg'\n]);"},{"text":"<p><code>longestString([\"afedg\", \"bb\", \"sdccc\", \"efdee\", \"f\", \"geegg\"])</code> should return <code>[\"afedg\", \"sdccc\", \"efdee\", \"geegg\"]</code>.</p>","testString":"assert.deepEqual(\n  longestString(['afedg', 'bb', 'sdccc', 'efdee', 'f', 'geegg']),\n  ['afedg', 'sdccc', 'efdee', 'geegg']\n);"},{"text":"<p><code>longestString([\"a\", \"bhghgb\", \"ccc\", \"efde\", \"fssdrr\", \"ggg\"])</code> should return <code>[\"bhghgb\", \"fssdrr\"]</code>.</p>","testString":"assert.deepEqual(\n  longestString(['a', 'bhghgb', 'ccc', 'efde', 'fssdrr', 'ggg']),\n  ['bhghgb', 'fssdrr']\n);"},{"text":"<p><code>longestString([\"ahgfhg\", \"bdsfsb\", \"ccc\", \"ee\", \"f\", \"ggdsfg\"])</code> should return <code>[\"ahgfhg\", \"bdsfsb\", \"ggdsfg\"]</code>.</p>","testString":"assert.deepEqual(\n  longestString(['ahgfhg', 'bdsfsb', 'ccc', 'ee', 'f', 'ggdsfg']),\n  ['ahgfhg', 'bdsfsb', 'ggdsfg']\n);"},{"text":"<p><code>longestString([\"a\", \"bbdsf\", \"ccc\", \"edfe\", \"gzzzgg\"])</code> should return <code>[\"gzzzgg\"]</code>.</p>","testString":"assert.deepEqual(longestString(['a', 'bbdsf', 'ccc', 'edfe', 'gzzzgg']), [\n  'gzzzgg'\n]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function longestString(strings) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"longest-string-challenge","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/look-and-say-sequence","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/longest-increasing-subsequence","id":"5e6dd14192286d95fc43046e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/longest-string-challenge"}},
    "staticQueryHashes": ["1800977889","4268002518"]}