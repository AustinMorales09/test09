{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/longest-increasing-subsequence",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Longest increasing subsequence","description":"<section id=\"description\">\n<p>The longest increasing subsequence problem is to find a subsequence of a given sequence in which the subsequence's elements are in sorted order, lowest to highest, and in which the subsequence is as long as possible. An example:</p>\n<p>For the following array:</p>\n<pre><code class=\"language-js\">const array = [3, 10, 2, 1, 20];\n</code></pre>\n<p>Longest increasing sequence is:</p>\n<p>$\\{3, 10, 20\\}$</p>\n</section>","id":"5e6dd139859c290b6ab80292","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes an array of numbers as a parameter and returns the longest increasing subsequence.</p>\n<p>It is guaranteed that every array will have a longest increasing subsequence.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":385272,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/longest-increasing-subsequence","tests":[{"text":"<p><code>findSequence</code> should be a function.</p>","testString":"assert(typeof findSequence == 'function');"},{"text":"<p><code>findSequence([3, 10, 2, 1, 20])</code> should return a array.</p>","testString":"assert(Array.isArray(findSequence([3, 10, 2, 1, 20])));"},{"text":"<p><code>findSequence([3, 10, 2, 1, 20])</code> should return <code>[3, 10, 20]</code>.</p>","testString":"assert.deepEqual(findSequence([3, 10, 2, 1, 20]), [3, 10, 20]);"},{"text":"<p><code>findSequence([2, 7, 3, 5, 8])</code> should return <code>[2, 3, 5, 8]</code>.</p>","testString":"assert.deepEqual(findSequence([2, 7, 3, 5, 8]), [2, 3, 5, 8]);"},{"text":"<p><code>findSequence([2, 6, 4, 5, 1])</code> should return <code>[2, 4, 5]</code>.</p>","testString":"assert.deepEqual(findSequence([2, 6, 4, 5, 1]), [2, 4, 5]);"},{"text":"<p><code>findSequence([10, 22, 9, 33, 21, 50, 60, 80])</code> should return <code>[10, 22, 33, 50, 60, 80]</code>.</p>","testString":"assert.deepEqual(findSequence([10, 22, 9, 33, 21, 50, 60, 80]), [\n  10,\n  22,\n  33,\n  50,\n  60,\n  80\n]);"},{"text":"<p><code>findSequence([0, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15])</code> should return <code>[0, 2, 6, 9, 11, 15</code>.</p>","testString":"assert.deepEqual(\n  findSequence([0, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]),\n  [0, 2, 6, 9, 11, 15]\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function findSequence(input) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"longest-increasing-subsequence","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/longest-string-challenge","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/longest-common-subsequence","id":"5e6dd139859c290b6ab80292"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/longest-increasing-subsequence"}},
    "staticQueryHashes": ["1800977889","4268002518"]}