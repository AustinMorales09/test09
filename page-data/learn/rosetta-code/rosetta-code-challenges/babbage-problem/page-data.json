{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/babbage-problem",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Babbage problem","description":"<section id=\"description\">\n<p>Charles Babbage, looking ahead to the sorts of problems his Analytical Engine would be able to solve, gave this example:</p>\n<blockquote>\n  What is the smallest positive integer whose square ends in the digits 269,696?\n  <footer style='margin-left: 2em;'>Babbage, letter to Lord Bowden, 1837; see Hollingdale and Tootill, <i>Electronic Computers</i>, second edition, 1970, p. 125.</footer>\n</blockquote>\n<p>He thought the answer might be 99,736, whose square is 9,947,269,696; but he couldn't be certain.</p>\n<p>The task is to find out if Babbage had the right answer.</p>\n</section>","id":"594db4d0dedb4c06a2a4cefd","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Implement a function to return the lowest integer that satisfies the Babbage problem. If Babbage was right, return Babbage's number.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302229,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/babbage-problem","tests":[{"text":"<p><code>babbage</code> should be a function.</p>","testString":"assert(typeof babbage === 'function');"},{"text":"<p><code>babbage(99736, 269696)</code> should not return 99736 (there is a smaller answer).</p>","testString":"assert.equal(babbage(babbageAns, endDigits), answer);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function babbage(babbageNum, endDigits) {\n\n  return true;\n}","head":"","tail":"const babbageAns = 99736;\nconst endDigits = 269696;\nconst answer = 25264;","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"babbage-problem","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/balanced-brackets","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/averagesroot-mean-square","id":"594db4d0dedb4c06a2a4cefd"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/babbage-problem"}},
    "staticQueryHashes": ["1800977889","4268002518"]}