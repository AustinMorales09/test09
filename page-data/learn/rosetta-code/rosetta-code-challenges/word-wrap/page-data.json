{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/word-wrap",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Word wrap","description":"<section id=\"description\">\n<p>Even today, with proportional fonts and complex layouts, there are still cases where you need to wrap text at a specified column. The basic task is to wrap a paragraph of text in a simple way.</p>\n</section>","id":"594810f028c0303b75339ad4","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that can wrap this text to any number of characters. As an example, the text wrapped to 80 characters should look like the following:</p>\n<pre>\nWrap text using a more sophisticated algorithm such as the Knuth and Plass TeX\nalgorithm. If your language provides this, you get easy extra credit, but you\nmust reference documentation indicating that the algorithm is something better\nthan a simple minimum length algorithm.\n</pre>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302344,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/word-wrap","tests":[{"text":"<p>wrap should be a function.</p>","testString":"assert.equal(typeof wrap, 'function');"},{"text":"<p>wrap should return a string.</p>","testString":"assert.equal(typeof wrap('abc', 10), 'string');"},{"text":"<p>wrap(80) should return 4 lines.</p>","testString":"assert(wrapped80.split('\\n').length === 4);"},{"text":"<p>Your <code>wrap</code> function should return our expected text.</p>","testString":"assert.equal(wrapped80.split('\\n')[0], firstRow80);"},{"text":"<p>wrap(42) should return 7 lines.</p>","testString":"assert(wrapped42.split('\\n').length === 7);"},{"text":"<p>Your <code>wrap</code> function should return our expected text.</p>","testString":"assert.equal(wrapped42.split('\\n')[0], firstRow42);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function wrap(text, limit) {\n  return text;\n}","head":"","tail":"const text =\n`Wrap text using a more sophisticated algorithm such as the Knuth and Plass TeX algorithm.\nIf your language provides this, you get easy extra credit,\nbut you ''must reference documentation'' indicating that the algorithm\nis something better than a simple minimum length algorithm.`;\n\nconst wrapped80 = wrap(text, 80);\nconst wrapped42 = wrap(text, 42);\n\nconst firstRow80 =\n    'Wrap text using a more sophisticated algorithm such as the Knuth and Plass TeX';\n\nconst firstRow42 = 'Wrap text using a more sophisticated';","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"word-wrap","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/y-combinator","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/word-frequency","id":"594810f028c0303b75339ad4"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/word-wrap"}},
    "staticQueryHashes": ["1800977889","4268002518"]}