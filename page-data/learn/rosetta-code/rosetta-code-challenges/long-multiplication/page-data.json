{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/long-multiplication",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Long multiplication","description":"<section id=\"description\">\n<p>Explicitly implement long multiplication.</p>\n<p>This is one possible approach to arbitrary-precision integer algebra.</p>\n</section>","id":"5e4ce2a1ac708cc68c1df25d","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes two strings of large numbers as parameters. Your function should return the product of these two large numbers as a string.</p>\n<p><strong>Note:</strong> In JavaScript, arithmetic operations are inaccurate with large numbers, so you will have to implement precise multiplication yourself.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":385269,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/long-multiplication","tests":[{"text":"<p><code>mult</code> should be a function.</p>","testString":"assert(typeof mult == 'function');"},{"text":"<p><code>mult(\"18446744073709551616\", \"18446744073709551616\")</code> should return a string.</p>","testString":"assert(typeof mult('18446744073709551616', '18446744073709551616') == 'string');"},{"text":"<p><code>mult(\"18446744073709551616\", \"18446744073709551616\")</code> should return <code>\"340282366920938463463374607431768211456\"</code>.</p>","testString":"assert.equal(\n  mult('18446744073709551616', '18446744073709551616'),\n  '340282366920938463463374607431768211456'\n);"},{"text":"<p><code>mult(\"31844674073709551616\", \"1844674407309551616\")</code> should return <code>\"58743055272886011737990786529368211456\"</code>.</p>","testString":"assert.equal(\n  mult('31844674073709551616', '1844674407309551616'),\n  '58743055272886011737990786529368211456'\n);"},{"text":"<p><code>mult(\"1846744073709551616\", \"44844644073709551616\")</code> should return <code>\"82816580680737279241781007431768211456\"</code>.</p>","testString":"assert.equal(\n  mult('1846744073709551616', '44844644073709551616'),\n  '82816580680737279241781007431768211456'\n);"},{"text":"<p><code>mult(\"1844674407370951616\", \"1844674407709551616\")</code> should return <code>\"3402823669833978308014392742590611456\"</code>.</p>","testString":"assert.equal(\n  mult('1844674407370951616', '1844674407709551616'),\n  '3402823669833978308014392742590611456'\n);"},{"text":"<p><code>mult(\"2844674407370951616\", \"1844674407370955616\")</code> should return <code>\"5247498076580334548376218009219475456\"</code>.</p>","testString":"assert.equal(\n  mult('2844674407370951616', '1844674407370955616'),\n  '5247498076580334548376218009219475456'\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function mult(strNum1, strNum2) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"long-multiplication","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/longest-common-subsequence","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/linear-congruential-generator","id":"5e4ce2a1ac708cc68c1df25d"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/long-multiplication"}},
    "staticQueryHashes": ["1800977889","4268002518"]}