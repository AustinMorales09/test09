{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/extensible-prime-generator",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Extensible prime generator","description":"<section id=\"description\">\n<p>Write a generator of prime numbers, in order, that will automatically adjust to accommodate the generation of any reasonably high prime.</p>\n<p>The generator should be able to:</p>\n<ul>\n  <li>Show the first <code>n</code> prime numbers</li>\n  <li>Show the prime numbers in a range</li>\n  <li>Show the number of primes in a range</li>\n  <li>Show the <code>n<sup>th</sup></code> prime number</li>\n</ul>\n<p>The function should have two parameters. The first will receive <code>n</code> or the range as an array. The second will receive a boolean, that specifies if the function returns the prime numbers as an array or a single number(the number of primes in the range or the <code>n<sup>th</sup></code> prime). According to the parameters the function should return an array.</p>\n</section>","id":"598ee8b91b410510ae82efef","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302262,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/extensible-prime-generator","tests":[{"text":"<p><code>primeGenerator</code> should be a function.</p>","testString":"assert(typeof primeGenerator === 'function');"},{"text":"<p><code>primeGenerator(20, true)</code> should return <code>[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71]</code>.</p>","testString":"assert.deepEqual(primeGenerator(20, true), [\n  2,\n  3,\n  5,\n  7,\n  11,\n  13,\n  17,\n  19,\n  23,\n  29,\n  31,\n  37,\n  41,\n  43,\n  47,\n  53,\n  59,\n  61,\n  67,\n  71\n]);"},{"text":"<p><code>primeGenerator([100, 150], true)</code> should return <code>[101, 103, 107, 109, 113, 127, 131, 137, 139, 149]</code>.</p>","testString":"assert.deepEqual(primeGenerator([100, 150], true), [\n  101,\n  103,\n  107,\n  109,\n  113,\n  127,\n  131,\n  137,\n  139,\n  149\n]);"},{"text":"<p><code>primeGenerator([7700, 8000], false)</code> should return <code>30</code>.</p>","testString":"assert.equal(primeGenerator([7700, 8000], false), 30);"},{"text":"<p><code>primeGenerator(10000, false)</code> should return <code>104729</code>.</p>","testString":"assert.equal(primeGenerator(10000, false), 104729);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function primeGenerator(num, showPrimes) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"extensible-prime-generator","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/factorial","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/execute-brain","id":"598ee8b91b410510ae82efef"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/extensible-prime-generator"}},
    "staticQueryHashes": ["1800977889","4268002518"]}