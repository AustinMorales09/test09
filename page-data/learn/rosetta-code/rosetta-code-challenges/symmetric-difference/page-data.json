{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/symmetric-difference",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Symmetric difference","description":"<section id=\"description\">\n<p>Given two sets <em>A</em> and <em>B</em>, compute $(A \\setminus B) \\cup (B \\setminus A).$ That is, enumerate the items that are in <em>A</em> or <em>B</em> but not both. This set is called the symmetric difference of <em>A</em> and <em>B</em>. In other words: $(A \\cup B) \\setminus (A \\cap B)$ (the set of items that are in at least one of <em>A</em> or <em>B</em> minus the set of items that are in both <em>A</em> and <em>B</em>).</p>\n<p>Example:</p>\n<p>For sets <code>A = [1, 2, 3]</code>, and <code>B = [1, 3, 4]</code>, the symmetric difference of <em>A</em> and <em>B</em> is <code>[2, 4]</code>.</p>\n</section>","id":"5a23c84252665b21eecc8046","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes two arrays as parameters and returns the symmetric difference. Sort the resultant array before returning it.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":16086,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/symmetric-difference","tests":[{"text":"<p><code>symmetricDifference</code> should be a function.</p>","testString":"assert(typeof symmetricDifference == 'function');"},{"text":"<p><code>symmetricDifference([\"John\", \"Bob\", \"Mary\", \"Serena\"], [\"Jim\", \"Mary\", \"John\", \"Bob\"])</code> should return an array.</p>","testString":"assert(\n  Array.isArray(\n    symmetricDifference(\n      ['John', 'Bob', 'Mary', 'Serena'],\n      ['Jim', 'Mary', 'John', 'Bob']\n    )\n  )\n);"},{"text":"<p><code>symmetricDifference([\"John\", \"Bob\", \"Mary\", \"Serena\"], [\"Jim\", \"Mary\", \"John\", \"Bob\"])</code> should return <code>[\"Jim\", \"Serena\"]</code>.</p>","testString":"assert.deepEqual(\n  symmetricDifference(\n    ['John', 'Bob', 'Mary', 'Serena'],\n    ['Jim', 'Mary', 'John', 'Bob']\n  ),\n  ['Jim', 'Serena']\n);"},{"text":"<p><code>symmetricDifference([1, 2, 3], [3, 4])</code> should return <code>[1, 2, 4]</code>.</p>","testString":"assert.deepEqual(symmetricDifference([1, 2, 3], [3, 4]), [1, 2, 4]);"},{"text":"<p><code>symmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7])</code> should return <code>[1, 2, 5, 7, 8]</code>.</p>","testString":"assert.deepEqual(symmetricDifference([1, 2, 3, 4, 5], [3, 4, 8, 7]), [\n  1,\n  2,\n  5,\n  7,\n  8\n]);"},{"text":"<p><code>symmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9])</code> should return <code>[2, 4, 9]</code>.</p>","testString":"assert.deepEqual(\n  symmetricDifference([1, 2, 3, 4, 5, 6, 7, 8], [1, 3, 5, 6, 7, 8, 9]),\n  [2, 4, 9]\n);"},{"text":"<p><code>symmetricDifference([1, 2, 4, 7, 9], [2, 3, 7, 8, 9])</code> should return <code>[1, 3, 4, 8]</code>.</p>","testString":"assert.deepEqual(symmetricDifference([1, 2, 4, 7, 9], [2, 3, 7, 8, 9]), [\n  1,\n  3,\n  4,\n  8\n]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function symmetricDifference(A, B) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"symmetric-difference","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/taxicab-numbers","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/sutherland-hodgman-polygon-clipping","id":"5a23c84252665b21eecc8046"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/symmetric-difference"}},
    "staticQueryHashes": ["1800977889","4268002518"]}