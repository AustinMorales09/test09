{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/hofstadter-figure-figure-sequences",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Hofstadter Figure-Figure sequences","description":"<section id=\"description\">\n<p>The Hofstadter Figure-Figure sequences $R_n$ and $S_n$ are given by</p>\n<p>$R_1 = 1\\ ;\\ S_1 = 2 \\\\R_n = R_{n-1} + S_{n-1}, \\quad n>1.$</p>\n<p>Specifically, the sequence $R_n$ contains the values</p>\n<pre>1, 3, 7, 12, 18, ...</pre>\n<p>and the sequence $S_n$ contains the values</p>\n<pre>2, 4, 5, 6, 8, ...</pre>\n<p>The sequence $R_n$ is defined by the recurrence relation $R_n = R_{n-1} + S_{n-1}$, while $S_n$ is defined as sequence of positive integers that are not included in the sequence $R_n$.</p>\n</section>","id":"59622f89e4e137560018a40e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Create two functions named <code>ffr</code> and <code>ffs</code> that return <code>R(n)</code> or <code>S(n)</code>, respectively, for any index <code>n</code>. Note that the Hofstadter Figure-Figure sequences are 1-indexed, with $R_1 = 1$ and $S_1 = 2$.</p>\n<p>No maximum value for <code>n</code> should be assumed.</p>\n<p><strong>References</strong></p>\n <p>Rosetta: <a href='https://rosettacode.org/wiki/Hofstadter_Figure-Figure_sequences' target='_blank'>Hofstadter Figure-Figure sequences</a></p>.\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302286,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-figure-figure-sequences","tests":[{"text":"<p><code>ffr</code> should be a function.</p>","testString":"assert(typeof ffr === 'function');"},{"text":"<p><code>ffs</code> should be a function.</p>","testString":"assert(typeof ffs === 'function');"},{"text":"<p><code>ffr</code> should return integer.</p>","testString":"assert(Number.isInteger(ffr(1)));"},{"text":"<p><code>ffs</code> should return integer.</p>","testString":"assert(Number.isInteger(ffs(1)));"},{"text":"<p><code>ffr(10)</code> should return <code>69</code></p>","testString":"assert.equal(ffr(ffrParamRes[0][0]), ffrParamRes[0][1]);"},{"text":"<p><code>ffr(50)</code> should return <code>1509</code></p>","testString":"assert.equal(ffr(ffrParamRes[1][0]), ffrParamRes[1][1]);"},{"text":"<p><code>ffr(100)</code> should return <code>5764</code></p>","testString":"assert.equal(ffr(ffrParamRes[2][0]), ffrParamRes[2][1]);"},{"text":"<p><code>ffr(1000)</code> should return <code>526334</code></p>","testString":"assert.equal(ffr(ffrParamRes[3][0]), ffrParamRes[3][1]);"},{"text":"<p><code>ffs(10)</code> should return <code>14</code></p>","testString":"assert.equal(ffs(ffsParamRes[0][0]), ffsParamRes[0][1]);"},{"text":"<p><code>ffs(50)</code> should return <code>59</code></p>","testString":"assert.equal(ffs(ffsParamRes[1][0]), ffsParamRes[1][1]);"},{"text":"<p><code>ffs(100)</code> should return <code>112</code></p>","testString":"assert.equal(ffs(ffsParamRes[2][0]), ffsParamRes[2][1]);"},{"text":"<p><code>ffs(1000)</code> should return <code>1041</code></p>","testString":"assert.equal(ffs(ffsParamRes[3][0]), ffsParamRes[3][1]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function ffr(n) {\n  return n;\n}\n\nfunction ffs(n) {\n  return n;\n}","head":"","tail":"const ffrParamRes = [[10, 69], [50, 1509], [100, 5764], [1000, 526334]];\nconst ffsParamRes = [[10, 14], [50, 59], [100, 112], [1000, 1041]];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"hofstadter-figure-figure-sequences","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-q-sequence","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/heronian-triangles","id":"59622f89e4e137560018a40e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/hofstadter-figure-figure-sequences"}},
    "staticQueryHashes": ["1800977889","4268002518"]}