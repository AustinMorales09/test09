{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/towers-of-hanoi",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Towers of Hanoi","description":"<section id=\"description\">\n<p>Solve the Towers of Hanoi problem. The number of objects will be given as the first parameter, followed by the strings used to identify each stack of objects. Create a nested array containing the list of moves, <code>[\"source\", \"destination\"]</code>.</p>\n<p>For example, the parameters <code>(4, 'A', 'B', 'C')</code>, will result in nested array of moves <code>[['A', 'C'], ['B', 'A']]</code>, indicating that the 1st move was to move an object from stack <code>A</code> to <code>C</code> and the 2nd move was to move an object from stack <code>B</code> to <code>A</code>.</p>\n</section>","id":"5951ed8945deab770972ae56","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that returns the moves to stack the objects in a nested array.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302341,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/towers-of-hanoi","tests":[{"text":"<p><code>towerOfHanoi</code> should be a function.</p>","testString":"assert(typeof towerOfHanoi === 'function');"},{"text":"<p><code>towerOfHanoi(3, ...)</code> should return 7 moves.</p>","testString":"assert(res3.length === 7);"},{"text":"<p><code>towerOfHanoi(3, 'A', 'B', 'C')</code> should return <code>[['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B']]</code>.</p>","testString":"assert.deepEqual(towerOfHanoi(3, 'A', 'B', 'C'), res3Moves);"},{"text":"<p><code>towerOfHanoi(5, \"X\", \"Y\", \"Z\")</code> 10th move should be Y -> X.</p>","testString":"assert.deepEqual(res5[9], ['Y', 'X']);"},{"text":"<p><code>towerOfHanoi(7, 'A', 'B', 'C')</code> first ten moves should be <code>[['A','B'], ['A','C'], ['B','C'], ['A','B'], ['C','A'], ['C','B'], ['A','B'], ['A','C'], ['B','C'], ['B','A']]</code></p>","testString":"assert.deepEqual(towerOfHanoi(7, 'A', 'B', 'C').slice(0, 10), res7First10Moves);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function towerOfHanoi(n, a, b, c) {\n\n  return [[]];\n}","head":"","tail":"const res3 = towerOfHanoi(3, 'A', 'B', 'C');\nconst res3Moves = [['A', 'B'], ['A', 'C'], ['B', 'C'], ['A', 'B'], ['C', 'A'], ['C', 'B'], ['A', 'B']];\nconst res5 = towerOfHanoi(5, 'X', 'Y', 'Z');\nconst res7First10Moves = [['A', 'B'], ['A', 'C'], ['B', 'C'], ['A', 'B'], ['C', 'A'], ['C', 'B'], ['A', 'B'], ['A', 'C'], ['B', 'C'], ['B', 'A']];","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"towers-of-hanoi","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/vector-cross-product","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/top-rank-per-group","id":"5951ed8945deab770972ae56"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/towers-of-hanoi"}},
    "staticQueryHashes": ["1800977889","4268002518"]}