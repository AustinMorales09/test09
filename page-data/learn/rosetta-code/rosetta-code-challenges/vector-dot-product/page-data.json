{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/vector-dot-product",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Vector dot product","description":"<section id=\"description\">\n<p>A vector can have one or more values represented by an ordered collection. Examples could be (x), (x, y), or (x, y, z).</p>\n</section>","id":"594810f028c0303b75339ad3","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes two vectors (represented as one-dimensional arrays) as input and computes their dot product. Your function should return <code>null</code> on invalid inputs such as vectors of different lengths or passing anything other than two vectors.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302343,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/vector-dot-product","tests":[{"text":"<p><code>dotProduct</code> should be a function.</p>","testString":"assert.equal(typeof dotProduct, 'function');"},{"text":"<p><code>dotProduct()</code> should return <code>null</code>.</p>","testString":"assert.equal(dotProduct(), null);"},{"text":"<p><code>dotProduct([1], [1])</code> should return <code>1</code>.</p>","testString":"assert.equal(dotProduct([1], [1]), 1);"},{"text":"<p><code>dotProduct([1], [1, 2])</code> should return <code>null</code>.</p>","testString":"assert.equal(dotProduct([1], [1, 2]), null);"},{"text":"<p><code>dotProduct([1, 3, -5], [4, -2, -1])</code> should return <code>3</code>.</p>","testString":"assert.equal(dotProduct([1, 3, -5], [4, -2, -1]), 3);"},{"text":"<p><code>dotProduct([3, 2, 1], [2, 4, 2], [5, 3, 1])</code> should return <code>null</code>.</p>","testString":"assert.equal(dotProduct([3, 2, 1], [2, 4, 2], [5, 3, 1]), null);"},{"text":"<p><code>dotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ])</code> should return <code>360</code>.</p>","testString":"assert.equal(dotProduct([ 0, 3, 6, 9, 12 ], [ 0, 4, 8, 12, 16 ]), 360);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function dotProduct(...vectors) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"vector-dot-product","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/word-frequency","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/vector-cross-product","id":"594810f028c0303b75339ad3"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/vector-dot-product"}},
    "staticQueryHashes": ["1800977889","4268002518"]}