{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/straddling-checkerboard",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Straddling checkerboard","description":"<section id=\"description\">\n<p>Implement functions to encrypt and decrypt a message using the <strong>straddling checkerboard</strong> method.</p>\n<p>Each function will take two arguments, a <code>message</code> string and an <code>alphabet</code> array. The <code>alphabet</code> array will contain 3 strings representing the 3 rows of the straddling checkerboard.</p>\n<p>The output of the <code>straddle()</code> function should be a series of decimal digits. Numbers should be encrypted by inserting the escape character before each digit, then including the digit <em>unencrypted</em>.</p>\n<p>This should be reversed for decryption with the <code>unstraddle()</code> function.</p>\n</section>","id":"5a23c84252665b21eecc8029","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302325,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/straddling-checkerboard","tests":[{"text":"<p><code>straddle</code> should be a function.</p>","testString":"assert(typeof straddle == 'function');"},{"text":"<p><code>straddle(\"One night-it was on the twentieth of March, 1888-I was returning.\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ./\"])</code> should return a string.</p>","testString":"assert(\n  typeof straddle(\n    'One night-it was on the twentieth of March, 1888-I was returning.',\n    ['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ./']\n  ) == 'string'\n);"},{"text":"<p><code>straddle(\"One night-it was on the twentieth of March, 1888-I was returning.\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ./\"])</code> should return <code>\"34045747525284613427502840425027537379697175891898898898584619028294547488\"</code>.</p>","testString":"assert.equal(\n  straddle(\n    'One night-it was on the twentieth of March, 1888-I was returning.',\n    ['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ./']\n  ),\n  '34045747525284613427502840425027537379697175891898898898584619028294547488'\n);"},{"text":"<p><code>straddle(\"One night-it was on the twentieth of March, 1888-I was returning\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ./\"])</code> should return <code>\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\"</code>.</p>","testString":"assert.equal(\n  straddle('One night-it was on the twentieth of March, 1888-I was returning', [\n    'HOL MES RT',\n    'ABCDFGIJKN',\n    'PQUVWXYZ./'\n  ]),\n  '139539363509369743061399059745399365901344308320791798798798367430685972839363935'\n);"},{"text":"<p><code>straddle(\"Thecheckerboardcakerecipespecifies3largeeggsand2.25cupsofflour.\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ.\"])</code> should return <code>\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\"</code>.</p>","testString":"assert.equal(\n  straddle('Thecheckerboardcakerecipespecifies3largeeggsand2.25cupsofflour.', [\n    'ET AON RIS',\n    'BCDFGHJKLM',\n    'PQ/UVWXYZ.'\n  ]),\n  '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769'\n);"},{"text":"<p><code>unstraddle</code> should be a function.</p>","testString":"assert(typeof unstraddle == 'function');"},{"text":"<p><code>unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ./\"])</code> should return a string.</p>","testString":"assert(\n  typeof unstraddle(\n    '34045747525284613427502840425027537379697175891898898898584619028294547488',\n    ['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ./']\n  ) == 'string'\n);"},{"text":"<p><code>unstraddle(\"34045747525284613427502840425027537379697175891898898898584619028294547488\",[\"ESTONIA  R\", \"BCDFGHJKLM\", \"PQUVWXYZ./\"])</code> should return <code>\"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING.\"</code>.</p>","testString":"assert.equal(\n  unstraddle(\n    '34045747525284613427502840425027537379697175891898898898584619028294547488',\n    ['ESTONIA  R', 'BCDFGHJKLM', 'PQUVWXYZ./']\n  ),\n  'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING.'\n);"},{"text":"<p><code>unstraddle(\"139539363509369743061399059745399365901344308320791798798798367430685972839363935\",[\"HOL MES RT\", \"ABCDFGIJKN\", \"PQUVWXYZ./\"])</code> should return <code>\"ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING\"</code>.</p>","testString":"assert.equal(\n  unstraddle(\n    '139539363509369743061399059745399365901344308320791798798798367430685972839363935',\n    ['HOL MES RT', 'ABCDFGIJKN', 'PQUVWXYZ./']\n  ),\n  'ONENIGHTITWASONTHETWENTIETHOFMARCH1888IWASRETURNING'\n);"},{"text":"<p><code>unstraddle(\"125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769\",[\"ET AON RIS\", \"BCDFGHJKLM\", \"PQ/UVWXYZ.\"])</code> should return <code>\"THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND2.25CUPSOFFLOUR.\"</code>.</p>","testString":"assert.equal(\n  unstraddle(\n    '125021250212707204372221327070218600960021823809623283724002424935226226962262521636094232328463769',\n    ['ET AON RIS', 'BCDFGHJKLM', 'PQ/UVWXYZ.']\n  ),\n  'THECHECKERBOARDCAKERECIPESPECIFIES3LARGEEGGSAND2.25CUPSOFFLOUR.'\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function straddle(message, alphabet) {\n\n}\n\nfunction unstraddle(message, alphabet) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"straddling-checkerboard","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/stream-merge","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/stern-brocot-sequence","id":"5a23c84252665b21eecc8029"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/straddling-checkerboard"}},
    "staticQueryHashes": ["1800977889","4268002518"]}