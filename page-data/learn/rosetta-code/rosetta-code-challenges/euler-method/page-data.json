{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/euler-method",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Euler method","description":"<section id=\"description\">\n<p>Euler's method numerically approximates solutions of first-order ordinary differential equations (ODEs) with a given initial value. It is an explicit method for solving initial value problems (IVPs), as described in <a href=\"https://www.freecodecamp.org/news/eulers-method-explained-with-examples/\" title=\"Euler's Method Explained with Examples\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">this article</a>.</p>\n<p>The ODE has to be provided in the following form:</p>\n<ul style='list-style: none;'>\n  <li><big>$\\frac{dy(t)}{dt} = f(t,y(t))$</big></li>\n</ul>\n<p>with an initial value</p>\n<ul style='list-style: none;'>\n  <li><big>$y(t_0) = y_0$</big></li>\n</ul>\n<p>To get a numeric solution, we replace the derivative on the LHS with a finite difference approximation:</p>\n<ul style='list-style: none;'>\n  <li><big>$\\frac{dy(t)}{dt}  \\approx \\frac{y(t+h)-y(t)}{h}$</big></li>\n</ul>\n<p>then solve for $y(t+h)$:</p>\n<ul style='list-style: none;'>\n  <li><big>$y(t+h) \\approx y(t) + h \\, \\frac{dy(t)}{dt}$</big></li>\n</ul>\n<p>which is the same as</p>\n<ul style='list-style: none;'>\n  <li><big>$y(t+h) \\approx y(t) + h \\, f(t,y(t))$</big></li>\n</ul>\n<p>The iterative solution rule is then:</p>\n<ul style='list-style: none;'>\n  <li><big>$y_{n+1} = y_n + h \\, f(t_n, y_n)$</big></li>\n</ul>\n<p>where $h$ is the step size, the most relevant parameter for accuracy of the solution. A smaller step size increases accuracy but also the computation cost, so it has always has to be hand-picked according to the problem at hand.</p>\n<p><strong>Example: Newton's Cooling Law</strong></p>\n<p>Newton's cooling law describes how an object of initial temperature $T(t_0) = T_0$ cools down in an environment of temperature $T_R$:</p>\n<ul style='list-style: none;'>\n  <li><big>$\\frac{dT(t)}{dt} = -k \\, \\Delta T$</big></li>\n</ul>\n<p>or</p>\n<ul style='list-style: none;'>\n  <li><big>$\\frac{dT(t)}{dt} = -k \\, (T(t) - T_R)$</big></li>\n</ul>\n<p>It says that the cooling rate $\\frac{dT(t)}{dt}$ of the object is proportional to the current temperature difference $\\Delta T = (T(t) - T_R)$ to the surrounding environment.</p>\n<p>The analytical solution, which we will compare to the numerical approximation, is</p>\n<ul style='list-style: none;'>\n  <li><big>$T(t) = T_R + (T_0 - T_R) \\; e^{-k t}$</big></li>\n</ul>\n</section>","id":"59880443fb36441083c6c20e","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Implement a routine of Euler's method and then use it to solve the given example of Newton's cooling law for three different step sizes of:</p>\n<ul>\n  <li><code>2 s</code></li>\n  <li><code>5 s</code> and</li>\n  <li><code>10 s</code></li>\n</ul>\n<p>and compare with the analytical solution.</p>\n<p><strong>Initial values:</strong></p>\n<ul>\n  <li>initial temperature <big>$T_0$</big> shall be <code>100 °C</code></li>\n  <li>room temperature <big>$T_R$</big> shall be <code>20 °C</code></li>\n  <li>cooling constant <big>$k$</big> shall be <code>0.07</code></li>\n  <li>time interval to calculate shall be from <code>0 s</code> to <code>100 s</code></li>\n</ul>  \n<p>First parameter to the function is initial time, second parameter is initial temperature, third parameter is elapsed time and fourth parameter is step size.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302258,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/euler-method","tests":[{"text":"<p><code>eulersMethod</code> should be a function.</p>","testString":"assert(typeof eulersMethod === 'function');"},{"text":"<p><code>eulersMethod(0, 100, 100, 2)</code> should return a number.</p>","testString":"assert(typeof eulersMethod(0, 100, 100, 2) === 'number');"},{"text":"<p><code>eulersMethod(0, 100, 100, 2)</code> should return 20.0424631833732.</p>","testString":"assert.equal(eulersMethod(0, 100, 100, 2), 20.0424631833732);"},{"text":"<p><code>eulersMethod(0, 100, 100, 5)</code> should return 20.01449963666907.</p>","testString":"assert.equal(eulersMethod(0, 100, 100, 5), 20.01449963666907);"},{"text":"<p><code>eulersMethod(0, 100, 100, 10)</code> should return 20.000472392.</p>","testString":"assert.equal(eulersMethod(0, 100, 100, 10), 20.000472392);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function eulersMethod(x1, y1, x2, h) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"euler-method","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/evaluate-binomial-coefficients","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/ethiopian-multiplication","id":"59880443fb36441083c6c20e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/euler-method"}},
    "staticQueryHashes": ["1800977889","4268002518"]}