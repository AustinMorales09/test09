{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/stream-merge",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Stream Merge","description":"<section id=\"description\">\n<p>Write a function that takes multiple sorted arrays of items, and returns one array of sorted items.</p>\n</section>","id":"5a23c84252665b21eecc802a","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302326,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/stream-merge","tests":[{"text":"<p><code>mergeLists</code> should be a function.</p>","testString":"assert(typeof mergeLists == 'function');"},{"text":"<p><code>mergeLists([[1, 3, 5, 9, 10], [2, 4, 6, 7, 8]])</code> should return an array.</p>","testString":"assert(\n  Array.isArray(\n    mergeLists([\n      [1, 3, 5, 9, 10],\n      [2, 4, 6, 7, 8]\n    ])\n  )\n);"},{"text":"<p><code>mergeLists([[1, 3, 5, 9, 10], [2, 4, 6, 7, 8]])</code> should return <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code>.</p>","testString":"assert.deepEqual(\n  mergeLists([\n    [1, 3, 5, 9, 10],\n    [2, 4, 6, 7, 8]\n  ]),\n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n);"},{"text":"<p><code>mergeLists([[1, 4, 7, 10], [2, 5, 8, 11], [3, 6, 9, 12]])</code> should return <code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]</code>.</p>","testString":"assert.deepEqual(\n  mergeLists([\n    [1, 4, 7, 10],\n    [2, 5, 8, 11],\n    [3, 6, 9, 12]\n  ]),\n  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n);"},{"text":"<p><code>mergeLists([[1, 3, 9, 14, 15, 17, 28], [7, 8, 14, 14, 23, 26, 28, 29, 30], [9, 23, 25, 29]])</code> should return <code>[1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30]</code>.</p>","testString":"assert.deepEqual(\n  mergeLists([\n    [1, 3, 9, 14, 15, 17, 28],\n    [7, 8, 14, 14, 23, 26, 28, 29, 30],\n    [9, 23, 25, 29]\n  ]),\n  [1, 3, 7, 8, 9, 9, 14, 14, 14, 15, 17, 23, 23, 25, 26, 28, 28, 29, 29, 30]\n);"},{"text":"<p><code>mergeLists([[3, 14, 15], [2, 17, 18], [], [2, 3, 5, 7]])</code> should return <code>[2, 2, 3, 3, 5, 7, 14, 15, 17, 18]</code>.</p>","testString":"assert.deepEqual(mergeLists([[3, 14, 15], [2, 17, 18], [], [2, 3, 5, 7]]), [\n  2,\n  2,\n  3,\n  3,\n  5,\n  7,\n  14,\n  15,\n  17,\n  18\n]);"},{"text":"<p><code>mergeLists([[1, 19, 1999], [17, 33, 2999, 3000], [8, 500, 3999]])</code> should return <code>[1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999]</code>.</p>","testString":"assert.deepEqual(\n  mergeLists([\n    [1, 19, 1999],\n    [17, 33, 2999, 3000],\n    [8, 500, 3999]\n  ]),\n  [1, 8, 17, 19, 33, 500, 1999, 2999, 3000, 3999]\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function mergeLists(lists) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"stream-merge","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/strip-control-codes-and-extended-characters-from-a-string","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/straddling-checkerboard","id":"5a23c84252665b21eecc802a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/stream-merge"}},
    "staticQueryHashes": ["1800977889","4268002518"]}