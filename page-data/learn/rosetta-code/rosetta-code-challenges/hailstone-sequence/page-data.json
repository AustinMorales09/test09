{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/hailstone-sequence",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Hailstone sequence","description":"<section id=\"description\">\n<p>The Hailstone sequence of numbers can be generated from a starting positive integer, <code>n</code> by:</p>\n<ul>\n<li>If <code>n</code> is <code>1</code> then the sequence ends</li>\n<li>If <code>n</code> is <code>even</code> then the next <code>n</code> of the sequence <code>= n/2</code></li>\n<li>If <code>n</code> is <code>odd</code> then the next <code>n</code> of the sequence <code>= (3 * n) + 1</code></li>\n</ul>\n<p>The (unproven) Collatz conjecture is that the hailstone sequence for any starting number always terminates.</p>\n<p>The hailstone sequence is also known as hailstone numbers (because the values are usually subject to multiple descents and ascents like hailstones in a cloud), or as the Collatz sequence.</p>\n</section>","id":"595608ff8bcd7a50bd490181","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<ol>\n<li>Create a routine to generate the hailstone sequence for a number</li>\n<li>Your function should return an array with the number less than <code>limit</code> which has the longest hailstone sequence and that sequence's length. (But don't show the actual sequence!)</li>\n</ol>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302279,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/hailstone-sequence","tests":[{"text":"<p><code>hailstoneSequence</code> should be a function.</p>","testString":"assert(typeof hailstoneSequence === 'function');"},{"text":"<p><code>hailstoneSequence(30)</code> should return an array.</p>","testString":"assert(Array.isArray(hailstoneSequence(30)));"},{"text":"<p><code>hailstoneSequence(30)</code> should return <code>[27, 112]</code>.</p>","testString":"assert.deepEqual(hailstoneSequence(30), [27, 112]);"},{"text":"<p><code>hailstoneSequence(50000)</code> should return <code>[35655, 324]</code>.</p>","testString":"assert.deepEqual(hailstoneSequence(50000), [35655, 324]);"},{"text":"<p><code>hailstoneSequence(100000)</code> should return <code>[77031, 351]</code>.</p>","testString":"assert.deepEqual(hailstoneSequence(100000), [77031, 351]);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function hailstoneSequence(limit) {\n  const res = [];\n\n\n  return res;\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"hailstone-sequence","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/happy-numbers","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/greatest-subsequential-sum","id":"595608ff8bcd7a50bd490181"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/hailstone-sequence"}},
    "staticQueryHashes": ["1800977889","4268002518"]}