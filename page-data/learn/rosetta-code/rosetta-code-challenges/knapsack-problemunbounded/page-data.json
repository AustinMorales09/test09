{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/knapsack-problemunbounded",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Knapsack problem/Unbounded","description":"<section id=\"description\">\n<p>A traveler gets diverted and has to make an unscheduled stop in what turns out to be Shangri-La. Opting to leave, he is allowed to take as much as he likes of the items available there, so long as it will fit in his knapsack, and he can carry it.</p>\n<p>He knows that he can carry no more than a particular value of maximum weight in total; and that the capacity of his knapsack has a limited volume.</p>\n<p>Looking just above the bar codes on the items he finds their weights and volumes. He digs out his recent copy of a financial paper and gets the value of each item.</p>\n<p>He can only take whole units of any item, but there is much more of any item than he could ever carry.</p>\n</section>","id":"5a23c84252665b21eecc7ed4","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes an array of objects, maximum weight, and maximum volume as parameters. Each object has 4 attributes: name, value, weight, and volume. The function should return the maximum value of items the traveller can take with him.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":323655,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/knapsack-problemunbounded","tests":[{"text":"<p><code>knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0.3, volume:0.025 }, { name:\"ichor\", value:1800, weight:0.2, volume:0.015 }, { name:\"gold\", value:2500, weight:2, volume:0.002 }], 25, 0.25)</code> should return <code>54500</code>.</p>","testString":"assert.equal(\n  knapsackUnbounded(\n    [\n      { name: 'panacea', value: 3000, weight: 0.3, volume: 0.025 },\n      { name: 'ichor', value: 1800, weight: 0.2, volume: 0.015 },\n      { name: 'gold', value: 2500, weight: 2, volume: 0.002 }\n    ],\n    25,\n    0.25\n  ),\n  54500\n);"},{"text":"<p><code>knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0.3, volume:0.025 }, { name:\"ichor\", value:1800, weight:0.2, volume:0.015 }, { name:\"gold\", value:2500, weight:2, volume:0.002 }], 55, 0.25)</code> should return <code>88400</code>.</p>","testString":"assert.equal(\n  knapsackUnbounded(\n    [\n      { name: 'panacea', value: 3000, weight: 0.3, volume: 0.025 },\n      { name: 'ichor', value: 1800, weight: 0.2, volume: 0.015 },\n      { name: 'gold', value: 2500, weight: 2, volume: 0.002 }\n    ],\n    55,\n    0.25\n  ),\n  88400\n);"},{"text":"<p><code>knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0.3, volume:0.025 }, { name:\"ichor\", value:1800, weight:0.2, volume:0.015 }, { name:\"gold\", value:2500, weight:2, volume:0.002 }], 25, 0.15)</code> should return <code>42500</code>.</p>","testString":"assert.equal(\n  knapsackUnbounded(\n    [\n      { name: 'panacea', value: 3000, weight: 0.3, volume: 0.025 },\n      { name: 'ichor', value: 1800, weight: 0.2, volume: 0.015 },\n      { name: 'gold', value: 2500, weight: 2, volume: 0.002 }\n    ],\n    25,\n    0.15\n  ),\n  42500\n);"},{"text":"<p><code>knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0.3, volume:0.025 }, { name:\"ichor\", value:1800, weight:0.2, volume:0.015 }, { name:\"gold\", value:2500, weight:2, volume:0.002 }], 35, 0.35)</code> should return <code>75900</code>.</p>","testString":"assert.equal(\n  knapsackUnbounded(\n    [\n      { name: 'panacea', value: 3000, weight: 0.3, volume: 0.025 },\n      { name: 'ichor', value: 1800, weight: 0.2, volume: 0.015 },\n      { name: 'gold', value: 2500, weight: 2, volume: 0.002 }\n    ],\n    35,\n    0.35\n  ),\n  75900\n);"},{"text":"<p><code>knapsackUnbounded([{ name:\"panacea\", value:3000, weight:0.3, volume:0.025 }, { name:\"ichor\", value:1800, weight:0.2, volume:0.015 }, { name:\"gold\", value:2500, weight:2, volume:0.002 }], 15, 0.25)</code> should return <code>43200</code>.</p>","testString":"assert.equal(\n  knapsackUnbounded(\n    [\n      { name: 'panacea', value: 3000, weight: 0.3, volume: 0.025 },\n      { name: 'ichor', value: 1800, weight: 0.2, volume: 0.015 },\n      { name: 'gold', value: 2500, weight: 2, volume: 0.002 }\n    ],\n    15,\n    0.25\n  ),\n  43200\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function knapsackUnbounded(items, maxweight, maxvolume) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"knapsack-problemunbounded","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/knights-tour","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/knapsack-problemcontinuous","id":"5a23c84252665b21eecc7ed4"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/knapsack-problemunbounded"}},
    "staticQueryHashes": ["1800977889","4268002518"]}