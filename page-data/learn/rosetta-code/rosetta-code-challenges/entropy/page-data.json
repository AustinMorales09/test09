{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/entropy",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Entropy","description":"<section id=\"description\">\n<p>Calculate the Shannon entropy H of a given input string.</p>\n<p>Given the discrete random variable $X$ that is a string of $N$ \"symbols\" (total characters) consisting of $n$ different characters (n=2 for binary), the Shannon entropy of X in bits/symbol is:</p>\n<p>$H_2(X) = -\\sum_{i=1}^n \\frac{count_i}{N} \\log_2 \\left(\\frac{count_i}{N}\\right)$</p>\n<p>where $count_i$ is the count of character $n_i$.</p>\n</section>","id":"599d15309e88c813a40baf58","hasEditableBoundaries":false,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302254,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/entropy","tests":[{"text":"<p><code>entropy</code> should be a function.</p>","testString":"assert(typeof entropy === 'function');"},{"text":"<p><code>entropy(\"0\")</code> should return <code>0</code></p>","testString":"assert.equal(entropy('0'), 0);"},{"text":"<p><code>entropy(\"01\")</code> should return <code>1</code></p>","testString":"assert.equal(entropy('01'), 1);"},{"text":"<p><code>entropy(\"0123\")</code> should return <code>2</code></p>","testString":"assert.equal(entropy('0123'), 2);"},{"text":"<p><code>entropy(\"01234567\")</code> should return <code>3</code></p>","testString":"assert.equal(entropy('01234567'), 3);"},{"text":"<p><code>entropy(\"0123456789abcdef\")</code> should return <code>4</code></p>","testString":"assert.equal(entropy('0123456789abcdef'), 4);"},{"text":"<p><code>entropy(\"1223334444\")</code> should return <code>1.8464393446710154</code></p>","testString":"assert.equal(entropy('1223334444'), 1.8464393446710154);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function entropy(s) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"entropy","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/equilibrium-index","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/emirp-primes","id":"599d15309e88c813a40baf58"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/entropy"}},
    "staticQueryHashes": ["1800977889","4268002518"]}