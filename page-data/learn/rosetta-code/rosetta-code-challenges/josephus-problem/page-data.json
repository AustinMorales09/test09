{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/josephus-problem",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"Josephus problem","description":"<section id=\"description\">\n<p>Josephus problem is a math puzzle with a grim description: $n$ prisoners are standing on a circle, sequentially numbered from $0$ to $n-1$.</p>\n<p>An executioner walks along the circle, starting from prisoner $0$, removing every $k$-th prisoner and killing him.</p>\n<p>As the process goes on, the circle becomes smaller and smaller, until only one prisoner remains, who is then freed.</p>\n<p>For example, if there are $n=5$ prisoners and $k=2$, the order the prisoners are killed in (let's call it the \"killing sequence\") will be 1, 3, 0, and 4, and the survivor will be #2.</p>\n<p>Given any $n, k > 0$, find out which prisoner will be the final survivor.</p>\n<p>In one such incident, there were 41 prisoners and every 3<sup>rd</sup> prisoner was being killed ($k=3$).</p>\n<p>Among them was a clever chap name Josephus who worked out the problem, stood at the surviving position, and lived on to tell the tale.</p>\n<p>Which number was he?</p>\n</section>","id":"5a23c84252665b21eecc7ec5","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Write a function that takes the initial number of prisoners and <code>k</code> as parameters and returns the number of the prisoner that survives.</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":302294,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/josephus-problem","tests":[{"text":"<p><code>josephus</code> should be a function.</p>","testString":"assert(typeof josephus == 'function');"},{"text":"<p><code>josephus(30,3)</code> should return a number.</p>","testString":"assert(typeof josephus(30, 3) == 'number');"},{"text":"<p><code>josephus(30,3)</code> should return <code>28</code>.</p>","testString":"assert.equal(josephus(30, 3), 28);"},{"text":"<p><code>josephus(30,5)</code> should return <code>2</code>.</p>","testString":"assert.equal(josephus(30, 5), 2);"},{"text":"<p><code>josephus(20,2)</code> should return <code>8</code>.</p>","testString":"assert.equal(josephus(20, 2), 8);"},{"text":"<p><code>josephus(17,6)</code> should return <code>1</code>.</p>","testString":"assert.equal(josephus(17, 6), 1);"},{"text":"<p><code>josephus(29,4)</code> should return <code>1</code>.</p>","testString":"assert.equal(josephus(29, 4), 1);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function josephus(init, kill) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"josephus-problem","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/k-d-tree","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/jortsort","id":"5a23c84252665b21eecc7ec5"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/josephus-problem"}},
    "staticQueryHashes": ["1800977889","4268002518"]}