{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/rosetta-code/rosetta-code-challenges/sha-256",
    "result": {"data":{"challengeNode":{"challenge":{"block":"rosetta-code-challenges","title":"SHA-256","description":"<section id=\"description\">\n<p>The <code>SHA-2</code> family is a stronger alternative to <code>SHA-1</code>. The main difference between them is the length of the hash.\nMeaning <code>SHA-1</code> provides a shorter code with fewer possibilities for unique combinations. <code>SHA-2</code> or <code>SHA-256</code> creates a longer and thus more complex hash with more possibilities.</p>\n</section>","id":"5eb3e4c3a894c333d2811a3f","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>Research implementation details and write a function that takes a string as the parameter and returns a hash using <code>SHA-256</code></p>\n</section>","notes":null,"challengeType":1,"helpCategory":"Rosetta","videoUrl":null,"superBlock":"rosetta-code","translationPending":false,"forumTopicId":385328,"fields":{"blockName":"rosetta-code-challenges","slug":"/learn/rosetta-code/rosetta-code-challenges/sha-256","tests":[{"text":"<p><code>SHA256</code> should be a function.</p>","testString":"assert(typeof SHA256 === 'function');"},{"text":"<p><code>SHA256(\"Rosetta code\")</code> should return a string.</p>","testString":"assert(typeof SHA256('Rosetta code') === 'string');"},{"text":"<p><code>SHA256(\"Rosetta code\")</code> should return <code>\"764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf\"</code>.</p>","testString":"assert.equal(\n  SHA256('Rosetta code'),\n  '764faf5c61ac315f1497f9dfa542713965b785e5cc2f707d6468d7d1124cdfcf'\n);"},{"text":"<p><code>SHA256(\"SHA-256 Hash\")</code> should return <code>\"bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e\"</code>.</p>","testString":"assert.equal(\n  SHA256('SHA-256 Hash'),\n  'bee8c0cabdcf8c7835f40217dd35a8b0dba9134520e633f1c57285f35ca7ee3e'\n);"},{"text":"<p><code>SHA256(\"implementation\")</code> should return <code>\"da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171\"</code>.</p>","testString":"assert.equal(\n  SHA256('implementation'),\n  'da31012c40330e7e21538e7dd57503b16e8a0839159e96137090cccc9910b171'\n);"},{"text":"<p><code>SHA256(\"algorithm\")</code> should return <code>\"b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14\"</code>.</p>","testString":"assert.equal(\n  SHA256('algorithm'),\n  'b1eb2ec8ac9f31ff7918231e67f96e6deda83a9ff33ed2c67443f1df81e5ed14'\n);"},{"text":"<p><code>SHA256(\"language\")</code> should return <code>\"a4ef304ba42a200bafd78b046e0869af9183f6eee5524aead5dcb3a5ab5f8f3f\"</code>.</p>","testString":"assert.equal(\n  SHA256('language'),\n  'a4ef304ba42a200bafd78b046e0869af9183f6eee5524aead5dcb3a5ab5f8f3f'\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function SHA256(input) {\n\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/rosetta-code/#rosetta-code-challenges","dashedName":"sha-256","certification":"rosetta-code","disableLoopProtectTests":true,"disableLoopProtectPreview":false,"superBlock":"rosetta-code","block":"rosetta-code-challenges","isFirstStep":false,"template":null,"required":[],"nextBlock":"rosetta-code-challenges","nextChallengePath":"/learn/rosetta-code/rosetta-code-challenges/sort-an-array-of-composite-structures","prevChallengePath":"/learn/rosetta-code/rosetta-code-challenges/sha-1","id":"5eb3e4c3a894c333d2811a3f"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function ZigZagMatrix(n) {\n  const mtx = [];\n  for (let i = 0; i < n; i++) {\n    mtx[i] = [];\n  }\n\n  let i = 1;\n  let j = 1;\n  for (let e = 0; e < n * n; e++) {\n    mtx[i - 1][j - 1] = e;\n    if ((i + j) % 2 === 0) {\n      // Even stripes\n      if (j < n) j++;\n      else i += 2;\n      if (i > 1) i--;\n    } else {\n      // Odd stripes\n      if (i < n) i++;\n      else j += 2;\n      if (j > 1) j--;\n    }\n  }\n  return mtx;\n}","head":"","tail":"const zm1 = [[0]];\nconst zm2 = [[0, 1], [2, 3]];\nconst zm5 = [\n  [0, 1, 5, 6, 14],\n  [2, 4, 7, 13, 15],\n  [3, 8, 12, 16, 21],\n  [9, 11, 17, 20, 22],\n  [10, 18, 19, 23, 24]\n];","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/rosetta-code/rosetta-code-challenges/sha-256"}},
    "staticQueryHashes": ["1800977889","4268002518"]}