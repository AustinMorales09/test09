{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-localstorage-by-building-a-todo-app/step-65",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-localstorage-by-building-a-todo-app","title":"Step 65","description":"<section id=\"description\">\n<p>If you try to add a new task, edit that task, and then click on the <code>Add New Task</code> button, you will notice a bug.</p>\n<p>The form button will display the incorrect text of <code>\"Update Task\"</code> instead of <code>\"Add Task\"</code>. To fix this, you will need to assign the string <code>\"Add Task\"</code> to <code>addOrUpdateTaskBtn.innerText</code> inside your <code>reset</code> function.</p>\n<p>With that, you've completed this project.</p>\n</section>","id":"6632420f81f3cc554a5e540b","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-localstorage-by-building-a-todo-app","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-localstorage-by-building-a-todo-app/step-65","tests":[{"text":"<p>You should assign the string <code>\"Add Task\"</code> to <code>addOrUpdateTaskBtn.innerText</code>.</p>","testString":"assert.match(code, /addOrUpdateTaskBtn\\.innerText\\s*=\\s*('|\")Add Task\\1\\s*/)"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Learn localStorage by Building a Todo App</title>\n  <link rel=\"stylesheet\" href=\"styles.css\" />\n</head>\n\n<body>\n  <main>\n    <h1>Todo App</h1>\n    <div class=\"todo-app\">\n      <button id=\"open-task-form-btn\" class=\"btn large-btn\">\n        Add New Task\n      </button>\n      <form class=\"task-form hidden\" id=\"task-form\">\n        <div class=\"task-form-header\">\n          <button id=\"close-task-form-btn\" class=\"close-task-form-btn\" type=\"button\" aria-label=\"close\">\n            <svg class=\"close-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#F44336\" d=\"M21.5 4.5H26.501V43.5H21.5z\" transform=\"rotate(45.001 24 24)\" /><path fill=\"#F44336\" d=\"M21.5 4.5H26.5V43.501H21.5z\" transform=\"rotate(135.008 24 24)\" /></svg>\n          </button>\n        </div>\n        <div class=\"task-form-body\">\n          <label class=\"task-form-label\" for=\"title-input\">Title</label>\n          <input required type=\"text\" class=\"form-control\" id=\"title-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"date-input\">Date</label>\n          <input type=\"date\" class=\"form-control\" id=\"date-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"description-input\">Description</label>\n          <textarea class=\"form-control\" id=\"description-input\" cols=\"30\" rows=\"5\"></textarea>\n        </div>\n        <div class=\"task-form-footer\">\n          <button id=\"add-or-update-task-btn\" class=\"btn large-btn\" type=\"submit\">\n            Add Task\n          </button>\n        </div>\n      </form>\n      <dialog id=\"confirm-close-dialog\">\n        <form method=\"dialog\">\n          <p class=\"discard-message-text\">Discard unsaved changes?</p>\n          <div class=\"confirm-close-dialog-btn-container\">\n            <button id=\"cancel-btn\" class=\"btn\">\n              Cancel\n            </button>\n            <button id=\"discard-btn\" class=\"btn\">\n              Discard\n            </button>\n          </div>\n        </form>\n      </dialog>\n      <div id=\"tasks-container\"></div>\n    </div>\n  </main>\n  <script src=\"script.js\"></script>\n</body>\n\n</html>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":":root {\n  --white: #fff;\n  --light-grey: #f5f6f7;\n  --dark-grey: #0a0a23;\n  --yellow: #f1be32;\n  --golden-yellow: #feac32;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: var(--light-grey);\n  margin: 20px 0 40px 0;\n}\n\n.todo-app {\n  background-color: var(--white);\n  width: 300px;\n  height: 350px;\n  border: 5px solid var(--yellow);\n  border-radius: 8px;\n  padding: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.btn {\n  cursor: pointer;\n  width: 100px;\n  margin: 10px;\n  color: var(--dark-grey);\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(#ffcc4c, #f89808);\n}\n\n.large-btn {\n  width: 80%;\n  font-size: 1.2rem;\n  align-self: center;\n  justify-self: center;\n}\n\n.close-task-form-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 20px;\n  height: 20px;\n}\n\n.task-form {\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--white);\n  border-radius: 5px;\n  padding: 15px;\n  width: 300px;\n  height: 350px;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n.task-form-header {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.task-form-body {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.task-form-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.task-form-label,\n#title-input,\n#date-input,\n#description-input {\n  display: block;\n}\n\n.task-form-label {\n  margin-bottom: 5px;\n  font-size: 1.3rem;\n  font-weight: bold;\n}\n\n#title-input,\n#date-input,\n#description-input {\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 2px;\n}\n\n#confirm-close-dialog {\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 15px;\n}\n\n.confirm-close-dialog-btn-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.discard-message-text {\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n#tasks-container {\n  height: 100%;\n  overflow-y: auto;\n}\n\n.task {\n  margin: 5px 0;\n}\n\n.hidden {\n  display: none;\n}\n\n@media (min-width: 576px) {\n  .todo-app,\n  .task-form {\n    width: 400px;\n    height: 450px;\n  }\n\n  .task-form-label {\n    font-size: 1.5rem;\n  }\n\n  #title-input,\n  #date-input {\n    height: 2rem;\n  }\n\n  #title-input,\n  #date-input,\n  #description-input {\n    padding: 5px;\n    margin-bottom: 20px;\n  }\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]},{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const taskForm = document.getElementById(\"task-form\");\nconst confirmCloseDialog = document.getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document.getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document.getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document.getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document.getElementById(\"cancel-btn\");\nconst discardBtn = document.getElementById(\"discard-btn\");\nconst tasksContainer = document.getElementById(\"tasks-container\");\nconst titleInput = document.getElementById(\"title-input\");\nconst dateInput = document.getElementById(\"date-input\");\nconst descriptionInput = document.getElementById(\"description-input\");\n\nconst taskData = JSON.parse(localStorage.getItem(\"data\")) || [];\nlet currentTask = {};\n\nconst addOrUpdateTask = () => {\n  const dataArrIndex = taskData.findIndex((item) => item.id === currentTask.id);\n  const taskObj = {\n    id: `${titleInput.value.toLowerCase().split(\" \").join(\"-\")}-${Date.now()}`,\n    title: titleInput.value,\n    date: dateInput.value,\n    description: descriptionInput.value,\n  };\n\n  if (dataArrIndex === -1) {\n    taskData.unshift(taskObj);\n  } else {\n    taskData[dataArrIndex] = taskObj;\n  }\n\n  localStorage.setItem(\"data\", JSON.stringify(taskData));\n  updateTaskContainer()\n  reset()\n};\n\nconst updateTaskContainer = () => {\n  tasksContainer.innerHTML = \"\";\n\n  taskData.forEach(\n    ({ id, title, date, description }) => {\n        (tasksContainer.innerHTML += `\n        <div class=\"task\" id=\"${id}\">\n          <p><strong>Title:</strong> ${title}</p>\n          <p><strong>Date:</strong> ${date}</p>\n          <p><strong>Description:</strong> ${description}</p>\n          <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n          <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> \n        </div>\n      `)\n    }\n  );\n};\n\n\nconst deleteTask = (buttonEl) => {\n  const dataArrIndex = taskData.findIndex(\n    (item) => item.id === buttonEl.parentElement.id\n  );\n\n  buttonEl.parentElement.remove();\n  taskData.splice(dataArrIndex, 1);\n  localStorage.setItem(\"data\", JSON.stringify(taskData));\n}\n\nconst editTask = (buttonEl) => {\n    const dataArrIndex = taskData.findIndex(\n    (item) => item.id === buttonEl.parentElement.id\n  );\n\n  currentTask = taskData[dataArrIndex];\n\n  titleInput.value = currentTask.title;\n  dateInput.value = currentTask.date;\n  descriptionInput.value = currentTask.description;\n\n  addOrUpdateTaskBtn.innerText = \"Update Task\";\n\n  taskForm.classList.toggle(\"hidden\");  \n}\n\nconst reset = () => {\n\n  titleInput.value = \"\";\n  dateInput.value = \"\";\n  descriptionInput.value = \"\";\n  taskForm.classList.toggle(\"hidden\");\n  currentTask = {};\n}\n\nif (taskData.length) {\n  updateTaskContainer();\n}\n\nopenTaskFormBtn.addEventListener(\"click\", () =>\n  taskForm.classList.toggle(\"hidden\")\n);\n\ncloseTaskFormBtn.addEventListener(\"click\", () => {\n  const formInputsContainValues = titleInput.value || dateInput.value || descriptionInput.value;\n  const formInputValuesUpdated = titleInput.value !== currentTask.title || dateInput.value !== currentTask.date || descriptionInput.value !== currentTask.description;\n\n  if (formInputsContainValues && formInputValuesUpdated) {\n    confirmCloseDialog.showModal();\n  } else {\n    reset();\n  }\n});\n\ncancelBtn.addEventListener(\"click\", () => confirmCloseDialog.close());\n\ndiscardBtn.addEventListener(\"click\", () => {\n  confirmCloseDialog.close();\n  reset()\n});\n\ntaskForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  addOrUpdateTask();\n});","head":"","tail":"","editableRegionBoundaries":[81,83],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-localstorage-by-building-a-todo-app","dashedName":"step-65","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-localstorage-by-building-a-todo-app","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-recursion-by-building-a-decimal-to-binary-converter","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-1","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-localstorage-by-building-a-todo-app/step-64","id":"6632420f81f3cc554a5e540b"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Learn localStorage by Building a Todo App</title>\n  <link rel=\"stylesheet\" href=\"styles.css\" />\n</head>\n\n<body>\n  <main>\n    <h1>Todo App</h1>\n    <div class=\"todo-app\">\n      <button id=\"open-task-form-btn\" class=\"btn large-btn\">\n        Add New Task\n      </button>\n      <form class=\"task-form hidden\" id=\"task-form\">\n        <div class=\"task-form-header\">\n          <button id=\"close-task-form-btn\" class=\"close-task-form-btn\" type=\"button\" aria-label=\"close\">\n            <svg class=\"close-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#F44336\" d=\"M21.5 4.5H26.501V43.5H21.5z\" transform=\"rotate(45.001 24 24)\" /><path fill=\"#F44336\" d=\"M21.5 4.5H26.5V43.501H21.5z\" transform=\"rotate(135.008 24 24)\" /></svg>\n          </button>\n        </div>\n        <div class=\"task-form-body\">\n          <label class=\"task-form-label\" for=\"title-input\">Title</label>\n          <input required type=\"text\" class=\"form-control\" id=\"title-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"date-input\">Date</label>\n          <input type=\"date\" class=\"form-control\" id=\"date-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"description-input\">Description</label>\n          <textarea class=\"form-control\" id=\"description-input\" cols=\"30\" rows=\"5\"></textarea>\n        </div>\n        <div class=\"task-form-footer\">\n          <button id=\"add-or-update-task-btn\" class=\"btn large-btn\" type=\"submit\">\n            Add Task\n          </button>\n        </div>\n      </form>\n      <dialog id=\"confirm-close-dialog\">\n        <form method=\"dialog\">\n          <p class=\"discard-message-text\">Discard unsaved changes?</p>\n          <div class=\"confirm-close-dialog-btn-container\">\n            <button id=\"cancel-btn\" class=\"btn\">\n              Cancel\n            </button>\n            <button id=\"discard-btn\" class=\"btn\">\n              Discard\n            </button>\n          </div>\n        </form>\n      </dialog>\n      <div id=\"tasks-container\"></div>\n    </div>\n  </main>\n  <script src=\"script.js\"></script>\n</body>\n\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":":root {\n  --white: #fff;\n  --light-grey: #f5f6f7;\n  --dark-grey: #0a0a23;\n  --yellow: #f1be32;\n  --golden-yellow: #feac32;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: var(--light-grey);\n  margin: 20px 0 40px 0;\n}\n\n.todo-app {\n  background-color: var(--white);\n  width: 300px;\n  height: 350px;\n  border: 5px solid var(--yellow);\n  border-radius: 8px;\n  padding: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.btn {\n  cursor: pointer;\n  width: 100px;\n  margin: 10px;\n  color: var(--dark-grey);\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(#ffcc4c, #f89808);\n}\n\n.large-btn {\n  width: 80%;\n  font-size: 1.2rem;\n  align-self: center;\n  justify-self: center;\n}\n\n.close-task-form-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 20px;\n  height: 20px;\n}\n\n.task-form {\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--white);\n  border-radius: 5px;\n  padding: 15px;\n  width: 300px;\n  height: 350px;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n.task-form-header {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.task-form-body {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.task-form-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.task-form-label,\n#title-input,\n#date-input,\n#description-input {\n  display: block;\n}\n\n.task-form-label {\n  margin-bottom: 5px;\n  font-size: 1.3rem;\n  font-weight: bold;\n}\n\n#title-input,\n#date-input,\n#description-input {\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 2px;\n}\n\n#confirm-close-dialog {\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 15px;\n}\n\n.confirm-close-dialog-btn-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.discard-message-text {\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n#tasks-container {\n  height: 100%;\n  overflow-y: auto;\n}\n\n.task {\n  margin: 5px 0;\n}\n\n.hidden {\n  display: none;\n}\n\n@media (min-width: 576px) {\n  .todo-app,\n  .task-form {\n    width: 400px;\n    height: 450px;\n  }\n\n  .task-form-label {\n    font-size: 1.5rem;\n  }\n\n  #title-input,\n  #date-input {\n    height: 2rem;\n  }\n\n  #title-input,\n  #date-input,\n  #description-input {\n    padding: 5px;\n    margin-bottom: 20px;\n  }\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"},{"name":"script","ext":"js","contents":"const taskForm = document.getElementById(\"task-form\");\nconst confirmCloseDialog = document.getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document.getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document.getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document.getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document.getElementById(\"cancel-btn\");\nconst discardBtn = document.getElementById(\"discard-btn\");\nconst tasksContainer = document.getElementById(\"tasks-container\");\nconst titleInput = document.getElementById(\"title-input\");\nconst dateInput = document.getElementById(\"date-input\");\nconst descriptionInput = document.getElementById(\"description-input\");\n\nconst taskData = JSON.parse(localStorage.getItem(\"data\")) || [];\nlet currentTask = {};\n\nconst addOrUpdateTask = () => {\n  const dataArrIndex = taskData.findIndex((item) => item.id === currentTask.id);\n  const taskObj = {\n    id: `${titleInput.value.toLowerCase().split(\" \").join(\"-\")}-${Date.now()}`,\n    title: titleInput.value,\n    date: dateInput.value,\n    description: descriptionInput.value,\n  };\n\n  if (dataArrIndex === -1) {\n    taskData.unshift(taskObj);\n  } else {\n    taskData[dataArrIndex] = taskObj;\n  }\n\n  localStorage.setItem(\"data\", JSON.stringify(taskData));\n  updateTaskContainer()\n  reset()\n};\n\nconst updateTaskContainer = () => {\n  tasksContainer.innerHTML = \"\";\n\n  taskData.forEach(\n    ({ id, title, date, description }) => {\n        (tasksContainer.innerHTML += `\n        <div class=\"task\" id=\"${id}\">\n          <p><strong>Title:</strong> ${title}</p>\n          <p><strong>Date:</strong> ${date}</p>\n          <p><strong>Description:</strong> ${description}</p>\n          <button onclick=\"editTask(this)\" type=\"button\" class=\"btn\">Edit</button>\n          <button onclick=\"deleteTask(this)\" type=\"button\" class=\"btn\">Delete</button> \n        </div>\n      `)\n    }\n  );\n};\n\n\nconst deleteTask = (buttonEl) => {\n  const dataArrIndex = taskData.findIndex(\n    (item) => item.id === buttonEl.parentElement.id\n  );\n\n  buttonEl.parentElement.remove();\n  taskData.splice(dataArrIndex, 1);\n  localStorage.setItem(\"data\", JSON.stringify(taskData));\n}\n\nconst editTask = (buttonEl) => {\n    const dataArrIndex = taskData.findIndex(\n    (item) => item.id === buttonEl.parentElement.id\n  );\n\n  currentTask = taskData[dataArrIndex];\n\n  titleInput.value = currentTask.title;\n  dateInput.value = currentTask.date;\n  descriptionInput.value = currentTask.description;\n\n  addOrUpdateTaskBtn.innerText = \"Update Task\";\n  \n\n  taskForm.classList.toggle(\"hidden\");  \n}\n\nconst reset = () => {\n  addOrUpdateTaskBtn.innerText = \"Add Task\";\n  titleInput.value = \"\";\n  dateInput.value = \"\";\n  descriptionInput.value = \"\";\n  taskForm.classList.toggle(\"hidden\");\n  currentTask = {};\n}\n\nif (taskData.length) {\n  updateTaskContainer();\n}\n\nopenTaskFormBtn.addEventListener(\"click\", () =>\n  taskForm.classList.toggle(\"hidden\")\n);\n\ncloseTaskFormBtn.addEventListener(\"click\", () => {\n  const formInputsContainValues = titleInput.value || dateInput.value || descriptionInput.value;\n  const formInputValuesUpdated = titleInput.value !== currentTask.title || dateInput.value !== currentTask.date || descriptionInput.value !== currentTask.description;\n\n  if (formInputsContainValues && formInputValuesUpdated) {\n    confirmCloseDialog.showModal();\n  } else {\n    reset();\n  }\n});\n\ncancelBtn.addEventListener(\"click\", () => confirmCloseDialog.close());\n\ndiscardBtn.addEventListener(\"click\", () => {\n  confirmCloseDialog.close();\n  reset()\n});\n\ntaskForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n\n  addOrUpdateTask();\n});","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-localstorage-by-building-a-todo-app/step-65"}},
    "staticQueryHashes": ["1800977889","4268002518"]}