{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-72",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-recursion-by-building-a-decimal-to-binary-converter","title":"Step 72","description":"<section id=\"description\">\n<p>This mostly works â€“ if you convert <code>0</code> into binary, <code>0</code> is displayed on the page. But now when you convert other numbers greater than <code>0</code>, your binary number starts with a leading <code>0</code>. For example, if you convert <code>1</code>, the result is <code>01</code>.</p>\n<p>But if you think about it, <code>0</code> and <code>1</code> in base-10 always convert to <code>0</code> and <code>1</code> in base-2, respectively. So you can add another base case to handle when <code>input</code> is <code>1</code>.</p>\n<p>Add an <code>else if</code> statement to your function that checks if <code>input</code> is equal to <code>1</code>. If it is, return the string <code>\"1\"</code>.</p>\n</section>","id":"646203cdc054d012b5d71428","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-recursion-by-building-a-decimal-to-binary-converter","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-72","tests":[{"text":"<p>You should add an <code>else if</code> statement to your <code>decimalToBinary()</code> function.</p>","testString":"assert.match(String(decimalToBinary), /if\\s*\\(\\s*input\\s*===?\\s*0\\s*\\)[\\s\\S]+else\\s+if\\s*\\(/);"},{"text":"<p>For the condition of your <code>else if</code> statement, you should check if <code>input</code> is equal to <code>1</code>.</p>","testString":"assert.match(String(decimalToBinary), /else\\s+if\\s*\\(\\s*input\\s*===?\\s*1\\s*\\)/);"},{"text":"<p>You should return the string <code>\"1\"</code> if <code>input</code> is equal to <code>1</code>.</p>","testString":"assert.match(String(decimalToBinary), /else\\s+if\\s*\\(\\s*input\\s*===?\\s*1\\s*\\)\\s*\\{?\\s*return\\s*('|\"|`)1\\1\\s*;?\\s*\\}?\\s*else\\s*\\{/);"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Decimal to Binary Converter</title>\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n  <body>\n    <h1>Decimal to Binary Converter</h1>\n    <div class=\"input-container\">\n      <label for=\"number-input\">Enter a decimal number:</label>\n      <input\n        value=\"\"\n        type=\"number\"\n        name=\"decimal number input\"\n        id=\"number-input\"\n        class=\"number-input\"\n      />\n      <button class=\"convert-btn\" id=\"convert-btn\">Convert</button>\n    </div>\n    <output id=\"result\" for=\"number-input\"></output>\n    <div id=\"animation-container\"></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  --light-grey: #f5f6f7;\n  --dark-blue: #1b1b32;\n  --orange: #f1be32;\n}\n\nbody {\n  background-color: var(--dark-blue);\n  font-family: \"Times New Roman\", Times, serif;\n  font-size: 18px;\n  color: var(--light-grey);\n  padding: 0 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  text-align: center;\n  font-size: 2.3rem;\n  margin: 20px 0;\n}\n\n.input-container {\n  margin: 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n}\n\n.convert-btn {\n  background-color: var(--orange);\n  cursor: pointer;\n  border: none;\n  padding: 4px;\n}\n\n.number-input {\n  height: 25px;\n}\n\n#result {\n  margin: 10px 0;\n  min-width: 200px;\n  width: fit-content;\n  min-height: 80px;\n  word-break: break-word;\n  padding: 15px;\n  border: 5px solid var(--orange);\n  font-size: 2rem;\n  text-align: center;\n}\n\n#animation-container {\n  margin: auto;\n  max-width: 300px;\n}\n\n.animation-frame {\n  margin: 250px auto 0;\n  padding: 15px 10px;\n  border: 5px solid var(--orange);\n  font-size: 1.2rem;\n  text-align: center;\n}\n\n@media screen and (min-width: 500px) {\n  .input-container {\n    flex-direction: row;\n  }\n\n  #result {\n    max-width: 460px;\n  }\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]},{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const numberInput = document.getElementById(\"number-input\");\nconst convertBtn = document.getElementById(\"convert-btn\");\nconst result = document.getElementById(\"result\");\n\nconst decimalToBinary = (input) => {\n  if (input === 0) {\n    return \"0\";\n  } \n  \n  else {\n    return decimalToBinary(Math.floor(input / 2)) + (input % 2);\n  }\n};\n\nconst checkUserInput = () => {\n  if (\n    !numberInput.value ||\n    isNaN(parseInt(numberInput.value)) ||\n    parseInt(numberInput.value) < 0\n  ) {\n    alert(\"Please provide a decimal number greater than or equal to 0\");\n    return;\n  }\n\n  result.textContent = decimalToBinary(parseInt(numberInput.value));\n  numberInput.value = \"\";\n};\n\nconvertBtn.addEventListener(\"click\", checkUserInput);\n\nnumberInput.addEventListener(\"keydown\", (e) => {\n  if (e.key === \"Enter\") {\n    checkUserInput();\n  }\n});","head":"","tail":"","editableRegionBoundaries":[5,13],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-recursion-by-building-a-decimal-to-binary-converter","dashedName":"step-72","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-recursion-by-building-a-decimal-to-binary-converter","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-recursion-by-building-a-decimal-to-binary-converter","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-73","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-71","id":"646203cdc054d012b5d71428"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Decimal to Binary Converter</title>\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n  <body>\n    <h1>Decimal to Binary Converter</h1>\n    <div class=\"input-container\">\n      <label for=\"number-input\">Enter a decimal number:</label>\n      <input\n        value=\"\"\n        type=\"number\"\n        name=\"decimal number input\"\n        id=\"number-input\"\n        class=\"number-input\"\n      />\n      <button class=\"convert-btn\" id=\"convert-btn\">Convert</button>\n    </div>\n    <output id=\"result\" for=\"number-input\"></output>\n    <div id=\"animation-container\"></div>\n    <script src=\"script.js\"></script>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  --light-grey: #f5f6f7;\n  --dark-blue: #1b1b32;\n  --orange: #f1be32;\n}\n\nbody {\n  background-color: var(--dark-blue);\n  font-family: \"Times New Roman\", Times, serif;\n  font-size: 18px;\n  color: var(--light-grey);\n  padding: 0 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  text-align: center;\n  font-size: 2.3rem;\n  margin: 20px 0;\n}\n\n.input-container {\n  margin: 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n}\n\n.convert-btn {\n  background-color: var(--orange);\n  cursor: pointer;\n  border: none;\n  padding: 4px;\n}\n\n.number-input {\n  height: 25px;\n}\n\n#result {\n  margin: 10px 0;\n  min-width: 200px;\n  width: fit-content;\n  min-height: 80px;\n  word-break: break-word;\n  padding: 15px;\n  border: 5px solid var(--orange);\n  font-size: 2rem;\n  text-align: center;\n}\n\n#animation-container {\n  margin: auto;\n  max-width: 300px;\n}\n\n.animation-frame {\n  margin: 250px auto 0;\n  padding: 15px 10px;\n  border: 5px solid var(--orange);\n  font-size: 1.2rem;\n  text-align: center;\n}\n\n@media screen and (min-width: 500px) {\n  .input-container {\n    flex-direction: row;\n  }\n\n  #result {\n    max-width: 460px;\n  }\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"},{"name":"script","ext":"js","contents":"const numberInput = document.getElementById(\"number-input\");\nconst convertBtn = document.getElementById(\"convert-btn\");\nconst result = document.getElementById(\"result\");\nconst animationContainer = document.getElementById(\"animation-container\");\nconst animationData = [\n  {\n    inputVal: 1,\n    marginTop: -200,\n    addElDelay: 2000,\n    msg: 'decimalToBinary(1) returns \"1\" (base case) and gives that value to the stack below. Then it pops off the stack.',\n    showMsgDelay: 5000,\n    removeElDelay: 10000,\n  },\n  {\n    inputVal: 2,\n    marginTop: -200,\n    addElDelay: 1500,\n    msg: 'decimalToBinary(2) returns \"1\" + 0 (2 % 2) and gives that value to the stack below. Then it pops off the stack.',\n    showMsgDelay: 10000,\n    removeElDelay: 15000,\n  },\n  {\n    inputVal: 5,\n    marginTop: 300,\n    addElDelay: 1000,\n    msg: 'decimalToBinary(5) returns \"10\" + 1 (5 % 2). Then it pops off the stack.',\n    showMsgDelay: 15000,\n    removeElDelay: 20000,\n  }\n];\n\nconst decimalToBinary = (input) => {\n  if (input === 0 || input === 1) {\n    return String(input);\n  } else {\n    return decimalToBinary(Math.floor(input / 2)) + (input % 2);\n  }\n};\n\nconst showAnimation = () => {\n  result.innerText = \"Call Stack Animation\";\n\n  animationData.forEach((obj) => {\n    setTimeout(() => {\n      animationContainer.innerHTML += `\n        <p id=\"${obj.inputVal}\" style=\"margin-top: ${obj.marginTop}px;\" class=\"animation-frame\">\n          decimalToBinary(${obj.inputVal})\n        </p>\n      `;\n    }, obj.addElDelay);\n\n    setTimeout(() => {\n      document.getElementById(obj.inputVal).textContent = obj.msg;\n    }, obj.showMsgDelay);\n\n    setTimeout(() => {\n      document.getElementById(obj.inputVal).remove();\n    }, obj.removeElDelay);\n  });\n\n  setTimeout(() => {\n    result.textContent = decimalToBinary(5);\n  }, 20000);\n};\n\nconst checkUserInput = () => {\n  const inputInt = parseInt(numberInput.value);\n\n  if (!numberInput.value || isNaN(inputInt) || inputInt < 0) {\n    alert(\"Please provide a decimal number greater than or equal to 0\");\n    return;\n  }\n\n  if (inputInt === 5) {\n    showAnimation();\n    return;\n  }\n\n  result.textContent = decimalToBinary(inputInt);\n  numberInput.value = \"\";\n};\n\nconvertBtn.addEventListener(\"click\", checkUserInput);\n\nnumberInput.addEventListener(\"keydown\", (e) => {\n  if (e.key === \"Enter\") {\n    checkUserInput();\n  }\n});","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-recursion-by-building-a-decimal-to-binary-converter/step-72"}},
    "staticQueryHashes": ["1800977889","4268002518"]}