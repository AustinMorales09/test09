{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-basic-oop-by-building-a-shopping-cart/step-7",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-basic-oop-by-building-a-shopping-cart","title":"Step 7","description":"<section id=\"description\">\n<p>Following that same data structure, add the products from this table (in order) to your <code>products</code> array. Increment the <code>id</code> for each product, counting up.</p>\n<table>\n<thead>\n<tr>\n<th><code>name</code></th>\n<th><code>price</code></th>\n<th><code>category</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>French Macaron</code></td>\n<td><code>3.99</code></td>\n<td><code>Macaron</code></td>\n</tr>\n<tr>\n<td><code>Pumpkin Cupcake</code></td>\n<td><code>3.99</code></td>\n<td><code>Cupcake</code></td>\n</tr>\n<tr>\n<td><code>Chocolate Cupcake</code></td>\n<td><code>5.99</code></td>\n<td><code>Cupcake</code></td>\n</tr>\n<tr>\n<td><code>Chocolate Pretzels (4 Pack)</code></td>\n<td><code>10.99</code></td>\n<td><code>Pretzel</code></td>\n</tr>\n<tr>\n<td><code>Strawberry Ice Cream</code></td>\n<td><code>2.99</code></td>\n<td><code>Ice Cream</code></td>\n</tr>\n<tr>\n<td><code>Chocolate Macarons (4 Pack)</code></td>\n<td><code>9.99</code></td>\n<td><code>Macaron</code></td>\n</tr>\n<tr>\n<td><code>Strawberry Pretzel</code></td>\n<td><code>4.99</code></td>\n<td><code>Pretzel</code></td>\n</tr>\n<tr>\n<td><code>Butter Pecan Ice Cream</code></td>\n<td><code>2.99</code></td>\n<td><code>Ice Cream</code></td>\n</tr>\n<tr>\n<td><code>Rocky Road Ice Cream</code></td>\n<td><code>2.99</code></td>\n<td><code>Ice Cream</code></td>\n</tr>\n<tr>\n<td><code>Vanilla Macarons (5 Pack)</code></td>\n<td><code>11.99</code></td>\n<td><code>Macaron</code></td>\n</tr>\n<tr>\n<td><code>Lemon Cupcakes (4 Pack)</code></td>\n<td><code>12.99</code></td>\n<td><code>Cupcake</code></td>\n</tr>\n</tbody>\n</table>\n</section>","id":"63ec3287b182ec0efe8a3135","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-basic-oop-by-building-a-shopping-cart","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-basic-oop-by-building-a-shopping-cart/step-7","tests":[{"text":"<p>Your second object in the <code>products</code> array should have an <code>id</code> property set to the number <code>2</code>.</p>","testString":"assert.equal(products[1].id, 2);"},{"text":"<p>Your second object in the <code>products</code> array should have a <code>name</code> property set to <code>French Macaron</code>.</p>","testString":"assert.equal(products[1].name, 'French Macaron');"},{"text":"<p>Your second object in the <code>products</code> array should have a <code>price</code> property set to the number <code>3.99</code>.</p>","testString":"assert.equal(products[1].price, 3.99);"},{"text":"<p>Your second object in the <code>products</code> array should have a <code>category</code> property set to <code>Macaron</code>.</p>","testString":"assert.equal(products[1].category, 'Macaron');"},{"text":"<p>Your third object in the <code>products</code> array should have an <code>id</code> property set to the number <code>3</code>.</p>","testString":"assert.equal(products[2].id, 3);"},{"text":"<p>Your third object in the <code>products</code> array should have a <code>name</code> property set to <code>Pumpkin Cupcake</code>.</p>","testString":"assert.equal(products[2].name, 'Pumpkin Cupcake');"},{"text":"<p>Your third object in the <code>products</code> array should have a <code>price</code> property set to the number <code>3.99</code>.</p>","testString":"assert.equal(products[2].price, 3.99);"},{"text":"<p>Your third object in the <code>products</code> array should have a <code>category</code> property set to <code>Cupcake</code>.</p>","testString":"assert.equal(products[2].category, 'Cupcake');"},{"text":"<p>Your fourth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>4</code>.</p>","testString":"assert.equal(products[3].id, 4);"},{"text":"<p>Your fourth object in the <code>products</code> array should have a <code>name</code> property set to <code>Chocolate Cupcake</code>.</p>","testString":"assert.equal(products[3].name, 'Chocolate Cupcake');"},{"text":"<p>Your fourth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>5.99</code>.</p>","testString":"assert.equal(products[3].price, 5.99);"},{"text":"<p>Your fourth object in the <code>products</code> array should have a <code>category</code> property set to <code>Cupcake</code>.</p>","testString":"assert.equal(products[3].category, 'Cupcake');"},{"text":"<p>Your fifth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>5</code>.</p>","testString":"assert.equal(products[4].id, 5);"},{"text":"<p>Your fifth object in the <code>products</code> array should have a <code>name</code> property set to <code>Chocolate Pretzels (4 Pack)</code>.</p>","testString":"assert.equal(products[4].name, 'Chocolate Pretzels (4 Pack)');"},{"text":"<p>Your fifth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>10.99</code>.</p>","testString":"assert.equal(products[4].price, 10.99);"},{"text":"<p>Your fifth object in the <code>products</code> array should have a <code>category</code> property set to <code>Pretzel</code>.</p>","testString":"assert.equal(products[4].category, 'Pretzel');"},{"text":"<p>Your sixth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>6</code>.</p>","testString":"assert.equal(products[5].id, 6);"},{"text":"<p>Your sixth object in the <code>products</code> array should have a <code>name</code> property set to <code>Strawberry Ice Cream</code>.</p>","testString":"assert.equal(products[5].name, 'Strawberry Ice Cream');"},{"text":"<p>Your sixth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>2.99</code>.</p>","testString":"assert.equal(products[5].price, 2.99);"},{"text":"<p>Your sixth object in the <code>products</code> array should have a <code>category</code> property set to <code>Ice Cream</code>.</p>","testString":"assert.equal(products[5].category, 'Ice Cream');"},{"text":"<p>Your seventh object in the <code>products</code> array should have an <code>id</code> property set to the number <code>7</code>.</p>","testString":"assert.equal(products[6].id, 7);"},{"text":"<p>Your seventh object in the <code>products</code> array should have a <code>name</code> property set to <code>Chocolate Macarons (4 Pack)</code>.</p>","testString":"assert.equal(products[6].name, 'Chocolate Macarons (4 Pack)');"},{"text":"<p>Your seventh object in the <code>products</code> array should have a <code>price</code> property set to the number <code>9.99</code>.</p>","testString":"assert.equal(products[6].price, 9.99);"},{"text":"<p>Your seventh object in the <code>products</code> array should have a <code>category</code> property set to <code>Macaron</code>.</p>","testString":"assert.equal(products[6].category, 'Macaron');"},{"text":"<p>Your eighth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>8</code>.</p>","testString":"assert.equal(products[7].id, 8);"},{"text":"<p>Your eighth object in the <code>products</code> array should have a <code>name</code> property set to <code>Strawberry Pretzel</code>.</p>","testString":"assert.equal(products[7].name, 'Strawberry Pretzel');"},{"text":"<p>Your eighth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>4.99</code>.</p>","testString":"assert.equal(products[7].price, 4.99);"},{"text":"<p>Your eighth object in the <code>products</code> array should have a <code>category</code> property set to <code>Pretzel</code>.</p>","testString":"assert.equal(products[7].category, 'Pretzel');"},{"text":"<p>Your ninth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>9</code>.</p>","testString":"assert.equal(products[8].id, 9);"},{"text":"<p>Your ninth object in the <code>products</code> array should have a <code>name</code> property set to <code>Butter Pecan Ice Cream</code>.</p>","testString":"assert.equal(products[8].name, 'Butter Pecan Ice Cream');"},{"text":"<p>Your ninth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>2.99</code>.</p>","testString":"assert.equal(products[8].price, 2.99);"},{"text":"<p>Your ninth object in the <code>products</code> array should have a <code>category</code> property set to <code>Ice Cream</code>.</p>","testString":"assert.equal(products[8].category, 'Ice Cream');"},{"text":"<p>Your tenth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>10</code>.</p>","testString":"assert.equal(products[9].id, 10);"},{"text":"<p>Your tenth object in the <code>products</code> array should have a <code>name</code> property set to <code>Rocky Road Ice Cream</code>.</p>","testString":"assert.equal(products[9].name, 'Rocky Road Ice Cream');"},{"text":"<p>Your tenth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>2.99</code>.</p>","testString":"assert.equal(products[9].price, 2.99);"},{"text":"<p>Your tenth object in the <code>products</code> array should have a <code>category</code> property set to <code>Ice Cream</code>.</p>","testString":"assert.equal(products[9].category, 'Ice Cream');"},{"text":"<p>Your eleventh object in the <code>products</code> array should have an <code>id</code> property set to the number <code>11</code>.</p>","testString":"assert.equal(products[10].id, 11);"},{"text":"<p>Your eleventh object in the <code>products</code> array should have a <code>name</code> property set to <code>Vanilla Macarons (5 Pack)</code>.</p>","testString":"assert.equal(products[10].name, 'Vanilla Macarons (5 Pack)');"},{"text":"<p>Your eleventh object in the <code>products</code> array should have a <code>price</code> property set to the number <code>11.99</code>.</p>","testString":"assert.equal(products[10].price, 11.99);"},{"text":"<p>Your eleventh object in the <code>products</code> array should have a <code>category</code> property set to <code>Macaron</code>.</p>","testString":"assert.equal(products[10].category, 'Macaron');"},{"text":"<p>Your twelfth object in the <code>products</code> array should have an <code>id</code> property set to the number <code>12</code>.</p>","testString":"assert.equal(products[11].id, 12);"},{"text":"<p>Your twelfth object in the <code>products</code> array should have a <code>name</code> property set to <code>Lemon Cupcakes (4 Pack)</code>.</p>","testString":"assert.equal(products[11].name, 'Lemon Cupcakes (4 Pack)');"},{"text":"<p>Your twelfth object in the <code>products</code> array should have a <code>price</code> property set to the number <code>12.99</code>.</p>","testString":"assert.equal(products[11].price, 12.99);"},{"text":"<p>Your twelfth object in the <code>products</code> array should have a <code>category</code> property set to <code>Cupcake</code>.</p>","testString":"assert.equal(products[11].category, 'Cupcake');"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":"*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]},{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n\n];","head":"","tail":"","editableRegionBoundaries":[12,22],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-basic-oop-by-building-a-shopping-cart","dashedName":"step-7","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-basic-oop-by-building-a-shopping-cart","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-basic-oop-by-building-a-shopping-cart","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-basic-oop-by-building-a-shopping-cart/step-8","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-basic-oop-by-building-a-shopping-cart/step-6","id":"63ec3287b182ec0efe8a3135"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":"*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"},{"name":"script","ext":"js","contents":"const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    const currentProductCount = totalCountPerProduct[product.id];\n    const currentProductCountSpan = document.getElementById(`product-count-for-id${id}`);\n\n    currentProductCount > 1 \n      ? currentProductCountSpan.textContent = `${currentProductCount}x`\n      : productsContainer.innerHTML += `\n      <div id=\"dessert${id}\" class=\"product\">\n        <p>\n          <span class=\"product-count\" id=\"product-count-for-id${id}\"></span>${name}\n        </p>\n        <p>${price}</p>\n      </div>\n      `;\n  }\n\n  getCounts() {\n    return this.items.length;\n  }\n\n  clearCart() {\n    if (!this.items.length) {\n      alert(\"Your shopping cart is already empty\");\n      return;\n    }\n\n    const isCartCleared = confirm(\n      \"Are you sure you want to clear all items from your shopping cart?\"\n    );\n\n    if (isCartCleared) {\n      this.items = [];\n      this.total = 0;\n      productsContainer.innerHTML = \"\";\n      totalNumberOfItems.textContent = 0;\n      cartSubTotal.textContent = 0;\n      cartTaxes.textContent = 0;\n      cartTotal.textContent = 0;\n    }\n  }\n\n  calculateTaxes(amount) {\n    return parseFloat(((this.taxRate / 100) * amount).toFixed(2));\n  }\n\n  calculateTotal() {\n    const subTotal = this.items.reduce((total, item) => total + item.price, 0);\n    const tax = this.calculateTaxes(subTotal);\n    this.total = subTotal + tax;\n    cartSubTotal.textContent = `$${subTotal.toFixed(2)}`;\n    cartTaxes.textContent = `$${tax.toFixed(2)}`;\n    cartTotal.textContent = `$${this.total.toFixed(2)}`;\n    return this.total;\n  }\n};\n\nconst cart = new ShoppingCart();\nconst addToCartBtns = document.getElementsByClassName(\"add-to-cart-btn\");\n\n[...addToCartBtns].forEach(\n  (btn) => {\n    btn.addEventListener(\"click\", (event) => {\n      cart.addItem(Number(event.target.id), products);\n      totalNumberOfItems.textContent = cart.getCounts();\n      cart.calculateTotal();\n    })\n  }\n);\n\ncartBtn.addEventListener(\"click\", () => {\n  isCartShowing = !isCartShowing;\n  showHideCartSpan.textContent = isCartShowing ? \"Hide\" : \"Show\";\n  cartContainer.style.display = isCartShowing ? \"block\" : \"none\";\n});\n\nclearCartBtn.addEventListener(\"click\", cart.clearCart.bind(cart));","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-basic-oop-by-building-a-shopping-cart/step-7"}},
    "staticQueryHashes": ["1800977889","4268002518"]}