{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-27",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-introductory-javascript-by-building-a-pyramid-generator","title":"Step 27","description":"<section id=\"description\">\n<p>You should have seen <code>\"freeCodeCamp\"</code> printed to the console. This is because <code>.pop()</code> returns the value that was removed from the array - and you pushed <code>\"freeCodeCamp\"</code> to the end of the array earlier.</p>\n<p>But what does <code>.push()</code> return? Assign your existing <code>rows.push()</code> to a new <code>pushed</code> variable, and log it.</p>\n</section>","id":"660f0da9bf1035c9097af20a","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-introductory-javascript-by-building-a-pyramid-generator","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-27","tests":[{"text":"<p>You should declare a <code>pushed</code> variable.</p>","testString":"assert.match(code, /pushed/);"},{"text":"<p>You should use <code>let</code> to declare your <code>pushed</code> variable.</p>","testString":"assert.match(code, /let\\s+pushed/);"},{"text":"<p>You should assign <code>rows.push(\"freeCodeCamp\")</code> to your <code>pushed</code> variable.</p>","testString":"assert.equal(pushed, 4);"},{"text":"<p>You should log your <code>pushed</code> variable.</p>","testString":"assert.match(code, /console\\.log\\(\\s*pushed\\s*\\)/);"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let character = 'Hello';\nlet count = 8;\nlet rows = [\"Naomi\", \"Quincy\", \"CamperChan\"];\nrows.push(\"freeCodeCamp\");\n\nlet popped = rows.pop();\nconsole.log(popped);\nconsole.log(rows);","head":"","tail":"","editableRegionBoundaries":[3,6],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator","dashedName":"step-27","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-introductory-javascript-by-building-a-pyramid-generator","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-introductory-javascript-by-building-a-pyramid-generator","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-28","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-26","id":"660f0da9bf1035c9097af20a"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const character = \"!\";\nconst count = 10;\nconst rows = [];\nlet inverted = false;\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(2 * rowNumber - 1) + \" \".repeat(rowCount - rowNumber);\n}\n\nfor (let i = 1; i <= count; i++) {\n  if (inverted) {\n    rows.unshift(padRow(i, count));\n  } else {\n    rows.push(padRow(i, count));\n  }\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-27"}},
    "staticQueryHashes": ["1800977889","4268002518"]}