{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-32",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-introductory-javascript-by-building-a-pyramid-generator","title":"Step 32","description":"<section id=\"description\">\n<p>To generate a pyramid, you will need to create multiple rows. When you have to perform a task repeatedly until a condition is met, you will use a <dfn>loop</dfn>. There are many ways to write a loop.</p>\n<p>You are going to start with a basic <code>for</code> loop. <code>for</code> loops use the following syntax:</p>\n<pre><code class=\"language-js\">for (iterator; condition; iteration) {\n  logic;\n}\n</code></pre>\n<p>In the upcoming steps, you'll explore each component of a loop in detail. For now, construct a <code>for</code> loop that includes the terms <code>\"iterator\"</code>, <code>\"condition\"</code>, and <code>\"iteration\"</code> for the three components. Keep the loop <dfn>body</dfn>, the section within the curly braces <code>{}</code>, empty.</p>\n</section>","id":"660f17d4e9f227d86e834abd","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-introductory-javascript-by-building-a-pyramid-generator","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-32","tests":[{"text":"<p>You should have a <code>for</code> loop.</p>","testString":"assert.match(code, /for/);"},{"text":"<p>The first component of your <code>for</code> loop should be the string <code>\"iterator\"</code>.</p>","testString":"assert.match(code, /for\\s*\\(\\s*('|\")iterator\\1/);"},{"text":"<p>The second component of your <code>for</code> loop should be the string <code>\"condition\"</code>.</p>","testString":"assert.match(code, /for\\s*\\(\\s*('|\")iterator\\1\\s*;\\s*('|\")condition\\2/);"},{"text":"<p>The third component of your <code>for</code> loop should be the string <code>\"iteration\"</code>.</p>","testString":"assert.match(code, /for\\s*\\(\\s*('|\")iterator\\1\\s*;\\s*('|\")condition\\2\\s*;\\s*('|\")iteration\\3\\s*\\)/);"},{"text":"<p>The body of your <code>for</code> loop should be empty.</p>","testString":"assert.match(code, /for\\s*\\(\\s*('|\")iterator\\1\\s*;\\s*('|\")condition\\2\\s*;\\s*('|\")iteration\\3\\s*\\)\\s*\\{\\s*\\}/);"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const character = \"#\";\nconst count = 8;\nconst rows = [];\n\n","head":"","tail":"","editableRegionBoundaries":[4,6],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator","dashedName":"step-32","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-introductory-javascript-by-building-a-pyramid-generator","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-introductory-javascript-by-building-a-pyramid-generator","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-33","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-31","id":"660f17d4e9f227d86e834abd"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const character = \"!\";\nconst count = 10;\nconst rows = [];\nlet inverted = false;\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(2 * rowNumber - 1) + \" \".repeat(rowCount - rowNumber);\n}\n\nfor (let i = 1; i <= count; i++) {\n  if (inverted) {\n    rows.unshift(padRow(i, count));\n  } else {\n    rows.push(padRow(i, count));\n  }\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-32"}},
    "staticQueryHashes": ["1800977889","4268002518"]}