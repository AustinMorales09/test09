{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-10",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-introductory-javascript-by-building-a-pyramid-generator","title":"Step 10","description":"<section id=\"description\">\n<p>You can also assign the value of a variable to another variable. For example:</p>\n<pre><code class=\"language-js\">let first = \"One\";\nlet second = \"Two\";\nsecond = first;\n</code></pre>\n<p>The <code>second</code> variable would now have the value <code>\"One\"</code>.</p>\n<p>To see this in action, change your <code>secondCharacter</code> assignment from <code>\"Test\"</code> to your <code>character</code> variable.</p>\n<p>Then open the console to see what gets logged.</p>\n</section>","id":"6610b9f7619764fad5fd516d","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-introductory-javascript-by-building-a-pyramid-generator","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-10","tests":[{"text":"<p>You should not assign the value <code>\"Test\"</code> to your <code>secondCharacter</code> variable.</p>","testString":"assert.notEqual(secondCharacter, \"Test\");"},{"text":"<p>You should assign the value of the <code>character</code> variable to your <code>secondCharacter</code> variable. Don't forget your semi-colon.</p>","testString":"assert.match(code, /secondCharacter\\s*=\\s*character;/);"},{"text":"<p>Your <code>secondCharacter</code> variable should now have the value <code>\"World\"</code>.</p>","testString":"assert.equal(secondCharacter, \"World\");"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"let character = 'Hello';\nconsole.log(character);\ncharacter = \"World\";\nlet secondCharacter;\nsecondCharacter = \"Test\";\nconsole.log(secondCharacter);","head":"","tail":"","editableRegionBoundaries":[4,6],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-introductory-javascript-by-building-a-pyramid-generator","dashedName":"step-10","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-introductory-javascript-by-building-a-pyramid-generator","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-introductory-javascript-by-building-a-pyramid-generator","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-11","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-9","id":"6610b9f7619764fad5fd516d"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"const character = \"!\";\nconst count = 10;\nconst rows = [];\nlet inverted = false;\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(2 * rowNumber - 1) + \" \".repeat(rowCount - rowNumber);\n}\n\nfor (let i = 1; i <= count; i++) {\n  if (inverted) {\n    rows.unshift(padRow(i, count));\n  } else {\n    rows.push(padRow(i, count));\n  }\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-introductory-javascript-by-building-a-pyramid-generator/step-10"}},
    "staticQueryHashes": ["1800977889","4268002518"]}