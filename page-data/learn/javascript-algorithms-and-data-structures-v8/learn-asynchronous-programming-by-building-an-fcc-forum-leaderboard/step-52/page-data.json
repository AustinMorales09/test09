{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard/step-52",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard","title":"Step 52","description":"<section id=\"description\">\n<p>For the remaining steps, you will add the functionality to display the user avatars.</p>\n<p>Inside the second <code>td</code> element, add a <code>div</code> element with a class name of <code>avatar-container</code>.</p>\n</section>","id":"646474a88d0d4a016f895ba8","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard/step-52","tests":[{"text":"<p>You should have a <code>div</code> element inside the second <code>td</code> element.</p>","testString":"const joinTest =  /<div\\b[^>]*>([\\s\\S]*?)<\\/div>/gm;\nassert(code.match(joinTest));"},{"text":"<p>Your opening <code>div</code> tag should have a class attribute with the value of <code>avatar-container</code>.</p>","testString":"const divRegexTest = /<div\\b[^>]*\\bclass\\s*=\\s*\"[^\"]*\\bavatar-container\\b[^\"]*\"[^>]*>([\\s\\S]*?)<\\/div>/gm;\nassert(code.match(divRegexTest));"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>","head":"","tail":"","editableRegionBoundaries":[],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]},{"fileKey":"scriptjs","ext":"js","name":"script","contents":"const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n        <p class=\"post-title\">${title}</p>\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};\n","head":"","tail":"","editableRegionBoundaries":[122,124],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard","dashedName":"step-52","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard/step-53","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard/step-51","id":"646474a88d0d4a016f895ba8"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>fCC Forum Leaderboard</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <nav>\n        <img\n          class=\"fcc-logo\"\n          src=\"https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg\"\n          alt=\"freeCodeCamp logo\"\n        />\n      </nav>\n      <h1 class=\"title\">Latest Topics</h1>\n    </header>\n    <main>\n      <div class=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th id=\"topics\">Topics</th>\n              <th id=\"avatars\">Avatars</th>\n              <th id=\"replies\">Replies</th>\n              <th id=\"views\">Views</th>\n              <th id=\"activity\">Activity</th>\n            </tr>\n          </thead>\n          <tbody id=\"posts-container\"></tbody>\n        </table>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #2a2a40;\n  --black: #000;\n  --dark-navy: #0a0a23;\n  --dark-grey: #d0d0d5;\n  --medium-grey: #dfdfe2;\n  --light-grey: #f5f6f7;\n  --peach: #f28373;\n  --salmon-color: #f0aea9;\n  --light-blue: #8bd9f6;\n  --light-orange: #f8b172;\n  --light-green: #93cb5b;\n  --golden-yellow: #f1ba33;\n  --gold: #f9aa23;\n  --green: #6bca6b;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n}\n\nnav {\n  background-color: var(--dark-navy);\n  padding: 10px 0;\n}\n\n.fcc-logo {\n  width: 210px;\n  display: block;\n  margin: auto;\n}\n\n.title {\n  margin: 25px 0;\n  text-align: center;\n  color: var(--light-grey);\n}\n\n.table-wrapper {\n  padding: 0 25px;\n  overflow-x: auto;\n}\n\ntable {\n  width: 100%;\n  color: var(--dark-grey);\n  margin: auto;\n  table-layout: fixed;\n  border-collapse: collapse;\n  overflow-x: scroll;\n}\n\n#topics {\n  text-align: start;\n  width: 60%;\n}\n\nth {\n  border-bottom: 2px solid var(--dark-grey);\n  padding-bottom: 10px;\n  font-size: 1.3rem;\n}\n\ntd:not(:first-child) {\n  text-align: center;\n}\n\ntd {\n  border-bottom: 1px solid var(--dark-grey);\n  padding: 20px 0;\n}\n\n.post-title {\n  font-size: 1.2rem;\n  color: var(--medium-grey);\n  text-decoration: none;\n}\n\n.category {\n  padding: 3px;\n  color: var(--black);\n  text-decoration: none;\n  display: block;\n  width: fit-content;\n  margin: 10px 0 10px;\n}\n\n.career {\n  background-color: var(--salmon-color);\n}\n\n.feedback,\n.html-css {\n  background-color: var(--light-blue);\n}\n\n.support {\n  background-color: var(--light-orange);\n}\n\n.general {\n  background-color: var(--light-green);\n}\n\n.javascript {\n  background-color: var(--golden-yellow);\n}\n\n.backend {\n  background-color: var(--gold);\n}\n\n.python {\n  background-color: var(--green);\n}\n\n.motivation {\n  background-color: var(--peach);\n}\n\n.avatar-container {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.avatar-container img {\n  width: 30px;\n  height: 30px;\n}\n\n@media (max-width: 750px) {\n  .table-wrapper {\n    padding: 0 15px;\n  }\n\n  table {\n    width: 700px;\n  }\n\n  th {\n    font-size: 1.2rem;\n  }\n\n  .post-title {\n    font-size: 1.1rem;\n  }\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"},{"name":"script","ext":"js","contents":"const forumLatest = \"https://cdn.freecodecamp.org/curriculum/forum-latest/latest.json\";\nconst forumTopicUrl = \"https://forum.freecodecamp.org/t/\";\nconst forumCategoryUrl = \"https://forum.freecodecamp.org/c/\";\nconst avatarUrl = \"https://sea1.discourse-cdn.com/freecodecamp\";\n\nconst postsContainer = document.getElementById(\"posts-container\");\n\nconst allCategories = {\n  299: { category: \"Career Advice\", className: \"career\" },\n  409: { category: \"Project Feedback\", className: \"feedback\" },\n  417: { category: \"freeCodeCamp Support\", className: \"support\" },\n  421: { category: \"JavaScript\", className: \"javascript\" },\n  423: { category: \"HTML - CSS\", className: \"html-css\" },\n  424: { category: \"Python\", className: \"python\" },\n  432: { category: \"You Can Do This!\", className: \"motivation\" },\n  560: { category: \"Backend Development\", className: \"backend\" },\n};\n\nconst forumCategory = (id) => {\n  let selectedCategory = {};\n\n  if (allCategories.hasOwnProperty(id)) {\n    const { className, category } = allCategories[id];\n\n    selectedCategory.className = className;\n    selectedCategory.category = category;\n  } else {\n    selectedCategory.className = \"general\";\n    selectedCategory.category = \"General\";\n    selectedCategory.id = 1;\n  }\n  const url = `${forumCategoryUrl}${selectedCategory.className}/${id}`;\n  const linkText = selectedCategory.category;\n  const linkClass = `category ${selectedCategory.className}`;\n\n  return `<a href=\"${url}\" class=\"${linkClass}\" target=\"_blank\">\n    ${linkText}\n  </a>`;\n};\n\nconst timeAgo = (time) => {\n  const currentTime = new Date();\n  const lastPost = new Date(time);\n\n  const timeDifference = currentTime - lastPost;\n  const msPerMinute = 1000 * 60;\n\n  const minutesAgo = Math.floor(timeDifference / msPerMinute);\n  const hoursAgo = Math.floor(minutesAgo / 60);\n  const daysAgo = Math.floor(hoursAgo / 24);\n\n  if (minutesAgo < 60) {\n    return `${minutesAgo}m ago`;\n  }\n\n  if (hoursAgo < 24) {\n    return `${hoursAgo}h ago`;\n  }\n\n  return `${daysAgo}d ago`;\n};\n\nconst viewCount = (views) => {\n  const thousands = Math.floor(views / 1000);\n\n  if (views >= 1000) {\n    return `${thousands}k`;\n  }\n\n  return views;\n};\n\nconst avatars = (posters, users) => {\n  return posters\n    .map((poster) => {\n      const user = users.find((user) => user.id === poster.user_id);\n      if (user) {\n        const avatar = user.avatar_template.replace(/{size}/, 30);\n        const userAvatarUrl = avatar.startsWith(\"/user_avatar/\")\n          ? avatarUrl.concat(avatar)\n          : avatar;\n        return `<img src=\"${userAvatarUrl}\" alt=\"${user.name}\" />`;\n      }\n    })\n    .join(\"\");\n};\n\nconst fetchData = async () => {\n  try {\n    const res = await fetch(forumLatest);\n    const data = await res.json();\n    showLatestPosts(data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfetchData();\n\nconst showLatestPosts = (data) => {\n  const { topic_list, users } = data;\n  const { topics } = topic_list;\n\n  postsContainer.innerHTML = topics.map((item) => {\n    const {\n      id,\n      title,\n      views,\n      posts_count,\n      slug,\n      posters,\n      category_id,\n      bumped_at,\n    } = item;\n\n    return `\n    <tr>\n      <td>\n       <a class=\"post-title\" target=\"_blank\" href=\"${forumTopicUrl}${slug}/${id}\">\n        ${title}\n       </a>\n        ${forumCategory(category_id)}\n      </td>\n      <td>\n        <div class=\"avatar-container\">\n          ${avatars(posters, users)}\n        </div>\n      </td>\n      <td>${posts_count - 1}</td>\n      <td>${viewCount(views)}</td>\n      <td>${timeAgo(bumped_at)}</td>\n    </tr>`;\n  }).join(\"\");\n};","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-asynchronous-programming-by-building-an-fcc-forum-leaderboard/step-52"}},
    "staticQueryHashes": ["1800977889","4268002518"]}