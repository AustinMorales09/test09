{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/review-js-fundamentals-by-building-a-gradebook-app/step-3",
    "result": {"data":{"challengeNode":{"challenge":{"block":"review-js-fundamentals-by-building-a-gradebook-app","title":"Step 3","description":"<section id=\"description\">\n<p>The teacher is really happy with the program you have created so far. But now they want to have an easy way to check if a student has a passing grade. A passing grade is anything that is not an <code>\"F\"</code>.</p>\n<p>Complete the function <code>hasPassingGrade</code> that takes a student score as a parameter. Your function should return <code>true</code> if the student has a passing grade and <code>false</code> if they do not.</p>\n<p><strong>Tips</strong></p>\n<ul>\n<li>Use the <code>getGrade</code> function to get the student's grade. Then check if the grade is passing or not.</li>\n</ul>\n</section>","id":"6626b4c58c027d86478ff5eb","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"review-js-fundamentals-by-building-a-gradebook-app","slug":"/learn/javascript-algorithms-and-data-structures-v8/review-js-fundamentals-by-building-a-gradebook-app/step-3","tests":[{"text":"<p>Your <code>hasPassingGrade</code> function should return a boolean value.</p>","testString":"assert.strictEqual(typeof hasPassingGrade(100), \"boolean\");"},{"text":"<p>Your <code>hasPassingGrade</code> function should return <code>true</code> if the grade is an <code>\"A\"</code>.</p>","testString":"assert.isTrue(hasPassingGrade(100));"},{"text":"<p>Your <code>hasPassingGrade</code> function should return <code>false</code> if the grade is an <code>\"F\"</code>.</p>","testString":"assert.isFalse(hasPassingGrade(53));"},{"text":"<p>Your <code>hasPassingGrade</code> function should return <code>true</code> for all passing grades.</p>","testString":"assert.isTrue(hasPassingGrade(87));\nassert.isTrue(hasPassingGrade(60));\nassert.isTrue(hasPassingGrade(73));\nassert.isTrue(hasPassingGrade(96));"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  \n}\n\n\nconsole.log(hasPassingGrade(100));\nconsole.log(hasPassingGrade(53));\nconsole.log(hasPassingGrade(87));","head":"","tail":"","editableRegionBoundaries":[26,35],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#review-js-fundamentals-by-building-a-gradebook-app","dashedName":"step-3","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"review-js-fundamentals-by-building-a-gradebook-app","isFirstStep":false,"template":null,"required":[],"nextBlock":"review-js-fundamentals-by-building-a-gradebook-app","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/review-js-fundamentals-by-building-a-gradebook-app/step-4","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/review-js-fundamentals-by-building-a-gradebook-app/step-2","id":"6626b4c58c027d86478ff5eb"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\nfunction studentMsg(totalScores, studentScore) {\n  let average = getAverage(totalScores);\n  let grade = getGrade(studentScore);\n\n  return `Class average: ${average}. Your grade: ${grade}. You ${\n    hasPassingGrade(studentScore) ? \"passed\" : \"failed\"\n  } the course.`;\n}\n","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/review-js-fundamentals-by-building-a-gradebook-app/step-3"}},
    "staticQueryHashes": ["1800977889","4268002518"]}