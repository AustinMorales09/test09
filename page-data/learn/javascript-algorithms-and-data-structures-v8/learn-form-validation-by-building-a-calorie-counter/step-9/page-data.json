{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/javascript-algorithms-and-data-structures-v8/learn-form-validation-by-building-a-calorie-counter/step-9",
    "result": {"data":{"challengeNode":{"challenge":{"block":"learn-form-validation-by-building-a-calorie-counter","title":"Step 9","description":"<section id=\"description\">\n<p>In your <code>span</code> element, create a <code>label</code> element for an <code>entry-dropdown</code> and give it the text <code>Add food or exercise:</code>. Then create a <code>select</code> element with the <code>id</code> set to <code>entry-dropdown</code> and a <code>name</code> set to <code>options</code>. Below that, add a <code>button</code> element with the <code>id</code> set to <code>add-entry</code> and the text <code>Add Entry</code>.</p>\n<p>Give your <code>button</code> element a <code>type</code> attribute set to <code>button</code> to prevent automatic form submission.</p>\n</section>","id":"63b60aaaa65f8922bfce6b7e","hasEditableBoundaries":true,"instructions":null,"notes":null,"challengeType":0,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"javascript-algorithms-and-data-structures-v8","translationPending":false,"forumTopicId":null,"fields":{"blockName":"learn-form-validation-by-building-a-calorie-counter","slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-form-validation-by-building-a-calorie-counter/step-9","tests":[{"text":"<p>You should add a <code>label</code> element to your <code>span</code> element.</p>","testString":"assert.exists(document.querySelector('.controls > span > label'));"},{"text":"<p>Your new <code>label</code> element should have a <code>for</code> attribute set to <code>entry-dropdown</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > label')?.getAttribute('for'), 'entry-dropdown');"},{"text":"<p>Your new <code>label</code> element should have the text <code>Add food or exercise:</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > label')?.innerText, 'Add food or exercise:');"},{"text":"<p>You should add a <code>select</code> element to your <code>span</code> element.</p>","testString":"assert.exists(document.querySelector('.controls > span > select'));"},{"text":"<p>Your <code>select</code> element should come after your <code>label</code> element.</p>","testString":"assert(document.querySelector('.controls > span > select')?.previousElementSibling?.tagName === 'LABEL');"},{"text":"<p>Your new <code>select</code> element should have an <code>id</code> attribute set to <code>entry-dropdown</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > select')?.getAttribute('id'), 'entry-dropdown');"},{"text":"<p>Your new <code>select</code> element should have a <code>name</code> attribute set to <code>options</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > select')?.getAttribute('name'), 'options');"},{"text":"<p>Your <code>select</code> element should be empty and have a closing <code>&#x3C;/select></code> tag.</p>","testString":"assert.equal(document.querySelector('.controls > span > select')?.innerHTML?.trim(), '');"},{"text":"<p>You should add a <code>button</code> element to your <code>span</code> element.</p>","testString":"assert.exists(document.querySelector('.controls > span > button'));"},{"text":"<p>Your <code>button</code> element should come after your <code>select</code> element.</p>","testString":"assert(document.querySelector('.controls > span > button')?.previousElementSibling?.tagName === 'SELECT');"},{"text":"<p>Your new <code>button</code> element should have an <code>id</code> attribute set to <code>add-entry</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > button')?.getAttribute('id'), 'add-entry');"},{"text":"<p>Your new <code>button</code> element should have the text <code>Add Entry</code>.</p>","testString":"assert.equal(document.querySelector('.controls > span > button')?.innerText, 'Add Entry');"}]},"required":[],"usesMultifileEditor":true,"challengeFiles":[{"fileKey":"indexhtml","ext":"html","name":"index","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n    <title>Calorie Counter</title>\n  </head>\n  <body>\n    <main>\n      <h1>Calorie Counter</h1>\n      <div class=\"container\">\n        <form id=\"calorie-counter\">\n          <label for=\"budget\">Budget</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            id=\"budget\"\n            placeholder=\"Daily calorie budget\"\n            required\n          />\n          <fieldset id=\"breakfast\">\n            <legend>Breakfast</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"lunch\">\n            <legend>Lunch</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"dinner\">\n            <legend>Dinner</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"snacks\">\n            <legend>Snacks</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"exercise\">\n            <legend>Exercise</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <div class=\"controls\">\n            <span>\n\n            </span>\n          </div>\n        </form>\n      </div>\n    </main>\n  </body>\n</html>","head":"","tail":"","editableRegionBoundaries":[41,47],"history":["index.html"]},{"fileKey":"stylescss","ext":"css","name":"styles","contents":":root {\n  --light-grey: #f5f6f7;\n  --dark-blue: #0a0a23;\n  --fcc-blue: #1b1b32;\n  --light-yellow: #fecc4c;\n  --dark-yellow: #feac32;\n  --light-pink: #ffadad;\n  --dark-red: #850000;\n  --light-green: #acd157;\n}\n\nbody {\n  font-family: \"Lato\", Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  background-color: var(--fcc-blue);\n  color: var(--light-grey);\n}\n\nh1 {\n  text-align: center;\n}\n\n.container {\n  width: 90%;\n  max-width: 680px;\n}\n\nh1,\n.container,\n.output {\n  margin: 20px auto;\n}\n\nlabel,\nlegend {\n  font-weight: bold;\n}\n\n.input-container {\n  display: flex;\n  flex-direction: column;\n}\n\nbutton {\n  cursor: pointer;\n  text-decoration: none;\n  background-color: var(--light-yellow);\n  border: 2px solid var(--dark-yellow);\n}\n\nbutton,\ninput,\nselect {\n  min-height: 24px;\n  color: var(--dark-blue);\n}\n\nfieldset,\nlabel,\nbutton,\ninput,\nselect {\n  margin-bottom: 10px;\n}\n\n.output {\n  border: 2px solid var(--light-grey);\n  padding: 10px;\n  text-align: center;\n}\n\n.hide {\n  display: none;\n}\n\n.output span {\n  font-weight: bold;\n  font-size: 1.2em;\n}\n\n.surplus {\n  color: var(--light-pink);\n}\n\n.deficit {\n  color: var(--light-green);\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["styles.css"]},{"fileKey":"scriptjs","ext":"js","name":"script","contents":"","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/javascript-algorithms-and-data-structures-v8/#learn-form-validation-by-building-a-calorie-counter","dashedName":"step-9","certification":"javascript-algorithms-and-data-structures-v8","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"javascript-algorithms-and-data-structures-v8","block":"learn-form-validation-by-building-a-calorie-counter","isFirstStep":false,"template":null,"required":[],"nextBlock":"learn-form-validation-by-building-a-calorie-counter","nextChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-form-validation-by-building-a-calorie-counter/step-10","prevChallengePath":"/learn/javascript-algorithms-and-data-structures-v8/learn-form-validation-by-building-a-calorie-counter/step-8","id":"63b60aaaa65f8922bfce6b7e"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":0,"challengeFiles":[{"name":"index","ext":"html","contents":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n    <title>Calorie Counter</title>\n  </head>\n  <body>\n    <main>\n      <h1>Calorie Counter</h1>\n      <div class=\"container\">\n        <form id=\"calorie-counter\">\n          <label for=\"budget\">Budget</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            id=\"budget\"\n            placeholder=\"Daily calorie budget\"\n            required\n          />\n          <fieldset id=\"breakfast\">\n            <legend>Breakfast</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"lunch\">\n            <legend>Lunch</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"dinner\">\n            <legend>Dinner</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"snacks\">\n            <legend>Snacks</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"exercise\">\n            <legend>Exercise</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <div class=\"controls\">\n            <span>\n              <label for=\"entry-dropdown\">Add food or exercise:</label>\n              <select id=\"entry-dropdown\" name=\"options\">\n                <option value=\"breakfast\" selected>Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n                <option value=\"snacks\">Snacks</option>\n                <option value=\"exercise\">Exercise</option>\n              </select>\n              <button type=\"button\" id=\"add-entry\">Add Entry</button>\n            </span>\n          </div>\n          <div>\n            <button type=\"submit\">\n              Calculate Remaining Calories\n            </button>\n            <button type=\"button\" id=\"clear\">Clear</button>\n          </div>\n        </form>\n        <div id=\"output\" class=\"output hide\"></div>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>","head":"","tail":"","history":["index.html"],"fileKey":"indexhtml"},{"name":"styles","ext":"css","contents":":root {\n  --light-grey: #f5f6f7;\n  --dark-blue: #0a0a23;\n  --fcc-blue: #1b1b32;\n  --light-yellow: #fecc4c;\n  --dark-yellow: #feac32;\n  --light-pink: #ffadad;\n  --dark-red: #850000;\n  --light-green: #acd157;\n}\n\nbody {\n  font-family: \"Lato\", Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  background-color: var(--fcc-blue);\n  color: var(--light-grey);\n}\n\nh1 {\n  text-align: center;\n}\n\n.container {\n  width: 90%;\n  max-width: 680px;\n}\n\nh1,\n.container,\n.output {\n  margin: 20px auto;\n}\n\nlabel,\nlegend {\n  font-weight: bold;\n}\n\n.input-container {\n  display: flex;\n  flex-direction: column;\n}\n\nbutton {\n  cursor: pointer;\n  text-decoration: none;\n  background-color: var(--light-yellow);\n  border: 2px solid var(--dark-yellow);\n}\n\nbutton,\ninput,\nselect {\n  min-height: 24px;\n  color: var(--dark-blue);\n}\n\nfieldset,\nlabel,\nbutton,\ninput,\nselect {\n  margin-bottom: 10px;\n}\n\n.output {\n  border: 2px solid var(--light-grey);\n  padding: 10px;\n  text-align: center;\n}\n\n.hide {\n  display: none;\n}\n\n.output span {\n  font-weight: bold;\n  font-size: 1.2em;\n}\n\n.surplus {\n  color: var(--light-pink);\n}\n\n.deficit {\n  color: var(--light-green);\n}","head":"","tail":"","history":["styles.css"],"fileKey":"stylescss"},{"name":"script","ext":"js","contents":"const calorieCounter = document.getElementById('calorie-counter');\nconst budgetNumberInput = document.getElementById('budget');\nconst entryDropdown = document.getElementById('entry-dropdown');\nconst addEntryButton = document.getElementById('add-entry');\nconst clearButton = document.getElementById('clear');\nconst output = document.getElementById('output');\nlet isError = false;\n\nfunction cleanInputString(str) {\n  const regex = /[+-\\s]/g;\n  return str.replace(regex, '');\n}\n\nfunction isInvalidInput(str) {\n  const regex = /\\d+e\\d+/i;\n  return str.match(regex);\n}\n\nfunction addEntry() {\n  const targetInputContainer = document.querySelector(`#${entryDropdown.value} .input-container`);\n  const entryNumber = targetInputContainer.querySelectorAll('input[type=\"text\"]').length + 1;\n  const HTMLString = `\n  <label for=\"${entryDropdown.value}-${entryNumber}-name\">Entry ${entryNumber} Name</label>\n  <input type=\"text\" id=\"${entryDropdown.value}-${entryNumber}-name\" placeholder=\"Name\" />\n  <label for=\"${entryDropdown.value}-${entryNumber}-calories\">Entry ${entryNumber} Calories</label>\n  <input\n    type=\"number\"\n    min=\"0\"\n    id=\"${entryDropdown.value}-${entryNumber}-calories\"\n    placeholder=\"Calories\"\n  />`;\n  targetInputContainer.insertAdjacentHTML('beforeend', HTMLString);\n}\n\nfunction calculateCalories(e) {\n  e.preventDefault();\n  isError = false;\n\n  const breakfastNumberInputs = document.querySelectorAll('#breakfast input[type=number]');\n  const lunchNumberInputs = document.querySelectorAll('#lunch input[type=number]');\n  const dinnerNumberInputs = document.querySelectorAll('#dinner input[type=number]');\n  const snacksNumberInputs = document.querySelectorAll('#snacks input[type=number]');\n  const exerciseNumberInputs = document.querySelectorAll('#exercise input[type=number]');\n\n  const breakfastCalories = getCaloriesFromInputs(breakfastNumberInputs);\n  const lunchCalories = getCaloriesFromInputs(lunchNumberInputs);\n  const dinnerCalories = getCaloriesFromInputs(dinnerNumberInputs);\n  const snacksCalories = getCaloriesFromInputs(snacksNumberInputs);\n  const exerciseCalories = getCaloriesFromInputs(exerciseNumberInputs);\n  const budgetCalories = getCaloriesFromInputs([budgetNumberInput]);\n\n  if (isError) {\n    return;\n  }\n\n  const consumedCalories = breakfastCalories + lunchCalories + dinnerCalories + snacksCalories;\n  const remainingCalories = budgetCalories - consumedCalories + exerciseCalories;\n  const surplusOrDeficit = remainingCalories < 0 ? 'Surplus' : 'Deficit';\n  output.innerHTML = `\n  <span class=\"${surplusOrDeficit.toLowerCase()}\">${Math.abs(remainingCalories)} Calorie ${surplusOrDeficit}</span>\n  <hr>\n  <p>${budgetCalories} Calories Budgeted</p>\n  <p>${consumedCalories} Calories Consumed</p>\n  <p>${exerciseCalories} Calories Burned</p>\n  `;\n\n  output.classList.remove('hide');\n}\n\nfunction getCaloriesFromInputs(list) {\n  let calories = 0;\n\n  for (const item of list) {\n    const currVal = cleanInputString(item.value);\n    const invalidInputMatch = isInvalidInput(currVal);\n\n    if (invalidInputMatch) {\n      alert(`Invalid Input: ${invalidInputMatch[0]}`);\n      isError = true;\n      return null;\n    }\n    calories += Number(currVal);\n  }\n  return calories;\n}\n\nfunction clearForm() {\n  const inputContainers = Array.from(document.querySelectorAll('.input-container'));\n\n  for (const container of inputContainers) {\n    container.innerHTML = '';\n  }\n\n  budgetNumberInput.value = '';\n  output.innerText = '';\n  output.classList.add('hide');\n}\n\naddEntryButton.addEventListener('click', addEntry);\ncalorieCounter.addEventListener('submit', calculateCalories);\nclearButton.addEventListener('click', clearForm);","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/javascript-algorithms-and-data-structures-v8/learn-form-validation-by-building-a-calorie-counter/step-9"}},
    "staticQueryHashes": ["1800977889","4268002518"]}