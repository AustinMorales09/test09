{
    "componentChunkName": "component---src-templates-challenges-classic-show-tsx",
    "path": "/learn/coding-interview-prep/data-structures/use-spread-and-notes-for-es5-set-integration",
    "result": {"data":{"challengeNode":{"challenge":{"block":"data-structures","title":"Use Spread and Notes for ES5 Set() Integration","description":"<section id=\"description\">\n<p>Do you remember the ES6 spread operator <code>...</code>?</p>\n<p><code>...</code> can take iterable objects in ES6 and turn them into arrays.</p>\n<p>Let's create a Set, and check out the spread function.</p>\n<pre><code class=\"language-js\">var set = new Set([1,2,3]);\nvar setToArr = [...set]\nconsole.log(setToArr) // returns [ 1, 2, 3 ]\n</code></pre>\n</section>","id":"587d8255367417b2b2512c73","hasEditableBoundaries":false,"instructions":"<section id=\"instructions\">\n<p>In this exercise we will pass a set object to the <code>checkSet</code> function. It should return an array containing the values of the Set.</p>\n<p>Now you've successfully learned how to use the ES6 <code>Set()</code> object, good job!</p>\n</section>","notes":null,"challengeType":1,"helpCategory":"JavaScript","videoUrl":null,"superBlock":"coding-interview-prep","translationPending":false,"forumTopicId":301720,"fields":{"blockName":"data-structures","slug":"/learn/coding-interview-prep/data-structures/use-spread-and-notes-for-es5-set-integration","tests":[{"text":"<p><code>checkSet(new Set([1,2,3,4,5,6,7])</code> should return <code>[1, 2, 3, 4, 5, 6, 7]</code>.</p>","testString":"assert(\n  (function () {\n    var test = checkSet(new Set([1, 2, 3, 4, 5, 6, 7]));\n    return DeepEqual(test, [1, 2, 3, 4, 5, 6, 7]);\n  })()\n);"}]},"required":[],"usesMultifileEditor":false,"challengeFiles":[{"fileKey":"scriptjs","ext":"js","name":"script","contents":"function checkSet(set){\n   // Only change code below this line\n\n   // Only change code above this line\n}","head":"","tail":"","editableRegionBoundaries":[],"history":["script.js"]}]}}},"pageContext":{"challengeMeta":{"blockHashSlug":"/learn/coding-interview-prep/#data-structures","dashedName":"use-spread-and-notes-for-es5-set-integration","certification":"coding-interview-prep","disableLoopProtectTests":false,"disableLoopProtectPreview":false,"superBlock":"coding-interview-prep","block":"data-structures","isFirstStep":false,"template":null,"required":[],"nextBlock":"data-structures","nextChallengePath":"/learn/coding-interview-prep/data-structures/create-a-map-data-structure","prevChallengePath":"/learn/coding-interview-prep/data-structures/use--has-and--size-on-an-es6-set","id":"587d8255367417b2b2512c73"},"projectPreview":{"showProjectPreview":false,"challengeData":{"challengeType":1,"challengeFiles":[{"name":"script","ext":"js","contents":"function dfs(graph, root) {\n    var stack = [];\n    var tempV;\n    var visited = [];\n    var tempVNeighbors = [];\n    stack.push(root);\n    while (stack.length > 0) {\n        tempV = stack.pop();\n        if (visited.indexOf(tempV) == -1) {\n            visited.push(tempV);\n            tempVNeighbors = graph[tempV];\n            for (var i = 0; i < tempVNeighbors.length; i++) {\n                if (tempVNeighbors[i] == 1) {\n                    stack.push(i);\n                }\n            }\n        }\n    }\n    return visited;\n}","head":"","tail":"","history":["script.js"],"fileKey":"scriptjs"}]}},"slug":"/learn/coding-interview-prep/data-structures/use-spread-and-notes-for-es5-set-integration"}},
    "staticQueryHashes": ["1800977889","4268002518"]}