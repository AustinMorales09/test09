{"version":3,"file":"component---src-pages-email-sign-up-tsx-b26b2559a9524b31ca89.js","mappings":"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","sources":["webpack://@freecodecamp/client/./src/components/Intro/components/intro-description.tsx","webpack://@freecodecamp/client/./src/components/create-redirect.ts","webpack://@freecodecamp/client/./src/pages/email-sign-up.tsx"],"sourcesContent":["import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport envData from '../../../../config/env.json';\nimport { Link, Spacer } from '../../helpers';\n\nimport '../intro.css';\n\nconst { forumLocation } = envData;\nfunction IntroDescription(): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className='intro-description'\n      data-playwright-test-label='learn-read-this-section'\n    >\n      <Spacer size='medium' />\n      <p\n        className='text-center'\n        data-playwright-test-label='learn-read-this-heading'\n      >\n        <strong>{t('learn.read-this.heading')}</strong>\n      </p>\n      <Spacer size='medium' />\n      {[...Array(8).keys()].map(i => (\n        <p key={i} data-playwright-test-label='learn-read-this-p'>\n          {t(`learn.read-this.p${i + 1}`)}\n        </p>\n      ))}\n      <p>\n        <Trans\n          i18nKey='learn.read-this.p9'\n          data-playwright-test-label='learn-read-this-p'\n        >\n          <Link className='inline' to='https://youtube.com/freecodecamp' />\n        </Trans>\n      </p>\n      <p data-playwright-test-label='learn-read-this-p'>\n        {t('learn.read-this.p10')}\n      </p>\n      <p>\n        <Trans\n          i18nKey='learn.read-this.p11'\n          data-playwright-test-label='learn-read-this-p'\n        >\n          <Link className='inline' to={forumLocation} />\n        </Trans>\n      </p>\n      <p data-playwright-test-label='learn-read-this-p'>\n        {t('learn.read-this.p12')}\n      </p>\n      <strong>{t('misc.quincy')}</strong>\n    </div>\n  );\n}\n\nIntroDescription.displayName = 'IntroDescription';\n\nexport default IntroDescription;\n","import { navigate } from 'gatsby';\nimport type { RouteComponentProps } from '@reach/router';\n\nconst createRedirect =\n  (to = '/'): ((_props: RouteComponentProps) => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;\n","import React, { useEffect, useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Button } from '@freecodecamp/ui';\n\nimport IntroDescription from '../components/Intro/components/intro-description';\nimport createRedirect from '../components/create-redirect';\nimport { Spacer, Loader, Link } from '../components/helpers';\nimport { apiLocation } from '../../config/env.json';\n\nimport { acceptTerms } from '../redux/actions';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector\n} from '../redux/selectors';\n\nimport './email-sign-up.css';\ninterface AcceptPrivacyTermsProps {\n  acceptTerms: (accept: boolean | null) => void;\n  acceptedPrivacyTerms: boolean;\n  isSignedIn: boolean;\n  showLoading: boolean;\n  completedChallengeCount?: number;\n}\n\nconst mapStateToProps = createSelector(\n  userSelector,\n  isSignedInSelector,\n  signInLoadingSelector,\n  (\n    {\n      acceptedPrivacyTerms,\n      completedChallengeCount\n    }: { acceptedPrivacyTerms: boolean; completedChallengeCount: number },\n    isSignedIn: boolean,\n    showLoading: boolean\n  ) => ({\n    acceptedPrivacyTerms,\n    isSignedIn,\n    showLoading,\n    completedChallengeCount\n  })\n);\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ acceptTerms }, dispatch);\nconst RedirectToLearn = createRedirect('/learn');\n\nfunction EmailListOptIn({\n  isSignedIn,\n  acceptTerms\n}: {\n  isSignedIn: boolean;\n  acceptTerms: (accepted: boolean) => void;\n}) {\n  const { t } = useTranslation();\n  if (isSignedIn) {\n    return (\n      <Container>\n        <Row className='email-list-opt'>\n          <Col md={4} mdOffset={2} sm={5} smOffset={1} xs={12}>\n            <Button\n              block={true}\n              size='large'\n              variant='primary'\n              onClick={() => acceptTerms(true)}\n            >\n              {t('buttons.yes-please')}\n            </Button>\n            <Spacer size='small' />\n          </Col>\n          <Col md={4} sm={5} xs={12}>\n            <Button\n              block={true}\n              size='large'\n              variant='primary'\n              onClick={() => acceptTerms(false)}\n            >\n              {t('buttons.no-thanks')}\n            </Button>\n            <Spacer size='small' />\n          </Col>\n        </Row>\n      </Container>\n    );\n  } else {\n    return (\n      <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n        <Spacer size='small' />\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          href={`${apiLocation}/signin`}\n        >\n          {t('buttons.sign-up-email-list')}\n        </Button>\n        <Spacer size='small' />\n      </Col>\n    );\n  }\n}\n\nfunction AcceptPrivacyTerms({\n  acceptTerms,\n  acceptedPrivacyTerms,\n  isSignedIn,\n  showLoading,\n  completedChallengeCount = 0\n}: AcceptPrivacyTermsProps) {\n  const { t } = useTranslation();\n  const acceptedPrivacyRef = useRef(acceptedPrivacyTerms);\n  const acceptTermsRef = useRef(acceptTerms);\n\n  useEffect(() => {\n    acceptedPrivacyRef.current = acceptedPrivacyTerms;\n    acceptTermsRef.current = acceptTerms;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return acceptedPrivacyTerms ? (\n    <RedirectToLearn />\n  ) : (\n    <>\n      <Helmet>\n        <title>{t('misc.email-signup')} | freeCodeCamp.org</title>\n      </Helmet>\n      <Container>\n        {isSignedIn && completedChallengeCount < 1 ? (\n          <Row>\n            <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n              <Spacer size='large' />\n              <h1 className='text-center'>{t('misc.brand-new-account')}</h1>\n              <Spacer size='small' />\n              <p>\n                <Trans i18nKey='misc.duplicate-account-warning'>\n                  <Link className='inline' to='/settings#danger-zone' />\n                </Trans>\n              </p>\n            </Col>\n          </Row>\n        ) : (\n          ''\n        )}\n        <Row>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Spacer size='small' />\n            <IntroDescription />\n            <hr />\n          </Col>\n        </Row>\n        <Row className='email-sign-up' data-cy='email-sign-up'>\n          <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n            <Spacer size='small' />\n            <p>{t('misc.email-blast')}</p>\n            <Spacer size='small' />\n          </Col>\n          {showLoading ? (\n            <Loader fullScreen={true} />\n          ) : (\n            <EmailListOptIn isSignedIn={isSignedIn} acceptTerms={acceptTerms} />\n          )}\n          <Col xs={12}>\n            <Spacer size='medium' />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AcceptPrivacyTerms);\n"],"names":["forumLocation","envData","IntroDescription","t","useTranslation","React","className","Spacer","size","Array","keys","map","i","key","Trans","i18nKey","Link","to","displayName","window","navigate","mapStateToProps","createSelector","userSelector","isSignedInSelector","signInLoadingSelector","_ref","isSignedIn","showLoading","acceptedPrivacyTerms","completedChallengeCount","RedirectToLearn","createRedirect","EmailListOptIn","_ref2","acceptTerms","Container","Row","Col","md","mdOffset","sm","smOffset","xs","Button","block","variant","onClick","href","apiLocation","connect","dispatch","bindActionCreators","_ref3","acceptedPrivacyRef","useRef","acceptTermsRef","useEffect","current","Helmet","Loader","fullScreen"],"sourceRoot":""}