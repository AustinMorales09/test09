{"version":3,"file":"component---src-pages-settings-tsx-d96ef04ae798289bd052.js","mappings":"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","sources":["webpack://@freecodecamp/client/../node_modules/.pnpm/jump.js@1.0.1/node_modules/jump.js/dist/jump.min.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createFind.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/find.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/findIndex.js","webpack://@freecodecamp/client/../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isEqual.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/Manager.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/ScrollableAnchor.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/index.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/utils/func.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/utils/hash.js","webpack://@freecodecamp/client/../node_modules/.pnpm/react-scrollable-anchor@0.6.1_react-dom@16.14.0_react@16.14.0__react@16.14.0/node_modules/react-scrollable-anchor/lib/utils/scroll.js","webpack://@freecodecamp/client/./src/components/SolutionViewer/project-modal.tsx","webpack://@freecodecamp/client/./src/components/SolutionViewer/solution-viewer.tsx","webpack://@freecodecamp/client/./src/components/create-redirect.ts","webpack://@freecodecamp/client/./src/components/helpers/form/block-save-button.tsx","webpack://@freecodecamp/client/./src/components/redirect-home.ts","webpack://@freecodecamp/client/./src/components/settings/keyboard-shortcuts.tsx","webpack://@freecodecamp/client/./src/components/settings/section-header.tsx","webpack://@freecodecamp/client/./src/components/settings/certification.tsx","webpack://@freecodecamp/client/./src/components/settings/sound.tsx","webpack://@freecodecamp/client/./src/components/settings/username.tsx","webpack://@freecodecamp/client/./src/redux/settings/selectors.js","webpack://@freecodecamp/client/./src/components/settings/scrollbar-width.tsx","webpack://@freecodecamp/client/./src/components/settings/about.tsx","webpack://@freecodecamp/client/./src/components/settings/delete-modal.tsx","webpack://@freecodecamp/client/./src/components/settings/reset-modal.tsx","webpack://@freecodecamp/client/./src/components/settings/danger-zone.tsx","webpack://@freecodecamp/client/./src/components/settings/email.tsx","webpack://@freecodecamp/client/./src/components/settings/honesty.tsx","webpack://@freecodecamp/client/./src/components/settings/internet.tsx","webpack://@freecodecamp/client/./src/components/settings/portfolio.tsx","webpack://@freecodecamp/client/./src/components/settings/toggle-radio-setting.tsx","webpack://@freecodecamp/client/./src/components/settings/privacy.tsx","webpack://@freecodecamp/client/./src/components/settings/user-token.tsx","webpack://@freecodecamp/client/./src/client-only-routes/show-settings.tsx","webpack://@freecodecamp/client/./src/pages/settings.tsx","webpack://@freecodecamp/client/./src/utils/scrollbar-width.ts","webpack://@freecodecamp/client/../shared/utils/validate.js"],"sourcesContent":["/*!\n * Jump.js 1.0.1 - A small, modern, dependency-free smooth scrolling library.\n * Copyright (c) 2016 Michael Cavalea - https://github.com/callmecavs/jump.js\n * License: MIT\n */\n\n!function (o, n) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = n() : \"function\" == typeof define && define.amd ? define(n) : o.Jump = n();\n}(this, function () {\n  \"use strict\";\n\n  var o = function (o, n, e, t) {\n      return o /= t / 2, o < 1 ? e / 2 * o * o + n : (o--, -e / 2 * (o * (o - 2) - 1) + n);\n    },\n    n = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol ? \"symbol\" : typeof o;\n    },\n    e = function () {\n      function e() {\n        return window.scrollY || window.pageYOffset;\n      }\n      function t(o) {\n        return o.getBoundingClientRect().top + d;\n      }\n      function i(o) {\n        v || (v = o), b = o - v, p = s(b, d, y, m), window.scrollTo(0, p), b < m ? requestAnimationFrame(i) : r();\n      }\n      function r() {\n        window.scrollTo(0, d + y), c && l && (c.setAttribute(\"tabindex\", \"-1\"), c.focus()), \"function\" == typeof w && w(), v = !1;\n      }\n      function u(r) {\n        var u = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];\n        switch (m = u.duration || 1e3, a = u.offset || 0, w = u.callback, s = u.easing || o, l = u.a11y || !1, d = e(), \"undefined\" == typeof r ? \"undefined\" : n(r)) {\n          case \"number\":\n            c = void 0, l = !1, f = d + r;\n            break;\n          case \"object\":\n            c = r, f = t(c);\n            break;\n          case \"string\":\n            c = document.querySelector(r), f = t(c);\n        }\n        switch (y = f - d + a, n(u.duration)) {\n          case \"number\":\n            m = u.duration;\n            break;\n          case \"function\":\n            m = u.duration(y);\n        }\n        requestAnimationFrame(i);\n      }\n      var c = void 0,\n        d = void 0,\n        f = void 0,\n        a = void 0,\n        s = void 0,\n        l = void 0,\n        y = void 0,\n        m = void 0,\n        v = void 0,\n        b = void 0,\n        p = void 0,\n        w = void 0;\n      return u;\n    },\n    t = e();\n  return t;\n});","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function (key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\nexport default createFind;","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\nexport default find;","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\nexport default findIndex;","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\nexport default isEqual;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _jump = require('jump.js');\nvar _jump2 = _interopRequireDefault(_jump);\nvar _func = require('./utils/func');\nvar _scroll = require('./utils/scroll');\nvar _hash = require('./utils/hash');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar defaultConfig = {\n  offset: 0,\n  scrollDuration: 400,\n  keepLastAnchorHash: false\n};\nvar Manager = function Manager() {\n  var _this = this;\n  _classCallCheck(this, Manager);\n  this.addListeners = function () {\n    window.addEventListener('scroll', _this.scrollHandler, false);\n    window.addEventListener('hashchange', _this.handleHashChange);\n  };\n  this.removeListeners = function () {\n    window.removeEventListener('scroll', _this.scrollHandler, false);\n    window.removeEventListener('hashchange', _this.handleHashChange);\n  };\n  this.configure = function (config) {\n    _this.config = _extends({}, defaultConfig, config);\n  };\n  this.goToTop = function () {\n    if ((0, _scroll.getScrollTop)() === 0) return;\n    _this.forcedHash = true;\n    window.scroll(0, 0);\n  };\n  this.addAnchor = function (id, component) {\n    // if this is the first anchor, set up listeners\n    if (Object.keys(_this.anchors).length === 0) {\n      _this.addListeners();\n    }\n    _this.forceHashUpdate();\n    _this.anchors[id] = component;\n  };\n  this.removeAnchor = function (id) {\n    delete _this.anchors[id];\n    // if this is the last anchor, remove listeners\n    if (Object.keys(_this.anchors).length === 0) {\n      _this.removeListeners();\n    }\n  };\n  this.handleScroll = function () {\n    var _config = _this.config,\n      offset = _config.offset,\n      keepLastAnchorHash = _config.keepLastAnchorHash;\n    var bestAnchorId = (0, _scroll.getBestAnchorGivenScrollLocation)(_this.anchors, offset);\n    if (bestAnchorId && (0, _hash.getHash)() !== bestAnchorId) {\n      _this.forcedHash = true;\n      (0, _hash.updateHash)(bestAnchorId, false);\n    } else if (!bestAnchorId && !keepLastAnchorHash) {\n      (0, _hash.removeHash)();\n    }\n  };\n  this.handleHashChange = function (e) {\n    if (_this.forcedHash) {\n      _this.forcedHash = false;\n    } else {\n      _this.goToSection((0, _hash.getHash)());\n    }\n  };\n  this.goToSection = function (id) {\n    var element = _this.anchors[id];\n    if (element) {\n      (0, _jump2.default)(element, {\n        duration: _this.config.scrollDuration,\n        offset: _this.config.offset\n      });\n    } else {\n      // make sure that standard hash anchors don't break.\n      // simply jump to them.\n      element = document.getElementById(id);\n      if (element) {\n        (0, _jump2.default)(element, {\n          duration: 0,\n          offset: _this.config.offset\n        });\n      }\n    }\n  };\n  this.anchors = {};\n  this.forcedHash = false;\n  this.config = defaultConfig;\n  this.scrollHandler = (0, _func.debounce)(this.handleScroll, 100);\n  this.forceHashUpdate = (0, _func.debounce)(this.handleHashChange, 1);\n};\nexports.default = new Manager();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _reactDom = require('react-dom');\nvar _reactDom2 = _interopRequireDefault(_reactDom);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _Manager = require('./Manager');\nvar _Manager2 = _interopRequireDefault(_Manager);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar ScrollableAnchor = function (_Component) {\n  _inherits(ScrollableAnchor, _Component);\n  function ScrollableAnchor(props) {\n    _classCallCheck(this, ScrollableAnchor);\n    var _this = _possibleConstructorReturn(this, (ScrollableAnchor.__proto__ || Object.getPrototypeOf(ScrollableAnchor)).call(this, props));\n    _this.id = props.id || props.children.ref;\n    return _this;\n  }\n  _createClass(ScrollableAnchor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var element = _reactDom2.default.findDOMNode(this.refs[Object.keys(this.refs)[0]]);\n      _Manager2.default.addAnchor(this.id, element);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      _Manager2.default.removeAnchor(this.id);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n        children = _props.children,\n        id = _props.id;\n      return _react2.default.cloneElement(children, {\n        ref: children.ref || id\n      });\n    }\n  }]);\n  return ScrollableAnchor;\n}(_react.Component);\nScrollableAnchor.propTypes = {\n  children: _propTypes2.default.node,\n  id: _propTypes2.default.string\n};\nexports.default = ScrollableAnchor;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.removeHash = exports.goToAnchor = exports.configureAnchors = exports.goToTop = undefined;\nvar _hash = require('./utils/hash');\nObject.defineProperty(exports, 'goToAnchor', {\n  enumerable: true,\n  get: function get() {\n    return _hash.updateHash;\n  }\n});\nObject.defineProperty(exports, 'removeHash', {\n  enumerable: true,\n  get: function get() {\n    return _hash.removeHash;\n  }\n});\nvar _ScrollableAnchor = require('./ScrollableAnchor');\nObject.defineProperty(exports, 'default', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ScrollableAnchor).default;\n  }\n});\nvar _Manager = require('./Manager');\nvar _Manager2 = _interopRequireDefault(_Manager);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar goToTop = exports.goToTop = _Manager2.default.goToTop;\nvar configureAnchors = exports.configureAnchors = _Manager2.default.configure;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _arguments = arguments;\nvar debounce = exports.debounce = function debounce(func, wait, immediate) {\n  var timeout = void 0;\n  return function () {\n    var context = undefined;\n    var args = _arguments;\n    var later = function later() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getHash = exports.getHash = function getHash() {\n  return decodeURI(window.location.hash.slice(1));\n};\nvar updateHash = exports.updateHash = function updateHash(hash, affectHistory) {\n  if (affectHistory) {\n    window.location.hash = hash;\n  } else {\n    window.location.replace(\"#\" + hash);\n  }\n};\n\n// remove hash in url without affecting history or forcing reload\nvar removeHash = exports.removeHash = function removeHash() {\n  history.replaceState(\"\", document.title, window.location.pathname + window.location.search);\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getScrollTop = exports.getScrollTop = function getScrollTop() {\n  return document.body.scrollTop || document.documentElement.scrollTop;\n};\n\n// get vertical offsets of element, taking scrollTop into consideration\nvar getElementOffset = exports.getElementOffset = function getElementOffset(element) {\n  var scrollTop = getScrollTop();\n  var _element$getBoundingC = element.getBoundingClientRect(),\n    top = _element$getBoundingC.top,\n    bottom = _element$getBoundingC.bottom;\n  return {\n    top: Math.floor(top + scrollTop),\n    bottom: Math.floor(bottom + scrollTop)\n  };\n};\n\n// does scrollTop live within element bounds?\nvar doesElementContainScrollTop = exports.doesElementContainScrollTop = function doesElementContainScrollTop(element) {\n  var extraOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var scrollTop = getScrollTop();\n  var offsetTop = getElementOffset(element).top + extraOffset;\n  return scrollTop >= offsetTop && scrollTop < offsetTop + element.offsetHeight;\n};\n\n// is el2's location more relevant than el2,\n// parent-child relationship aside?\nvar checkLocationRelevance = exports.checkLocationRelevance = function checkLocationRelevance(el1, el2) {\n  var _getElementOffset = getElementOffset(el1),\n    top1 = _getElementOffset.top,\n    bottom1 = _getElementOffset.bottom;\n  var _getElementOffset2 = getElementOffset(el2),\n    top2 = _getElementOffset2.top,\n    bottom2 = _getElementOffset2.bottom;\n  if (top1 === top2) {\n    if (bottom1 === bottom2) {\n      // top and bottom of compared elements are the same,\n      // so return one randomly in a deterministic way\n      return el1 < el2;\n    }\n    // top of compared elements is the same, so return whichever\n    // element has its bottom higher on the page\n    return bottom2 < bottom1;\n  }\n  // top of compared elements differ, so return true\n  // if tested element has its top lower on the page\n  return top2 > top1;\n};\n\n// check if el2 is more relevant than el1, considering child-parent\n// relationships as well as node location.\nvar checkElementRelevance = exports.checkElementRelevance = function checkElementRelevance(el1, el2) {\n  if (el1.contains(el2)) {\n    // el2 is child, so it gains relevance priority\n    return true;\n  } else if (!el2.contains(el1) && checkLocationRelevance(el1, el2)) {\n    // el1 and el2 are unrelated, but el2 has a better location,\n    // so it gains relevance priority\n    return true;\n  }\n  return false;\n};\n\n// given a set of anchors, find which one is, given the following logic:\n// 1. children nodes are more relevant than parent nodes\n// 2. if neither node contains the other, and their top locations differ,\n//    the node with the top lower on the page is more relevant\n// 3. if neither node contains the other, and their top locations are the same,\n//    the node with the bottom higher on the page is more relevant\n// 4. if neither node contains the other, and their top and bottom locations\n//    are the same, a node is chosen at random, in a deterministic way,\n//    to be more relevant.\nvar getBestAnchorGivenScrollLocation = exports.getBestAnchorGivenScrollLocation = function getBestAnchorGivenScrollLocation(anchors, offset) {\n  var bestId = void 0,\n    bestElement = void 0;\n  Object.keys(anchors).forEach(function (id) {\n    var element = anchors[id];\n    if (doesElementContainScrollTop(element, offset)) {\n      if (!bestElement || checkElementRelevance(bestElement, element)) {\n        bestElement = element;\n        bestId = id;\n      }\n    }\n  });\n  return bestId;\n};","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Modal } from '@freecodecamp/ui';\n\nimport { CompletedChallenge } from '../../redux/prop-types';\nimport SolutionViewer from './solution-viewer';\n\ntype ProjectModalProps = {\n  challengeFiles: CompletedChallenge['challengeFiles'] | null;\n  handleSolutionModalHide: () => void;\n  isOpen: boolean;\n  projectTitle: string;\n  solution?: string;\n};\n\nconst ProjectModal = ({\n  isOpen,\n  projectTitle,\n  challengeFiles,\n  solution,\n  handleSolutionModalHide\n}: ProjectModalProps): JSX.Element => {\n  const { t } = useTranslation();\n  return (\n    <Modal onClose={handleSolutionModalHide} open={isOpen} size='large'>\n      <Modal.Header showCloseButton={true} closeButtonClassNames='close'>\n        {t('settings.labels.solution-for', { projectTitle })}\n      </Modal.Header>\n      <Modal.Body alignment='left'>\n        <SolutionViewer challengeFiles={challengeFiles} solution={solution} />\n      </Modal.Body>\n      <Modal.Footer alignment='end'>\n        <Button\n          data-cy='solution-viewer-close-btn'\n          onClick={handleSolutionModalHide}\n        >\n          {t('buttons.close')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nProjectModal.displayName = 'ProjectModal';\n\nexport default ProjectModal;\n","import Prism from 'prismjs';\nimport React from 'react';\nimport { Panel } from '@freecodecamp/ui';\n\nimport type { ChallengeFile } from '../../redux/prop-types';\n\ntype Props = {\n  challengeFiles: Solution[] | null;\n  solution?: string;\n};\ntype Solution = Pick<ChallengeFile, 'ext' | 'contents' | 'fileKey'>;\n\nfunction SolutionViewer({ challengeFiles, solution }: Props): JSX.Element {\n  const isLegacy = !challengeFiles || !challengeFiles.length;\n  const solutions = isLegacy\n    ? [\n        {\n          ext: 'js',\n          contents:\n            solution ?? '// The solution is not available for this project',\n          fileKey: 'script.js'\n        }\n      ]\n    : challengeFiles;\n\n  return (\n    <>\n      {solutions.map(({ fileKey, ext, contents }) => (\n        <Panel variant='primary' className='solution-viewer' key={fileKey}>\n          <Panel.Heading>{ext.toUpperCase()}</Panel.Heading>\n          <Panel.Body>\n            <pre>\n              <code\n                dangerouslySetInnerHTML={{\n                  __html: Prism.highlight(\n                    contents.trim(),\n                    Prism.languages[ext],\n                    ext\n                  )\n                }}\n              />\n            </pre>\n          </Panel.Body>\n        </Panel>\n      ))}\n    </>\n  );\n}\nexport default SolutionViewer;\n","import { navigate } from 'gatsby';\nimport type { RouteComponentProps } from '@reach/router';\n\nconst createRedirect =\n  (to = '/'): ((_props: RouteComponentProps) => JSX.Element | null) =>\n  () => {\n    if (typeof window !== 'undefined') {\n      void navigate(to);\n    }\n    return null;\n  };\n\nexport default createRedirect;\n","import { Button, type ButtonProps } from '@freecodecamp/ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nfunction BlockSaveButton({\n  children,\n  bgSize,\n  ...restProps\n}: {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  bgSize?: ButtonProps['size'];\n}): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <Button\n      block={true}\n      // the button is used to submit solutions in projects that require external URL\n      // these buttons don't use bgSize, that's why the bgSize is optional.\n      size={bgSize}\n      type='submit'\n      {...restProps}\n    >\n      {children || t('buttons.save')}\n    </Button>\n  );\n}\n\nBlockSaveButton.displayName = 'BlockSaveButton';\n\nexport default BlockSaveButton;\n","import { withPrefix } from 'gatsby';\nimport createRedirect from './create-redirect';\n\nexport default createRedirect(withPrefix('/'));\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Spacer } from '../helpers';\n\nimport ToggleButtonSetting from './toggle-button-setting';\n\ntype KeyboardShortcutsProps = {\n  keyboardShortcuts: boolean;\n  toggleKeyboardShortcuts: (sound: boolean) => void;\n  explain?: string;\n};\n\nexport default function KeyboardShortcutsSettings({\n  keyboardShortcuts,\n  toggleKeyboardShortcuts,\n  explain\n}: KeyboardShortcutsProps): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <ToggleButtonSetting\n        action={t('settings.labels.keyboard-shortcuts')}\n        explain={explain}\n        flag={keyboardShortcuts}\n        flagName='keyboard-shortcuts'\n        offLabel={t('buttons.off')}\n        onLabel={t('buttons.on')}\n        toggleFlag={() => {\n          toggleKeyboardShortcuts(keyboardShortcuts ? false : true);\n        }}\n      />\n      <Spacer size='medium'></Spacer>\n    </>\n  );\n}\n\nKeyboardShortcutsSettings.displayName = 'KeyboardShortcutsSettings';\n","import React from 'react';\n\nimport FullWidthRow from '../helpers/full-width-row';\n\ntype SectionHeaderProps = {\n  children: string | React.ReactNode | React.ReactElement;\n  dataPlaywrightTestLabel?: string;\n};\n\nfunction SectionHeader({\n  children,\n  dataPlaywrightTestLabel\n}: SectionHeaderProps): JSX.Element {\n  return (\n    <FullWidthRow>\n      <h2\n        data-playwright-test-label={dataPlaywrightTestLabel}\n        className='text-center'\n      >\n        {children}\n      </h2>\n      <hr />\n    </FullWidthRow>\n  );\n}\n\nSectionHeader.displayName = 'SectionHeader';\n\nexport default SectionHeader;\n","import { Link, navigate } from 'gatsby';\nimport { find } from 'lodash-es';\nimport React, { MouseEvent, useState } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport type { TFunction } from 'i18next';\nimport { createSelector } from 'reselect';\nimport ScrollableAnchor, { configureAnchors } from 'react-scrollable-anchor';\nimport { connect } from 'react-redux';\nimport { Table, Button } from '@freecodecamp/ui';\n\nimport { regeneratePathAndHistory } from '../../../../shared/utils/polyvinyl';\nimport ProjectPreviewModal from '../../templates/Challenges/components/project-preview-modal';\nimport ExamResultsModal from '../SolutionViewer/exam-results-modal';\nimport { openModal } from '../../templates/Challenges/redux/actions';\nimport {\n  currentCertTitles,\n  legacyCertTitles,\n  upcomingCertTitles,\n  certsToProjects,\n  type CertTitle\n} from '../../../config/cert-and-project-map';\nimport { FlashMessages } from '../Flash/redux/flash-messages';\nimport ProjectModal from '../SolutionViewer/project-modal';\nimport { FullWidthRow, Spacer } from '../helpers';\nimport { SolutionDisplayWidget } from '../solution-display-widget';\nimport {\n  Certification,\n  certSlugTypeMap\n} from '../../../../shared/config/certification-settings';\nimport env from '../../../config/env.json';\n\nimport {\n  ClaimedCertifications,\n  CompletedChallenge,\n  GeneratedExamResults,\n  User\n} from '../../redux/prop-types';\nimport { createFlashMessage } from '../Flash/redux';\nimport { verifyCert } from '../../redux/settings/actions';\nimport SectionHeader from './section-header';\n\nimport './certification.css';\n\nconst { showUpcomingChanges } = env;\n\nconfigureAnchors({ offset: -40, scrollDuration: 0 });\n\nconst mapDispatchToProps = {\n  openModal\n};\n\nconst isCertSelector = ({\n  is2018DataVisCert,\n  isApisMicroservicesCert,\n  isJsAlgoDataStructCert,\n  isBackEndCert,\n  isDataVisCert,\n  isFrontEndCert,\n  isInfosecQaCert,\n  isQaCertV7,\n  isInfosecCertV7,\n  isFrontEndLibsCert,\n  isFullStackCert,\n  isRespWebDesignCert,\n  isSciCompPyCertV7,\n  isDataAnalysisPyCertV7,\n  isMachineLearningPyCertV7,\n  isRelationalDatabaseCertV8,\n  isCollegeAlgebraPyCertV8,\n  isFoundationalCSharpCertV8,\n  isJsAlgoDataStructCertV8\n}: ClaimedCertifications) => ({\n  is2018DataVisCert,\n  isApisMicroservicesCert,\n  isJsAlgoDataStructCert,\n  isBackEndCert,\n  isDataVisCert,\n  isFrontEndCert,\n  isInfosecQaCert,\n  isQaCertV7,\n  isInfosecCertV7,\n  isFrontEndLibsCert,\n  isFullStackCert,\n  isRespWebDesignCert,\n  isSciCompPyCertV7,\n  isDataAnalysisPyCertV7,\n  isMachineLearningPyCertV7,\n  isRelationalDatabaseCertV8,\n  isCollegeAlgebraPyCertV8,\n  isFoundationalCSharpCertV8,\n  isJsAlgoDataStructCertV8\n});\n\nconst isCertMapSelector = createSelector(\n  isCertSelector,\n  ({\n    is2018DataVisCert,\n    isApisMicroservicesCert,\n    isJsAlgoDataStructCert,\n    isInfosecQaCert,\n    isQaCertV7,\n    isInfosecCertV7,\n    isFrontEndLibsCert,\n    isRespWebDesignCert,\n    isDataVisCert,\n    isFrontEndCert,\n    isBackEndCert,\n    isSciCompPyCertV7,\n    isDataAnalysisPyCertV7,\n    isMachineLearningPyCertV7,\n    isRelationalDatabaseCertV8,\n    isCollegeAlgebraPyCertV8,\n    isFoundationalCSharpCertV8,\n    isJsAlgoDataStructCertV8\n  }) => ({\n    'Responsive Web Design': isRespWebDesignCert,\n    'Legacy JavaScript Algorithms and Data Structures': isJsAlgoDataStructCert,\n    'Front End Development Libraries': isFrontEndLibsCert,\n    'Data Visualization': is2018DataVisCert,\n    'Back End Development and APIs': isApisMicroservicesCert,\n    'Quality Assurance': isQaCertV7,\n    'Information Security': isInfosecCertV7,\n    'Scientific Computing with Python': isSciCompPyCertV7,\n    'Data Analysis with Python': isDataAnalysisPyCertV7,\n    'Machine Learning with Python': isMachineLearningPyCertV7,\n    'Relational Database': isRelationalDatabaseCertV8,\n    'College Algebra with Python': isCollegeAlgebraPyCertV8,\n    'Foundational C# with Microsoft': isFoundationalCSharpCertV8,\n    'Legacy Front End': isFrontEndCert,\n    'Legacy Data Visualization': isDataVisCert,\n    'Legacy Back End': isBackEndCert,\n    'Legacy Information Security and Quality Assurance': isInfosecQaCert,\n    // TODO: remove Example Certification? Also, include Upcoming Python\n    // Certification.\n    'Example Certification': false,\n    'Upcoming Python Certification': false,\n    'A2 English for Developers': false,\n    'B1 English for Developers': false,\n    'JavaScript Algorithms and Data Structures (Beta)': isJsAlgoDataStructCertV8\n  })\n);\n\nconst honestyInfoMessage = {\n  type: 'info',\n  message: FlashMessages.HonestFirst\n};\n\ntype CertificationSettingsProps = {\n  createFlashMessage: typeof createFlashMessage;\n  t: TFunction;\n  verifyCert: typeof verifyCert;\n  openModal: typeof openModal;\n} & ClaimedCertifications &\n  Pick<User, 'completedChallenges' | 'isHonest' | 'username'>;\n\nconst LegacyFullStack = (props: CertificationSettingsProps) => {\n  const {\n    isFullStackCert,\n    username,\n    isHonest,\n    createFlashMessage,\n    verifyCert,\n    is2018DataVisCert,\n    isApisMicroservicesCert,\n    isFrontEndLibsCert,\n    isInfosecQaCert,\n    isJsAlgoDataStructCert,\n    isRespWebDesignCert,\n    t\n  } = props;\n\n  const fullStackClaimable =\n    is2018DataVisCert &&\n    isApisMicroservicesCert &&\n    isFrontEndLibsCert &&\n    isInfosecQaCert &&\n    isJsAlgoDataStructCert &&\n    isRespWebDesignCert;\n\n  const certSlug = Certification.LegacyFullStack;\n  const certLocation = `/certification/${username}/${certSlug}`;\n\n  const createClickHandler =\n    (certSlug: keyof typeof certSlugTypeMap) =>\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault();\n      if (isFullStackCert) {\n        return navigate(certLocation);\n      }\n      return isHonest\n        ? verifyCert(certSlug)\n        : createFlashMessage(honestyInfoMessage);\n    };\n  return (\n    <FullWidthRow key={certSlug}>\n      <Spacer size='medium' />\n      <h3 className='text-center'>\n        {t('certification.title.Legacy Full Stack Certification')}\n      </h3>\n      <div>\n        <p>\n          {t('settings.claim-legacy', {\n            cert: t('certification.title.Legacy Full Stack Certification')\n          })}\n        </p>\n        <ul>\n          <li>{t('certification.title.Responsive Web Design')}</li>\n          <li>\n            {t('certification.title.JavaScript Algorithms and Data Structures')}\n          </li>\n          <li>{t('certification.title.Front End Development Libraries')}</li>\n          <li>{t('certification.title.Data Visualization')}</li>\n          <li>{t('certification.title.Back End Development and APIs')}</li>\n          <li>\n            {t(\n              'certification.title.Legacy Information Security and Quality Assurance'\n            )}\n          </li>\n        </ul>\n      </div>\n\n      <div>\n        {fullStackClaimable ? (\n          <Button\n            size='small'\n            variant='primary'\n            block={true}\n            href={certLocation}\n            id={'button-' + certSlug}\n            // This floating promise is acceptable\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            onClick={createClickHandler(certSlug)}\n            target='_blank'\n          >\n            {isFullStackCert ? t('buttons.show-cert') : t('buttons.claim-cert')}\n          </Button>\n        ) : (\n          <Button\n            size='small'\n            variant='primary'\n            block={true}\n            disabled={true}\n            id={'button-' + certSlug}\n          >\n            {t('buttons.claim-cert')}\n          </Button>\n        )}\n      </div>\n      <Spacer size='medium' />\n    </FullWidthRow>\n  );\n};\n\nfunction CertificationSettings(props: CertificationSettingsProps) {\n  const [projectTitle, setProjectTitle] = useState('');\n  const [challengeFiles, setChallengeFiles] = useState<\n    CompletedChallenge['challengeFiles'] | null\n  >(null);\n  const [challengeData, setChallengeData] = useState<CompletedChallenge | null>(\n    null\n  );\n  const [solution, setSolution] = useState<string | null>();\n  const [examResults, setExamResults] = useState<GeneratedExamResults | null>();\n  const [isOpen, setIsOpen] = useState(false);\n  function initialiseState() {\n    setProjectTitle('');\n    setChallengeFiles(null);\n    setSolution(null);\n    setExamResults(null);\n    setIsOpen(false);\n  }\n\n  const handleSolutionModalHide = () => initialiseState();\n\n  const getUserIsCertMap = () => isCertMapSelector(props);\n\n  const getProjectSolution = (projectId: string, projectTitle: string) => {\n    const { completedChallenges, openModal } = props;\n    const completedProject = find(\n      completedChallenges,\n      ({ id }) => projectId === id\n    );\n    if (!completedProject) {\n      return null;\n    }\n    const { solution, challengeFiles, examResults } = completedProject;\n    const showUserCode = () => {\n      setProjectTitle(projectTitle);\n      setChallengeFiles(challengeFiles);\n      setSolution(solution);\n      setIsOpen(true);\n    };\n\n    // Type == ChallengeFile or CompletedChallenge?\n    const challengeData = completedProject\n      ? {\n          ...completedProject,\n          challengeFiles:\n            completedProject?.challengeFiles?.map(regeneratePathAndHistory) ??\n            null\n        }\n      : null;\n\n    const showProjectPreview = () => {\n      setProjectTitle(projectTitle);\n      setChallengeData(challengeData);\n      openModal('projectPreview');\n    };\n\n    const showExamResults = () => {\n      setProjectTitle(projectTitle);\n      setExamResults(examResults as GeneratedExamResults);\n      openModal('examResults');\n    };\n\n    return (\n      <SolutionDisplayWidget\n        completedChallenge={completedProject}\n        projectTitle={projectTitle}\n        showExamResults={showExamResults}\n        showUserCode={showUserCode}\n        showProjectPreview={showProjectPreview}\n        displayContext='settings'\n      ></SolutionDisplayWidget>\n    );\n  };\n\n  const Certification = ({\n    certName,\n    t\n  }: {\n    certName: Exclude<CertTitle, 'Legacy Full Stack'>;\n    t: TFunction;\n  }) => {\n    const { certSlug } = certsToProjects[certName][0];\n    return (\n      <ScrollableAnchor id={`cert-${certSlug}`}>\n        <section>\n          <FullWidthRow>\n            <Spacer size='medium' />\n            <h3 className='text-center'>\n              {t(`certification.title.${certName}`, certName)}\n            </h3>\n            <Table>\n              <thead>\n                <tr>\n                  <th>{t('settings.labels.project-name')}</th>\n                  <th>{t('settings.labels.solution')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <ProjectsFor\n                  certName={certName}\n                  isCert={getUserIsCertMap()[certName]}\n                />\n              </tbody>\n            </Table>\n          </FullWidthRow>\n        </section>\n      </ScrollableAnchor>\n    );\n  };\n\n  function ProjectsFor({\n    certName,\n    isCert\n  }: {\n    certName: Exclude<CertTitle, 'Legacy Full Stack'>;\n    isCert: boolean;\n  }) {\n    const { username, isHonest, createFlashMessage, t, verifyCert } = props;\n    const { certSlug } = certsToProjects[certName][0];\n    const certLocation = `/certification/${username}/${certSlug}`;\n    const clickHandler = (e: MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault();\n      if (isCert) {\n        return navigate(certLocation);\n      }\n      return isHonest\n        ? verifyCert(certSlug)\n        : createFlashMessage(honestyInfoMessage);\n    };\n    return (\n      <>\n        {certsToProjects[certName].map(({ link, title, id }) => (\n          <tr className='project-row' key={id}>\n            <td className='project-title col-sm-8 col-xs-8'>\n              <Link to={link}>\n                {t(`certification.project.title.${title}`, title)}\n              </Link>\n            </td>\n            <td className='project-solution col-sm-4 col-xs-4'>\n              {getProjectSolution(id, title)}\n            </td>\n          </tr>\n        ))}\n        <tr key={`cert-${certSlug}-button`}>\n          <td colSpan={2}>\n            <Button\n              block={true}\n              variant='primary'\n              href={certLocation}\n              data-playwright-test-label={`btn-for-${certSlug}`}\n              // This floating promise is acceptable\n              // eslint-disable-next-line @typescript-eslint/no-misused-promises\n              onClick={clickHandler}\n            >\n              {isCert ? t('buttons.show-cert') : t('buttons.claim-cert')}{' '}\n              <span className='sr-only'>{certName}</span>\n            </Button>\n          </td>\n        </tr>\n      </>\n    );\n  }\n\n  const { t } = props;\n\n  return (\n    <section className='certification-settings'>\n      <SectionHeader>{t('settings.headings.certs')}</SectionHeader>\n      {currentCertTitles.map(title => (\n        <Certification key={title} certName={title} t={t} />\n      ))}\n      <Spacer size='medium' />\n      <SectionHeader>{t('settings.headings.legacy-certs')}</SectionHeader>\n      <LegacyFullStack {...props} />\n      {legacyCertTitles.map(title => (\n        <Certification key={title} certName={title} t={t} />\n      ))}\n      {showUpcomingChanges &&\n        upcomingCertTitles.map(title => (\n          <Certification key={title} certName={title} t={t} />\n        ))}\n      <ProjectModal\n        {...{\n          projectTitle,\n          challengeFiles,\n          solution: solution ?? undefined,\n          isOpen\n        }}\n        handleSolutionModalHide={handleSolutionModalHide}\n      />\n      <ProjectPreviewModal\n        challengeData={challengeData}\n        previewTitle={projectTitle}\n        closeText={t('buttons.close')}\n        showProjectPreview={true}\n      />\n      <ExamResultsModal projectTitle={projectTitle} examResults={examResults} />\n    </section>\n  );\n}\n\nCertificationSettings.displayName = 'CertificationSettings';\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withTranslation()(CertificationSettings));\n","import React, { ChangeEvent, useState } from 'react';\nimport store from 'store';\nimport { useTranslation } from 'react-i18next';\nimport { Spacer } from '../helpers';\n\nimport './sound.css';\nimport { playTone } from '../../utils/tone';\nimport ToggleButtonSetting from './toggle-button-setting';\n\ntype SoundProps = {\n  sound: boolean;\n  toggleSoundMode: (sound: boolean) => void;\n};\n\nexport default function SoundSettings({\n  sound,\n  toggleSoundMode\n}: SoundProps): JSX.Element {\n  const { t } = useTranslation();\n  const [volumeDisplay, setVolumeDisplay] = useState(\n    (store.get('soundVolume') as number) ?? 50\n  );\n  const [mayPlay, setMayPlay] = useState(true);\n\n  function handleVolumeChange(event: ChangeEvent<HTMLInputElement>) {\n    const inputValue = Number(event.target.value);\n\n    store.set('soundVolume', inputValue);\n\n    setVolumeDisplay((store.get('soundVolume') as number) ?? 50);\n\n    if (mayPlay) {\n      void playTone('tests-completed');\n      setMayPlay(false);\n      setTimeout(() => {\n        setMayPlay(true);\n      }, 200);\n    }\n  }\n\n  return (\n    <>\n      <ToggleButtonSetting\n        action={t('settings.labels.sound-mode')}\n        explain={t('settings.sound-mode')}\n        flag={sound}\n        flagName='sound'\n        offLabel={t('buttons.off')}\n        onLabel={t('buttons.on')}\n        toggleFlag={() => {\n          toggleSoundMode(sound ? false : true);\n        }}\n      />\n      <label htmlFor='volumeslider'>\n        {t('settings.sound-volume')}{' '}\n        <span aria-hidden='true'>{volumeDisplay}</span>\n      </label>\n      <input\n        type='range'\n        min='10'\n        max='100'\n        id='volumeslider'\n        defaultValue={volumeDisplay}\n        className='soundbar'\n        onInput={handleVolumeChange}\n      />\n      <Spacer size='medium'></Spacer>\n    </>\n  );\n}\n\nSoundSettings.displayName = 'SoundSettings';\n","/* eslint-disable @typescript-eslint/unbound-method */\nimport { FormControl, Alert, FormGroup, ControlLabel } from '@freecodecamp/ui';\nimport React, { Component } from 'react';\nimport type { TFunction } from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\n\nimport { isValidUsername } from '../../../../shared/utils/validate';\nimport { usernameValidationSelector } from '../../redux/settings/selectors';\nimport {\n  validateUsername,\n  submitNewUsername\n} from '../../redux/settings/actions';\nimport BlockSaveButton from '../helpers/form/block-save-button';\nimport FullWidthRow from '../helpers/full-width-row';\n\ntype UsernameProps = {\n  isValidUsername: boolean;\n  submitNewUsername: (name: string) => void;\n  t: TFunction;\n  username: string;\n  validateUsername: (name: string) => void;\n  validating: boolean;\n};\n\ntype UsernameState = {\n  isFormPristine: boolean;\n  formValue: string;\n  characterValidation: {\n    valid: boolean;\n    error: null | string;\n  };\n  submitClicked: boolean;\n  isUserNew: boolean;\n};\n\nconst mapStateToProps = createSelector(\n  usernameValidationSelector,\n  ({\n    isValidUsername,\n    fetchState\n  }: {\n    isValidUsername: boolean;\n    fetchState: {\n      pending: boolean;\n      complete: boolean;\n      errored: boolean;\n      error: boolean | null;\n    };\n  }) => ({\n    isValidUsername,\n    validating: fetchState.pending\n  })\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      submitNewUsername,\n      validateUsername\n    },\n    dispatch\n  );\n\nconst hex = '[0-9a-f]';\nconst tempUserRegex = new RegExp(`^fcc${hex}{8}-(${hex}{4}-){3}${hex}{12}$`);\n\nclass UsernameSettings extends Component<UsernameProps, UsernameState> {\n  static displayName: string;\n  constructor(props: UsernameProps) {\n    super(props);\n\n    this.state = {\n      isFormPristine: true,\n      formValue: props.username,\n      characterValidation: { valid: false, error: null },\n      submitClicked: false,\n      isUserNew: tempUserRegex.test(props.username)\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validateFormInput = this.validateFormInput.bind(this);\n  }\n\n  componentDidUpdate(prevProps: UsernameProps, prevState: UsernameState) {\n    const { username: prevUsername } = prevProps;\n    const { formValue: prevFormValue } = prevState;\n    const { username } = this.props;\n    const { formValue } = this.state;\n    if (prevUsername !== username && prevFormValue === formValue) {\n      return this.setState({\n        isFormPristine: username === formValue,\n        submitClicked: false,\n        isUserNew: tempUserRegex.test(username)\n      });\n    }\n    return null;\n  }\n\n  handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    const { submitNewUsername } = this.props;\n    const {\n      formValue,\n      characterValidation: { valid }\n    } = this.state;\n\n    return this.setState({ submitClicked: true }, () =>\n      valid ? submitNewUsername(formValue) : null\n    );\n  }\n\n  handleChange(e: React.FormEvent<HTMLInputElement>) {\n    e.preventDefault();\n    const { username, validateUsername } = this.props;\n    const newValue = (e.target as HTMLInputElement).value;\n    return this.setState(\n      {\n        formValue: newValue,\n        isFormPristine: username === newValue,\n        characterValidation: this.validateFormInput(newValue),\n        submitClicked: false\n      },\n      () =>\n        this.state.isFormPristine ||\n        this.state.characterValidation.error ||\n        username.toLowerCase().trim() === newValue.toLowerCase().trim()\n          ? null\n          : validateUsername(this.state.formValue)\n    );\n  }\n\n  validateFormInput(formValue: string) {\n    return isValidUsername(formValue);\n  }\n\n  renderAlerts(\n    validating: boolean,\n    error: string | null,\n    isValidUsername: boolean\n  ) {\n    const { t } = this.props;\n\n    if (!validating && error) {\n      return (\n        <FullWidthRow>\n          <Alert variant='danger'>\n            {t(`settings.username.${error}`, {\n              username: this.state.formValue\n            })}\n          </Alert>\n        </FullWidthRow>\n      );\n    }\n    if (!validating && !isValidUsername) {\n      return (\n        <FullWidthRow>\n          <Alert variant='warning'>{t('settings.username.unavailable')}</Alert>\n        </FullWidthRow>\n      );\n    }\n    if (validating) {\n      return (\n        <FullWidthRow>\n          <Alert variant='info'>{t('settings.username.validating')}</Alert>\n        </FullWidthRow>\n      );\n    }\n    if (!validating && isValidUsername && this.state.isUserNew) {\n      return (\n        <FullWidthRow>\n          <Alert variant='success'>{t('settings.username.available')}</Alert>\n        </FullWidthRow>\n      );\n    } else if (!validating && isValidUsername && !this.state.isUserNew) {\n      return (\n        <FullWidthRow>\n          <Alert variant='success'>{t('settings.username.available')}</Alert>\n          <Alert variant='info'>{t('settings.username.change')}</Alert>\n        </FullWidthRow>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const {\n      isFormPristine,\n      formValue,\n      characterValidation: { valid, error },\n      submitClicked\n    } = this.state;\n    const { isValidUsername, t, validating } = this.props;\n    const isDisabled =\n      !(isValidUsername && valid && !isFormPristine) || submitClicked;\n    return (\n      <form\n        id='usernameSettings'\n        onSubmit={this.handleSubmit}\n        data-cy='username-form'\n      >\n        <FullWidthRow>\n          <FormGroup>\n            <ControlLabel htmlFor='username-settings'>\n              <strong>{t('settings.labels.username')}</strong>\n            </ControlLabel>\n            <FormControl\n              name='username-settings'\n              onChange={this.handleChange}\n              value={formValue}\n              id='username-settings'\n            />\n          </FormGroup>\n        </FullWidthRow>\n        {!isFormPristine &&\n          this.renderAlerts(validating, error, isValidUsername)}\n        <FullWidthRow>\n          <BlockSaveButton\n            disabled={isDisabled}\n            bgSize='large'\n            {...(isDisabled && { tabIndex: -1 })}\n          >\n            {t('buttons.save')}{' '}\n            <span className='sr-only'>{t('settings.labels.username')}</span>\n          </BlockSaveButton>\n        </FullWidthRow>\n      </form>\n    );\n  }\n}\n\nUsernameSettings.displayName = 'UsernameSettings';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(UsernameSettings));\n","import { ns } from './action-types';\n\nexport const usernameValidationSelector = state => state[ns].usernameValidation;\n","import React, { ChangeEvent, useState, useRef } from 'react';\nimport store from 'store';\nimport { useTranslation } from 'react-i18next';\nimport { Spacer } from '../helpers';\nimport { getScrollbarWidth } from '../../utils/scrollbar-width';\nimport './scrollbar-width.css';\n\nconst ticks = [5, 10, 15, 20, 25];\n\nexport default function ScrollbarWidthSettings(): JSX.Element {\n  const { t } = useTranslation();\n  const [scrollbarWidth, setScrollbarWidth] = useState(getScrollbarWidth());\n  const rangeRef = useRef<HTMLInputElement>(null);\n\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\n    const inputValue = Number(event.target.value);\n    setScrollbarWidth(inputValue);\n    store.set('monacoScrollbarWidth', inputValue);\n  }\n\n  function handleClick(event: React.MouseEvent<HTMLSpanElement>) {\n    const target = event.target as HTMLSpanElement;\n    const newScrollbarWidth = Number(target.dataset.value);\n\n    if (!rangeRef?.current || !ticks.includes(newScrollbarWidth)) return;\n    rangeRef.current.focus();\n\n    if (newScrollbarWidth === scrollbarWidth) return;\n    rangeRef.current.value = String(newScrollbarWidth);\n    setScrollbarWidth(newScrollbarWidth);\n    store.set('monacoScrollbarWidth', newScrollbarWidth);\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */\n\n  return (\n    <>\n      <label htmlFor='scrollbar-width-slider'>\n        {t('settings.scrollbar-width')}:\n        <span\n          className='scrollbar-width-preview'\n          style={{ width: `${scrollbarWidth}px` } as React.CSSProperties}\n        />\n      </label>\n      <div className='scrollbar-width-container'>\n        <div className='scrollbar-width-ticks' aria-hidden='true'>\n          {ticks.map(tick => (\n            <span\n              className='tick'\n              onClick={handleClick}\n              data-value={tick}\n              key={`tick${tick}`}\n              {...(scrollbarWidth === tick && { 'data-current': true })}\n            />\n          ))}\n        </div>\n        <input\n          type='range'\n          min='5'\n          max='25'\n          step='5'\n          id='scrollbar-width-slider'\n          className='scrollbar-width'\n          defaultValue={scrollbarWidth}\n          onInput={handleChange}\n          ref={rangeRef}\n        />\n        <div className='scrollbar-width-numbers' aria-hidden='true'>\n          {ticks.map(tick => (\n            <span\n              onClick={handleClick}\n              data-value={tick}\n              key={`num${tick}`}\n              {...(scrollbarWidth === tick && { className: 'selected' })}\n            >\n              {tick}\n            </span>\n          ))}\n        </div>\n      </div>\n      <Spacer size='medium'></Spacer>\n    </>\n  );\n}\n\nScrollbarWidthSettings.displayName = 'ScrollbarWidthSettings';\n","import React, { Component } from 'react';\nimport {\n  FormGroup,\n  FormControl,\n  HelpBlock,\n  Alert,\n  ControlLabel\n} from '@freecodecamp/ui';\nimport type { TFunction } from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport isURL from 'validator/lib/isURL';\n\nimport { FullWidthRow, Spacer } from '../helpers';\nimport BlockSaveButton from '../helpers/form/block-save-button';\nimport type { CamperProps } from '../profile/components/camper';\nimport SoundSettings from './sound';\nimport ThemeSettings, { type ThemeProps } from './theme';\nimport UsernameSettings from './username';\nimport KeyboardShortcutsSettings from './keyboard-shortcuts';\nimport SectionHeader from './section-header';\nimport ScrollbarWidthSettings from './scrollbar-width';\n\ntype AboutProps = ThemeProps &\n  Omit<\n    CamperProps,\n    | 'linkedin'\n    | 'joinDate'\n    | 'isDonating'\n    | 'githubProfile'\n    | 'twitter'\n    | 'website'\n    | 'yearsTopContributor'\n  > & {\n    sound: boolean;\n    keyboardShortcuts: boolean;\n    submitNewAbout: (formValues: FormValues) => void;\n    t: TFunction;\n    toggleSoundMode: (sound: boolean) => void;\n    toggleKeyboardShortcuts: (keyboardShortcuts: boolean) => void;\n  };\n\ntype FormValues = Pick<AboutProps, 'name' | 'location' | 'picture' | 'about'>;\n\ntype AboutState = {\n  formValues: FormValues;\n  originalValues: FormValues;\n  formClicked: boolean;\n  isPictureUrlValid: boolean;\n};\n\nconst ShowImageValidationWarning = ({\n  alertContent\n}: {\n  alertContent: string;\n}) => {\n  return (\n    <HelpBlock>\n      <Alert variant='info'>{alertContent}</Alert>\n    </HelpBlock>\n  );\n};\n\nclass AboutSettings extends Component<AboutProps, AboutState> {\n  validationImage: HTMLImageElement;\n  static displayName: string;\n  constructor(props: AboutProps) {\n    super(props);\n    this.validationImage = new Image();\n    const { name = '', location = '', picture = '', about = '' } = props;\n    const values = {\n      name,\n      location,\n      picture,\n      about\n    };\n    this.state = {\n      formValues: { ...values },\n      originalValues: { ...values },\n      formClicked: false,\n      isPictureUrlValid: true\n    };\n  }\n\n  componentDidUpdate() {\n    const { name, location, picture, about } = this.props;\n    const { formValues, formClicked } = this.state;\n    if (\n      formClicked &&\n      name === formValues.name &&\n      location === formValues.location &&\n      picture === formValues.picture &&\n      about === formValues.about\n    ) {\n      return this.setState({\n        originalValues: {\n          name,\n          location,\n          picture,\n          about\n        },\n        formClicked: false\n      });\n    }\n    return null;\n  }\n\n  isFormPristine = () => {\n    const { formValues, originalValues } = this.state;\n    return (\n      this.state.isPictureUrlValid === false ||\n      (Object.keys(originalValues) as Array<keyof FormValues>)\n        .map(key => originalValues[key] === formValues[key])\n        .every(bool => bool)\n    );\n  };\n\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { formValues } = this.state;\n    const { submitNewAbout } = this.props;\n    if (this.state.isPictureUrlValid === true && !this.isFormPristine()) {\n      return this.setState({ formClicked: true }, () =>\n        submitNewAbout(formValues)\n      );\n    } else {\n      return false;\n    }\n  };\n\n  handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = (e.target as HTMLInputElement).value.slice(0);\n    return this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        name: value\n      }\n    }));\n  };\n\n  handleLocationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = (e.target as HTMLInputElement).value.slice(0);\n    return this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        location: value\n      }\n    }));\n  };\n\n  componentDidMount() {\n    this.validationImage.addEventListener('error', this.errorEvent);\n    this.validationImage.addEventListener('load', this.loadEvent);\n  }\n\n  componentWillUnmount() {\n    this.validationImage.removeEventListener('load', this.loadEvent);\n    this.validationImage.removeEventListener('error', this.errorEvent);\n  }\n\n  loadEvent = () => this.setState({ isPictureUrlValid: true });\n  errorEvent = () =>\n    this.setState(state => ({\n      isPictureUrlValid: state.formValues.picture === ''\n    }));\n\n  handlePictureChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = (e.target as HTMLInputElement).value.slice(0);\n    if (isURL(value, { require_protocol: true })) {\n      this.validationImage.src = encodeURI(value);\n    } else {\n      this.setState({\n        isPictureUrlValid: false\n      });\n    }\n    this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        picture: value\n      }\n    }));\n  };\n\n  handleAboutChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = (e.target as HTMLInputElement).value.slice(0);\n    return this.setState(state => ({\n      formValues: {\n        ...state.formValues,\n        about: value\n      }\n    }));\n  };\n\n  render() {\n    const {\n      formValues: { name, location, picture, about }\n    } = this.state;\n    const {\n      currentTheme,\n      sound,\n      keyboardShortcuts,\n      username,\n      t,\n      toggleNightMode,\n      toggleSoundMode,\n      toggleKeyboardShortcuts\n    } = this.props;\n    return (\n      <>\n        <UsernameSettings username={username} />\n        <Spacer size='medium' />\n        <SectionHeader>{t('settings.headings.personal-info')}</SectionHeader>\n        <FullWidthRow>\n          <form\n            id='camper-identity'\n            onSubmit={this.handleSubmit}\n            data-playwright-test-label='camper-identity'\n          >\n            <div role='group' aria-label={t('settings.headings.personal-info')}>\n              <FormGroup controlId='about-name'>\n                <ControlLabel htmlFor='about-name-input'>\n                  <strong>{t('settings.labels.name')}</strong>\n                </ControlLabel>\n                <FormControl\n                  onChange={this.handleNameChange}\n                  type='text'\n                  value={name}\n                  id='about-name-input'\n                />\n              </FormGroup>\n              <FormGroup controlId='about-location'>\n                <ControlLabel htmlFor='about-location-input'>\n                  <strong>{t('settings.labels.location')}</strong>\n                </ControlLabel>\n                <FormControl\n                  onChange={this.handleLocationChange}\n                  type='text'\n                  value={location}\n                  id='about-location-input'\n                />\n              </FormGroup>\n              <FormGroup controlId='about-picture'>\n                <ControlLabel htmlFor='about-picture-input'>\n                  <strong>{t('settings.labels.picture')}</strong>\n                </ControlLabel>\n                <FormControl\n                  onChange={this.handlePictureChange}\n                  type='url'\n                  value={picture}\n                  id='about-picture-input'\n                />\n                {!this.state.isPictureUrlValid && (\n                  <ShowImageValidationWarning\n                    alertContent={t('validation.url-not-image')}\n                  />\n                )}\n              </FormGroup>\n              <FormGroup controlId='about-about'>\n                <ControlLabel htmlFor='about-about-input'>\n                  <strong>{t('settings.labels.about')}</strong>\n                </ControlLabel>\n                <FormControl\n                  componentClass='textarea'\n                  onChange={this.handleAboutChange}\n                  value={about}\n                  id='about-about-input'\n                />\n              </FormGroup>\n            </div>\n            <BlockSaveButton\n              disabled={this.isFormPristine()}\n              bgSize='large'\n              {...(this.isFormPristine() && { tabIndex: -1 })}\n            >\n              {t('buttons.save')}{' '}\n              <span className='sr-only'>\n                {t('settings.headings.personal-info')}\n              </span>\n            </BlockSaveButton>\n          </form>\n        </FullWidthRow>\n        <Spacer size='medium' />\n        <FullWidthRow>\n          <ThemeSettings\n            currentTheme={currentTheme}\n            toggleNightMode={toggleNightMode}\n          />\n          <SoundSettings sound={sound} toggleSoundMode={toggleSoundMode} />\n          <KeyboardShortcutsSettings\n            keyboardShortcuts={keyboardShortcuts}\n            toggleKeyboardShortcuts={toggleKeyboardShortcuts}\n            explain={t('settings.shortcuts-explained')}\n          />\n          <ScrollbarWidthSettings />\n        </FullWidthRow>\n      </>\n    );\n  }\n}\n\nAboutSettings.displayName = 'AboutSettings';\n\nexport default withTranslation()(AboutSettings);\n","import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Button, Modal } from '@freecodecamp/ui';\n\nimport { Spacer } from '../helpers';\n\ntype DeleteModalProps = {\n  delete: () => void;\n  onHide: () => void;\n  show: boolean;\n};\n\nfunction DeleteModal(props: DeleteModalProps): JSX.Element {\n  const { show, onHide } = props;\n  const email = 'support@freecodecamp.org';\n  const { t } = useTranslation();\n  return (\n    <Modal onClose={onHide} open={show} variant='danger' size='large'>\n      <Modal.Header showCloseButton={true} closeButtonClassNames='close'>\n        {t('settings.danger.delete-title')}\n      </Modal.Header>\n      <Modal.Body>\n        <p>{t('settings.danger.delete-p1')}</p>\n        <p>{t('settings.danger.delete-p2')}</p>\n        <p>\n          <Trans i18nKey='settings.danger.delete-p3'>\n            <a href={`mailto:${email}`} title={email}>\n              {{ email }}\n            </a>\n          </Trans>\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          onClick={props.onHide}\n          type='button'\n        >\n          {t('settings.danger.nevermind')}\n        </Button>\n        <Spacer size='small' />\n        <Button\n          block={true}\n          size='large'\n          variant='danger'\n          onClick={props.delete}\n          type='button'\n        >\n          {t('settings.danger.certain')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nDeleteModal.displayName = 'DeleteModal';\n\nexport default DeleteModal;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Modal } from '@freecodecamp/ui';\n\nimport { Spacer } from '../helpers';\n\ntype ResetModalProps = {\n  onHide: () => void;\n  reset: () => void;\n  show: boolean;\n};\n\nfunction ResetModal(props: ResetModalProps): JSX.Element {\n  const { t } = useTranslation();\n  const { show, onHide } = props;\n\n  return (\n    <Modal size='large' onClose={onHide} variant='danger' open={show}>\n      <Modal.Header showCloseButton={true} closeButtonClassNames='close'>\n        {t('settings.danger.reset-heading')}\n      </Modal.Header>\n      <Modal.Body alignment='start'>\n        <p>{t('settings.danger.reset-p1')}</p>\n        <ul>\n          <li>{t('settings.danger.reset-item-1')}</li>\n          <li>{t('settings.danger.reset-item-2')}</li>\n          <li>{t('settings.danger.reset-item-3')}</li>\n        </ul>\n        <p>{t('settings.danger.reset-p2')}</p>\n        <p>{t('settings.danger.reset-p3')}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          onClick={props.onHide}\n          type='button'\n        >\n          {t('settings.danger.nevermind-2')}\n        </Button>\n        <Spacer size='small' />\n        <Button\n          block={true}\n          size='large'\n          variant='danger'\n          onClick={props.reset}\n          type='button'\n        >\n          {t('settings.danger.reset-confirm')}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nResetModal.displayName = 'ResetModal';\n\nexport default ResetModal;\n","import React, { useState } from 'react';\nimport type { TFunction } from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { Panel, Button } from '@freecodecamp/ui';\n\nimport { deleteAccount, resetProgress } from '../../redux/settings/actions';\nimport { FullWidthRow, Spacer } from '../helpers';\nimport DeleteModal from './delete-modal';\nimport ResetModal from './reset-modal';\n\ninterface DangerZoneProps {\n  deleteAccount: () => void;\n  resetProgress: () => void;\n  t: TFunction;\n}\n\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      deleteAccount,\n      resetProgress\n    },\n    dispatch\n  );\n\nfunction DangerZone({ deleteAccount, resetProgress, t }: DangerZoneProps) {\n  const [reset, setReset] = useState(false);\n  const [delete_, setDelete] = useState(false);\n  // delete is reserved\n\n  function toggleResetModal(): void {\n    setReset(prev => !prev);\n  }\n\n  function toggleDeleteModal(): void {\n    setDelete(prev => !prev);\n  }\n\n  return (\n    <FullWidthRow className='danger-zone text-center'>\n      <Panel variant='danger' id='danger-zone'>\n        <Panel.Heading>{t('settings.danger.heading')}</Panel.Heading>\n        <Spacer size='medium' />\n        <p>{t('settings.danger.be-careful')}</p>\n        <FullWidthRow>\n          <Button\n            block={true}\n            size='large'\n            variant='danger'\n            onClick={toggleResetModal}\n            type='button'\n          >\n            {t('settings.danger.reset')}\n          </Button>\n          <Spacer size='small' />\n          <Button\n            block={true}\n            size='large'\n            variant='danger'\n            onClick={toggleDeleteModal}\n            type='button'\n          >\n            {t('settings.danger.delete')}\n          </Button>\n          <Spacer size='medium' />\n        </FullWidthRow>\n      </Panel>\n\n      <ResetModal\n        onHide={toggleResetModal}\n        reset={resetProgress}\n        show={reset}\n      />\n      <DeleteModal\n        delete={deleteAccount}\n        onHide={toggleDeleteModal}\n        show={delete_}\n      />\n    </FullWidthRow>\n  );\n}\n\nDangerZone.displayName = 'DangerZone';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(DangerZone));\n","import {\n  HelpBlock,\n  Alert,\n  FormGroup,\n  FormGroupProps,\n  FormControl,\n  ControlLabel,\n  Button\n} from '@freecodecamp/ui';\nimport { Link } from 'gatsby';\nimport React, { useState } from 'react';\nimport type { TFunction } from 'i18next';\nimport { Trans, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport isEmail from 'validator/lib/isEmail';\n\nimport { updateMyEmail } from '../../redux/settings/actions';\nimport { maybeEmailRE } from '../../utils';\n\nimport BlockSaveButton from '../helpers/form/block-save-button';\nimport FullWidthRow from '../helpers/full-width-row';\nimport Spacer from '../helpers/spacer';\nimport SectionHeader from './section-header';\nimport ToggleButtonSetting from './toggle-button-setting';\n\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ updateMyEmail }, dispatch);\n\ntype EmailProps = {\n  email: string;\n  isEmailVerified: boolean;\n  sendQuincyEmail: boolean;\n  t: TFunction;\n  updateMyEmail: (email: string) => void;\n  updateQuincyEmail: (sendQuincyEmail: boolean) => void;\n};\n\ninterface EmailForm {\n  currentEmail: string;\n  newEmail: string;\n  confirmNewEmail: string;\n  isPristine: boolean;\n}\n\ninterface EmailValidation {\n  state: FormGroupProps['validationState'];\n  message: string;\n}\n\nfunction EmailSettings({\n  email,\n  isEmailVerified,\n  sendQuincyEmail,\n  t,\n  updateMyEmail,\n  updateQuincyEmail\n}: EmailProps): JSX.Element {\n  const [emailForm, setEmailForm] = useState<EmailForm>({\n    currentEmail: email,\n    newEmail: '',\n    confirmNewEmail: '',\n    isPristine: true\n  });\n\n  function handleSubmit(e: React.FormEvent): void {\n    e.preventDefault();\n    updateMyEmail(emailForm.newEmail);\n  }\n\n  function createHandleEmailFormChange(\n    key: 'newEmail' | 'confirmNewEmail'\n  ): (e: React.ChangeEvent<HTMLInputElement>) => void {\n    return e => {\n      e.preventDefault();\n      const userInput = e.target.value.slice();\n      setEmailForm(prev => ({\n        ...prev,\n        [key]: userInput,\n        isPristine: userInput === prev.currentEmail\n      }));\n    };\n  }\n\n  function getValidationForNewEmail(): EmailValidation {\n    const { newEmail, currentEmail } = emailForm;\n    if (!maybeEmailRE.test(newEmail)) {\n      return {\n        state: null,\n        message: ''\n      };\n    }\n    if (newEmail === currentEmail) {\n      return {\n        state: 'error',\n        message: t('validation.same-email')\n      };\n    }\n    if (isEmail(newEmail)) {\n      return { state: 'success', message: '' };\n    } else {\n      return {\n        state: 'error',\n        message: t('validation.invalid-email')\n      };\n    }\n  }\n\n  function getValidationForConfirmEmail(): EmailValidation {\n    const { confirmNewEmail, newEmail } = emailForm;\n    if (!maybeEmailRE.test(newEmail)) {\n      return {\n        state: null,\n        message: ''\n      };\n    }\n    const isMatch = newEmail === confirmNewEmail;\n    if (maybeEmailRE.test(confirmNewEmail)) {\n      return {\n        state: isMatch ? 'success' : 'error',\n        message: isMatch ? '' : t('validation.email-mismatch')\n      };\n    } else {\n      return {\n        state: null,\n        message: ''\n      };\n    }\n  }\n\n  const { newEmail, confirmNewEmail, currentEmail, isPristine } = emailForm;\n\n  const { state: newEmailValidation, message: newEmailValidationMessage } =\n    getValidationForNewEmail();\n\n  const {\n    state: confirmEmailValidation,\n    message: confirmEmailValidationMessage\n  } = getValidationForConfirmEmail();\n  const isDisabled =\n    newEmailValidation !== 'success' ||\n    confirmEmailValidation !== 'success' ||\n    isPristine;\n  if (!currentEmail) {\n    return (\n      <div>\n        <FullWidthRow>\n          <p className='large-p text-center'>{t('settings.email.missing')}</p>\n        </FullWidthRow>\n        <FullWidthRow>\n          <Button\n            block={true}\n            size='large'\n            variant='primary'\n            href='/update-email'\n          >\n            {t('buttons.edit')}\n          </Button>\n        </FullWidthRow>\n      </div>\n    );\n  }\n  return (\n    <div className='email-settings'>\n      <SectionHeader>{t('settings.email.heading')}</SectionHeader>\n      {isEmailVerified ? null : (\n        <FullWidthRow>\n          <HelpBlock>\n            <Alert\n              variant='info'\n              className='text-center'\n              data-playwright-test-label='email-verification-alert'\n            >\n              {t('settings.email.not-verified')}\n              <br />\n              <Trans i18nKey='settings.email.check'>\n                <Link\n                  data-playwright-test-label='email-verification-link'\n                  to='/update-email'\n                />\n              </Trans>\n            </Alert>\n          </HelpBlock>\n        </FullWidthRow>\n      )}\n      <FullWidthRow>\n        <form\n          id='form-update-email'\n          data-cy='form-update-email'\n          {...(!isDisabled\n            ? { onSubmit: handleSubmit }\n            : { onSubmit: e => e.preventDefault() })}\n        >\n          <FormGroup controlId='current-email'>\n            <ControlLabel>{t('settings.email.current')}</ControlLabel>\n            <FormControl.Static>{currentEmail}</FormControl.Static>\n          </FormGroup>\n          <div role='group' aria-label={t('settings.email.heading')}>\n            <FormGroup\n              controlId='new-email'\n              validationState={newEmailValidation}\n            >\n              <ControlLabel htmlFor='new-email-input'>\n                {t('settings.email.new')}\n              </ControlLabel>\n              <FormControl\n                data-cy='email-input'\n                onChange={createHandleEmailFormChange('newEmail')}\n                type='email'\n                value={newEmail}\n                id='new-email-input'\n              />\n              {newEmailValidationMessage ? (\n                <HelpBlock data-playwright-test-label='new-email-validation'>\n                  {newEmailValidationMessage}\n                </HelpBlock>\n              ) : null}\n            </FormGroup>\n            <FormGroup\n              controlId='confirm-email'\n              validationState={confirmEmailValidation}\n            >\n              <ControlLabel htmlFor='confirm-email-input'>\n                {t('settings.email.confirm')}\n              </ControlLabel>\n              <FormControl\n                data-cy='confirm-email'\n                onChange={createHandleEmailFormChange('confirmNewEmail')}\n                type='email'\n                value={confirmNewEmail}\n                id='confirm-email-input'\n              />\n              {confirmEmailValidationMessage ? (\n                <HelpBlock data-playwright-test-label='confirm-email-validation'>\n                  {confirmEmailValidationMessage}\n                </HelpBlock>\n              ) : null}\n            </FormGroup>\n          </div>\n          <BlockSaveButton\n            disabled={isDisabled}\n            bgSize='large'\n            {...(isDisabled && { tabIndex: -1 })}\n          >\n            {t('buttons.save')}{' '}\n            <span className='sr-only'>{t('settings.email.heading')}</span>\n          </BlockSaveButton>\n        </form>\n      </FullWidthRow>\n      <Spacer size='medium' />\n      <FullWidthRow>\n        <ToggleButtonSetting\n          action={t('settings.email.weekly')}\n          flag={sendQuincyEmail}\n          flagName='sendQuincyEmail'\n          offLabel={t('buttons.no-thanks')}\n          onLabel={t('buttons.yes-please')}\n          toggleFlag={() => updateQuincyEmail(!sendQuincyEmail)}\n        />\n      </FullWidthRow>\n    </div>\n  );\n}\n\nEmailSettings.displayName = 'EmailSettings';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(EmailSettings));\n","import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Panel, Button } from '@freecodecamp/ui';\n\nimport { FullWidthRow } from '../helpers';\nimport SectionHeader from './section-header';\n\nimport './honesty.css';\n\ntype HonestyProps = {\n  isHonest: boolean;\n  updateIsHonest: (obj: { isHonest: boolean }) => void;\n};\n\nconst email = 'support@freecodecamp.org';\nconst Honesty = ({ isHonest, updateIsHonest }: HonestyProps): JSX.Element => {\n  const { t } = useTranslation();\n  const buttonText = isHonest\n    ? t('buttons.accepted-honesty')\n    : t('buttons.agree-honesty');\n\n  return (\n    <section id='honesty-policy'>\n      <SectionHeader>{t('settings.headings.honesty')}</SectionHeader>\n      <FullWidthRow>\n        <Panel className='honesty-panel'>\n          <p>{t('settings.honesty.p1')}</p>\n          <p>{t('settings.honesty.p2')}</p>\n          <p>{t('settings.honesty.p3')}</p>\n          <p>{t('settings.honesty.p4')}</p>\n          <p>{t('settings.honesty.p5')}</p>\n          <p>{t('settings.honesty.p6')}</p>\n          <p>\n            <Trans i18nKey='settings.honesty.p7'>\n              <a href={`mailto:${email}`}>{{ email }}</a>\n            </Trans>\n          </p>\n        </Panel>\n        <Button\n          block={true}\n          variant='primary'\n          disabled={isHonest}\n          onClick={() => !isHonest && updateIsHonest({ isHonest: true })}\n        >\n          {buttonText}\n        </Button>\n      </FullWidthRow>\n    </section>\n  );\n};\n\nHonesty.displayName = 'Honesty';\n\nexport default Honesty;\n","import { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport type { TFunction } from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport isURL from 'validator/lib/isURL';\nimport {\n  FormControl,\n  FormGroup,\n  ControlLabel,\n  HelpBlock,\n  type FormGroupProps\n} from '@freecodecamp/ui';\n\nimport { maybeUrlRE } from '../../utils';\n\nimport { FullWidthRow } from '../helpers';\nimport BlockSaveButton from '../helpers/form/block-save-button';\nimport SectionHeader from './section-header';\n\nexport interface Socials {\n  githubProfile: string;\n  linkedin: string;\n  twitter: string;\n  website: string;\n}\n\ninterface InternetProps extends Socials {\n  t: TFunction;\n  updateSocials: (formValues: Socials) => void;\n}\n\ntype InternetState = {\n  formValues: Socials;\n  originalValues: Socials;\n};\n\ninterface URLValidation {\n  state: FormGroupProps['validationState'];\n  message: string;\n}\n\nfunction Info({ message }: { message: string }) {\n  return message ? <HelpBlock>{message}</HelpBlock> : null;\n}\n\nclass InternetSettings extends Component<InternetProps, InternetState> {\n  static displayName: string;\n  constructor(props: InternetProps) {\n    super(props);\n    const {\n      githubProfile = '',\n      linkedin = '',\n      twitter = '',\n      website = ''\n    } = props;\n\n    this.state = {\n      formValues: { githubProfile, linkedin, twitter, website },\n      originalValues: { githubProfile, linkedin, twitter, website }\n    };\n  }\n\n  componentDidUpdate() {\n    const {\n      githubProfile = '',\n      linkedin = '',\n      twitter = '',\n      website = ''\n    } = this.props;\n\n    const { originalValues } = this.state;\n\n    if (\n      githubProfile !== originalValues.githubProfile ||\n      linkedin !== originalValues.linkedin ||\n      twitter !== originalValues.twitter ||\n      website !== originalValues.website\n    ) {\n      return this.setState({\n        originalValues: { githubProfile, linkedin, twitter, website }\n      });\n    }\n    return null;\n  }\n\n  getValidationStateFor(maybeURl = ''): URLValidation {\n    const { t } = this.props;\n    if (!maybeURl || !maybeUrlRE.test(maybeURl)) {\n      return {\n        state: null,\n        message: ''\n      };\n    }\n    if (isURL(maybeURl)) {\n      return {\n        state: 'success',\n        message: ''\n      };\n    }\n    return {\n      state: 'error',\n      message: t('validation.invalid-url')\n    };\n  }\n\n  createHandleChange =\n    (key: keyof Socials) => (e: React.FormEvent<HTMLInputElement>) => {\n      const value = (e.target as HTMLInputElement).value.slice(0);\n      return this.setState(state => ({\n        formValues: {\n          ...state.formValues,\n          [key]: value\n        }\n      }));\n    };\n\n  isFormPristine = () => {\n    const { formValues, originalValues } = this.state;\n    return (Object.keys(originalValues) as Array<keyof Socials>).every(\n      key => originalValues[key] === formValues[key]\n    );\n  };\n\n  isFormValid = (): boolean =>\n    Object.values(this.state.formValues).every(\n      (value: string) => value === '' || isURL(value)\n    );\n\n  handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!this.isFormPristine() && this.isFormValid()) {\n      // // Only submit the form if is has changed, and if it is valid\n      const { formValues } = this.state;\n\n      const { updateSocials } = this.props;\n      return updateSocials({ ...formValues });\n    }\n    return null;\n  };\n\n  renderCheck = (\n    url: string,\n    validation: FormGroupProps['validationState'],\n    dataPlaywrightTestLabel: string\n  ) =>\n    url && validation === 'success' ? (\n      <FormControl.Feedback>\n        <span>\n          <FontAwesomeIcon\n            data-playwright-test-label={dataPlaywrightTestLabel}\n            icon={faCheck}\n            size='1x'\n          />\n        </span>\n      </FormControl.Feedback>\n    ) : null;\n\n  render() {\n    const { t } = this.props;\n    const {\n      formValues: { githubProfile, linkedin, twitter, website }\n    } = this.state;\n\n    const {\n      state: githubProfileValidation,\n      message: githubProfileValidationMessage\n    } = this.getValidationStateFor(githubProfile);\n\n    const { state: linkedinValidation, message: linkedinValidationMessage } =\n      this.getValidationStateFor(linkedin);\n\n    const { state: twitterValidation, message: twitterValidationMessage } =\n      this.getValidationStateFor(twitter);\n\n    const { state: websiteValidation, message: websiteValidationMessage } =\n      this.getValidationStateFor(website);\n    const isDisabled = this.isFormPristine() || !this.isFormValid();\n    return (\n      <>\n        <SectionHeader>{t('settings.headings.internet')}</SectionHeader>\n        <FullWidthRow>\n          <form\n            id='internet-presence'\n            onSubmit={this.handleSubmit}\n            data-playwright-test-label='internet-presence'\n          >\n            <div role='group' aria-label={t('settings.headings.internet')}>\n              <FormGroup\n                controlId='internet-github'\n                validationState={githubProfileValidation}\n              >\n                <ControlLabel htmlFor='internet-github-input'>\n                  GitHub\n                </ControlLabel>\n                <FormControl\n                  data-playwright-test-label='internet-github-input'\n                  onChange={this.createHandleChange('githubProfile')}\n                  placeholder='https://github.com/user-name'\n                  type='url'\n                  value={githubProfile}\n                  id='internet-github-input'\n                />\n                {this.renderCheck(\n                  githubProfile,\n                  githubProfileValidation,\n                  'internet-github-check'\n                )}\n                <Info message={githubProfileValidationMessage} />\n              </FormGroup>\n              <FormGroup\n                controlId='internet-linkedin'\n                validationState={linkedinValidation}\n              >\n                <ControlLabel htmlFor='internet-linkedin-input'>\n                  LinkedIn\n                </ControlLabel>\n                <FormControl\n                  onChange={this.createHandleChange('linkedin')}\n                  placeholder='https://www.linkedin.com/in/user-name'\n                  type='url'\n                  value={linkedin}\n                  id='internet-linkedin-input'\n                />\n                {this.renderCheck(\n                  linkedin,\n                  linkedinValidation,\n                  'internet-linkedin-check'\n                )}\n                <Info message={linkedinValidationMessage} />\n              </FormGroup>\n              <FormGroup\n                controlId='internet-twitter'\n                validationState={twitterValidation}\n              >\n                <ControlLabel htmlFor='internet-twitter-input'>\n                  Twitter\n                </ControlLabel>\n                <FormControl\n                  onChange={this.createHandleChange('twitter')}\n                  placeholder='https://twitter.com/user-name'\n                  type='url'\n                  value={twitter}\n                  id='internet-twitter-input'\n                />\n                {this.renderCheck(\n                  twitter,\n                  twitterValidation,\n                  'internet-twitter-check'\n                )}\n                <Info message={twitterValidationMessage} />\n              </FormGroup>\n              <FormGroup\n                controlId='internet-website'\n                validationState={websiteValidation}\n              >\n                <ControlLabel htmlFor='internet-website-input'>\n                  {t('settings.labels.personal')}\n                </ControlLabel>\n                <FormControl\n                  onChange={this.createHandleChange('website')}\n                  placeholder='https://example.com'\n                  type='url'\n                  value={website}\n                  id='internet-website-input'\n                />\n                {this.renderCheck(\n                  website,\n                  websiteValidation,\n                  'internet-website-check'\n                )}\n                <Info message={websiteValidationMessage} />\n              </FormGroup>\n            </div>\n            <BlockSaveButton\n              disabled={isDisabled}\n              bgSize='large'\n              {...(isDisabled && { tabIndex: -1 })}\n            >\n              {t('buttons.save')}{' '}\n              <span className='sr-only'>{t('settings.headings.internet')}</span>\n            </BlockSaveButton>\n          </form>\n        </FullWidthRow>\n      </>\n    );\n  }\n}\n\nInternetSettings.displayName = 'InternetSettings';\n\nexport default withTranslation()(InternetSettings);\n","import { findIndex, find, isEqual } from 'lodash-es';\nimport { nanoid } from 'nanoid';\nimport React, { Component } from 'react';\nimport type { TFunction } from 'i18next';\nimport {\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  HelpBlock,\n  FormGroupProps,\n  Button\n} from '@freecodecamp/ui';\nimport { withTranslation } from 'react-i18next';\nimport isURL from 'validator/lib/isURL';\nimport { PortfolioProjectData } from '../../redux/prop-types';\n\nimport { hasProtocolRE } from '../../utils';\n\nimport { FullWidthRow, Spacer } from '../helpers';\nimport BlockSaveButton from '../helpers/form/block-save-button';\nimport SectionHeader from './section-header';\n\ntype PortfolioProps = {\n  picture?: string;\n  portfolio: PortfolioProjectData[];\n  t: TFunction;\n  updatePortfolio: (obj: { portfolio: PortfolioProjectData[] }) => void;\n  username?: string;\n};\n\ntype PortfolioState = {\n  portfolio: PortfolioProjectData[];\n  unsavedItemId: string | null;\n};\n\ninterface ProfileValidation {\n  state: FormGroupProps['validationState'];\n  message: string;\n}\n\nfunction createEmptyPortfolioItem(): PortfolioProjectData {\n  return {\n    id: nanoid(),\n    title: '',\n    description: '',\n    url: '',\n    image: ''\n  };\n}\n\nfunction createFindById(id: string) {\n  return (p: PortfolioProjectData) => p.id === id;\n}\n\nclass PortfolioSettings extends Component<PortfolioProps, PortfolioState> {\n  static displayName: string;\n  constructor(props: PortfolioProps) {\n    super(props);\n\n    const { portfolio = [] } = props;\n\n    this.state = {\n      portfolio: [...portfolio],\n      unsavedItemId: null\n    };\n  }\n\n  createOnChangeHandler =\n    (id: string, key: 'description' | 'image' | 'title' | 'url') =>\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      e.preventDefault();\n      const userInput = e.target.value.slice();\n      return this.setState(state => {\n        const { portfolio: currentPortfolio } = state;\n        const mutablePortfolio = currentPortfolio.slice(0);\n        const index = findIndex(currentPortfolio, p => p.id === id);\n\n        mutablePortfolio[index] = {\n          ...mutablePortfolio[index],\n          [key]: userInput\n        };\n\n        return { portfolio: mutablePortfolio };\n      });\n    };\n\n  updateItem = (id: string) => {\n    const { portfolio, unsavedItemId } = this.state;\n    if (unsavedItemId === id) {\n      this.setState({ unsavedItemId: null });\n    }\n    this.props.updatePortfolio({ portfolio });\n  };\n\n  handleAdd = () => {\n    const item = createEmptyPortfolioItem();\n    this.setState(state => ({\n      portfolio: [item, ...state.portfolio],\n      unsavedItemId: item.id\n    }));\n  };\n\n  handleRemoveItem = (id: string) => {\n    this.setState(\n      state => ({\n        portfolio: state.portfolio.filter(p => p.id !== id)\n      }),\n      () => this.updateItem(id)\n    );\n  };\n\n  isFormPristine = (id: string) => {\n    const { portfolio } = this.state;\n    const { portfolio: originalPortfolio } = this.props;\n    const original = find(originalPortfolio, createFindById(id));\n    if (!original) {\n      return false;\n    }\n    const edited = find(portfolio, createFindById(id));\n    return isEqual(original, edited);\n  };\n\n  getDescriptionValidation(description: string): ProfileValidation {\n    const { t } = this.props;\n    const len = description.length;\n    const charsLeft = 288 - len;\n    if (charsLeft < 0) {\n      return {\n        state: 'error',\n        message: t('validation.max-characters', { charsLeft: 0 })\n      };\n    }\n    if (charsLeft < 41 && charsLeft > 0) {\n      return {\n        state: 'warning',\n        message: t('validation.max-characters', { charsLeft: charsLeft })\n      };\n    }\n    if (charsLeft === 288) {\n      return { state: null, message: '' };\n    }\n    return { state: 'success', message: '' };\n  }\n\n  getTitleValidation(title: string): ProfileValidation {\n    const { t } = this.props;\n    if (!title) {\n      return {\n        state: 'error',\n        message: t('validation.title-required')\n      };\n    }\n    const len = title.length;\n    if (len < 2) {\n      return { state: 'error', message: t('validation.title-short') };\n    }\n    if (len > 144) {\n      return { state: 'error', message: t('validation.title-long') };\n    }\n    return { state: 'success', message: '' };\n  }\n\n  getUrlValidation(maybeUrl: string, isImage?: boolean) {\n    const { t } = this.props;\n    const len = maybeUrl.length;\n    if (len >= 4 && !hasProtocolRE.test(maybeUrl)) {\n      return {\n        state: 'error',\n        message: t('validation.invalid-protocol')\n      };\n    }\n    if (isImage && !maybeUrl) {\n      return { state: null, message: '' };\n    }\n    if (isImage && !/\\.(png|jpg|jpeg|gif)$/.test(maybeUrl)) {\n      return {\n        state: 'error',\n        message: t('validation.url-not-image')\n      };\n    }\n    return isURL(maybeUrl)\n      ? { state: 'success', message: '' }\n      : { state: 'warning', message: t('validation.use-valid-url') };\n  }\n\n  formCorrect(portfolio: PortfolioProjectData) {\n    const { id, title, description, url, image } = portfolio;\n\n    const { state: titleState, message: titleMessage } =\n      this.getTitleValidation(title);\n    const { state: urlState, message: urlMessage } = this.getUrlValidation(url);\n    const { state: descriptionState, message: descriptionMessage } =\n      this.getDescriptionValidation(description);\n    const { state: imageState, message: imageMessage } = this.getUrlValidation(\n      image,\n      true\n    );\n    const pristine = this.isFormPristine(id);\n\n    const urlIsValid = !isURL(url, {\n      protocols: ['http', 'https'],\n      require_tld: true,\n      require_protocol: true\n    });\n\n    const isButtonDisabled = [\n      titleState,\n      urlState,\n      descriptionState,\n      imageState,\n      urlIsValid\n    ].some(state => state === 'error' || false);\n\n    return {\n      isButtonDisabled,\n      title: {\n        titleState,\n        titleMessage\n      },\n      url: {\n        urlState,\n        urlMessage\n      },\n      image: {\n        imageState,\n        imageMessage\n      },\n      desc: {\n        descriptionState,\n        descriptionMessage\n      },\n      pristine\n    };\n  }\n\n  renderPortfolio = (\n    portfolio: PortfolioProjectData,\n    index: number,\n    arr: PortfolioProjectData[]\n  ) => {\n    const { t } = this.props;\n    const { id, title, description, url, image } = portfolio;\n    const {\n      isButtonDisabled,\n      title: { titleState, titleMessage },\n      url: { urlState, urlMessage },\n      image: { imageState, imageMessage },\n      desc: { descriptionState, descriptionMessage },\n      pristine\n    } = this.formCorrect(portfolio);\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>, id: string) => {\n      e.preventDefault();\n      if (isButtonDisabled) return null;\n      return this.updateItem(id);\n    };\n    return (\n      <FullWidthRow key={id}>\n        <form\n          onSubmit={e => handleSubmit(e, id)}\n          id='portfolio-items'\n          data-playwright-test-label='portfolio-items'\n        >\n          <FormGroup\n            controlId={`${id}-title`}\n            validationState={\n              pristine || (!pristine && !title) ? null : titleState\n            }\n          >\n            <ControlLabel htmlFor={`${id}-title-input`}>\n              {t('settings.labels.title')}\n            </ControlLabel>\n            <FormControl\n              onChange={this.createOnChangeHandler(id, 'title')}\n              required={true}\n              type='text'\n              value={title}\n              name='portfolio-title'\n              id={`${id}-title-input`}\n            />\n            {titleMessage ? (\n              <HelpBlock data-playwright-test-label='title-validation'>\n                {titleMessage}\n              </HelpBlock>\n            ) : null}\n          </FormGroup>\n          <FormGroup\n            controlId={`${id}-url`}\n            validationState={pristine || (!pristine && !url) ? null : urlState}\n          >\n            <ControlLabel htmlFor={`${id}-url-input`}>\n              {t('settings.labels.url')}\n            </ControlLabel>\n            <FormControl\n              onChange={this.createOnChangeHandler(id, 'url')}\n              required={true}\n              type='url'\n              value={url}\n              name='portfolio-url'\n              id={`${id}-url-input`}\n            />\n            {urlMessage ? (\n              <HelpBlock data-playwright-test-label='url-validation'>\n                {urlMessage}\n              </HelpBlock>\n            ) : null}\n          </FormGroup>\n          <FormGroup\n            controlId={`${id}-image`}\n            validationState={pristine ? null : imageState}\n          >\n            <ControlLabel htmlFor={`${id}-image-input`}>\n              {t('settings.labels.image')}\n            </ControlLabel>\n            <FormControl\n              onChange={this.createOnChangeHandler(id, 'image')}\n              type='url'\n              value={image}\n              name='portfolio-image'\n              id={`${id}-image-input`}\n            />\n            {imageMessage ? (\n              <HelpBlock data-playwright-test-label='image-validation'>\n                {imageMessage}\n              </HelpBlock>\n            ) : null}\n          </FormGroup>\n          <FormGroup\n            controlId={`${id}-description`}\n            validationState={pristine ? null : descriptionState}\n          >\n            <ControlLabel htmlFor={`${id}-description-input`}>\n              {t('settings.labels.description')}\n            </ControlLabel>\n            <FormControl\n              componentClass='textarea'\n              onChange={this.createOnChangeHandler(id, 'description')}\n              value={description}\n              name='portfolio-description'\n              id={`${id}-description-input`}\n            />\n            {descriptionMessage ? (\n              <HelpBlock data-playwright-test-label='description-validation'>\n                {descriptionMessage}\n              </HelpBlock>\n            ) : null}\n          </FormGroup>\n          <BlockSaveButton\n            disabled={isButtonDisabled}\n            bgSize='large'\n            data-playwright-test-label='save-portfolio'\n            {...(isButtonDisabled && { tabIndex: -1 })}\n          >\n            {t('buttons.save-portfolio')}\n          </BlockSaveButton>\n          <Spacer size='small' />\n          <Button\n            block={true}\n            size='large'\n            variant='danger'\n            onClick={() => this.handleRemoveItem(id)}\n            type='button'\n          >\n            {t('buttons.remove-portfolio')}\n          </Button>\n        </form>\n        {index + 1 !== arr.length && (\n          <>\n            <Spacer size='medium' />\n            <hr />\n            <Spacer size='medium' />\n          </>\n        )}\n      </FullWidthRow>\n    );\n  };\n\n  render() {\n    const { t } = this.props;\n    const { portfolio = [], unsavedItemId } = this.state;\n    return (\n      <section id='portfolio-settings'>\n        <SectionHeader>{t('settings.headings.portfolio')}</SectionHeader>\n        <FullWidthRow>\n          <p>{t('settings.share-projects')}</p>\n          <Spacer size='small' />\n          <Button\n            data-cy='add-portfolio'\n            block={true}\n            size='large'\n            variant='primary'\n            disabled={unsavedItemId !== null}\n            onClick={this.handleAdd}\n            type='button'\n          >\n            {t('buttons.add-portfolio')}\n          </Button>\n        </FullWidthRow>\n        <Spacer size='large' />\n        {portfolio.length ? portfolio.map(this.renderPortfolio) : null}\n      </section>\n    );\n  }\n}\n\nPortfolioSettings.displayName = 'PortfolioSettings';\n\nexport default withTranslation()(PortfolioSettings);\n","import React from 'react';\nimport './toggle-setting.css';\n\nexport type ToggleSettingProps = {\n  action: string;\n  explain?: string;\n  flag: boolean;\n  flagName: string;\n  toggleFlag: () => void;\n  offLabel: string;\n  onLabel: string;\n  dataPlaywrightTestOffLabel?: string;\n  dataPlaywrightTestOnLabel?: string;\n};\n\nexport default function ToggleRadioSetting({\n  action,\n  explain,\n  flag,\n  flagName,\n  toggleFlag,\n  offLabel,\n  onLabel\n}: ToggleSettingProps): JSX.Element {\n  const firstRadioId = `radioA${flagName}`;\n  const secondRadioId = `radioB${flagName}`;\n\n  return (\n    <fieldset\n      className='toggle-setting-container'\n      {...(explain && {\n        'aria-labelledby': `legend${flagName} desc${flagName}`\n      })}\n    >\n      <legend className='sr-only' {...(explain && { id: `legend${flagName}` })}>\n        {action}\n      </legend>\n      <div className='toggle-description'>\n        <p aria-hidden={true}>{action}</p>\n        {explain ? <p id={`desc${flagName}`}>{explain}</p> : null}\n      </div>\n      <div className='toggle-radio-group'>\n        <label htmlFor={firstRadioId}>\n          <input\n            id={firstRadioId}\n            type='radio'\n            {...(flag && { defaultChecked: true })}\n            {...(!flag && { onChange: toggleFlag })}\n            name={flagName}\n            value='1'\n          />\n          <span className='custom-circle'></span>\n          <span>{onLabel}</span>\n        </label>\n        <label htmlFor={secondRadioId}>\n          <input\n            id={secondRadioId}\n            type='radio'\n            {...(!flag && { defaultChecked: true })}\n            {...(flag && { onChange: toggleFlag })}\n            name={flagName}\n            value='2'\n          />\n          <span className='custom-circle' />\n          <span>{offLabel}</span>\n        </label>\n      </div>\n    </fieldset>\n  );\n}\n\nToggleRadioSetting.displayName = 'ToggleRadioSetting';\n","import React, { useState } from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Button } from '@freecodecamp/ui';\n\nimport { userSelector } from '../../redux/selectors';\nimport type { ProfileUI } from '../../redux/prop-types';\nimport { submitProfileUI } from '../../redux/settings/actions';\n\nimport FullWidthRow from '../helpers/full-width-row';\nimport Spacer from '../helpers/spacer';\nimport SectionHeader from './section-header';\nimport ToggleRadioSetting from './toggle-radio-setting';\n\nconst mapStateToProps = createSelector(userSelector, user => ({\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  user\n}));\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ submitProfileUI }, dispatch);\n\ntype PrivacyProps = {\n  submitProfileUI: (profileUI: ProfileUI) => void;\n  user: {\n    profileUI: ProfileUI;\n    username: string;\n  };\n};\n\nfunction PrivacySettings({ submitProfileUI, user }: PrivacyProps): JSX.Element {\n  const { t } = useTranslation();\n  const [privacyValues, setPrivacyValues] = useState({ ...user.profileUI });\n\n  const [madeChanges, setMadeChanges] = useState(false);\n\n  function toggleFlag(flag: keyof ProfileUI): () => void {\n    return () => {\n      setMadeChanges(true);\n      setPrivacyValues({ ...privacyValues, [flag]: !privacyValues[flag] });\n    };\n  }\n\n  function submitNewProfileSettings(e: React.FormEvent) {\n    e.preventDefault();\n    if (!madeChanges) return;\n    submitProfileUI(privacyValues);\n    setMadeChanges(false);\n  }\n\n  return (\n    <div className='privacy-settings' id='privacy-settings'>\n      <SectionHeader>{t('settings.headings.privacy')}</SectionHeader>\n      <FullWidthRow>\n        <p>{t('settings.privacy')}</p>\n        <form onSubmit={submitNewProfileSettings}>\n          <div role='group' aria-label={t('settings.headings.privacy')}>\n            <ToggleRadioSetting\n              action={t('settings.labels.my-profile')}\n              explain={t('settings.disabled')}\n              flag={privacyValues['isLocked']}\n              flagName='isLocked'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('isLocked')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-name')}\n              explain={t('settings.private-name')}\n              flag={!privacyValues['showName']}\n              flagName='name'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showName')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-location')}\n              flag={!privacyValues['showLocation']}\n              flagName='showLocation'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showLocation')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-about')}\n              flag={!privacyValues['showAbout']}\n              flagName='showAbout'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showAbout')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-points')}\n              flag={!privacyValues['showPoints']}\n              flagName='showPoints'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showPoints')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-heatmap')}\n              flag={!privacyValues['showHeatMap']}\n              flagName='showHeatMap'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showHeatMap')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-certs')}\n              explain={t('settings.disabled')}\n              flag={!privacyValues['showCerts']}\n              flagName='showCerts'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showCerts')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-portfolio')}\n              flag={!privacyValues['showPortfolio']}\n              flagName='showPortfolio'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showPortfolio')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-timeline')}\n              explain={t('settings.disabled')}\n              flag={!privacyValues['showTimeLine']}\n              flagName='showTimeLine'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showTimeLine')}\n            />\n            <ToggleRadioSetting\n              action={t('settings.labels.my-donations')}\n              flag={!privacyValues['showDonation']}\n              flagName='showDonation'\n              offLabel={t('buttons.public')}\n              onLabel={t('buttons.private')}\n              toggleFlag={toggleFlag('showDonation')}\n            />\n          </div>\n          <Button\n            type='submit'\n            size='large'\n            variant='primary'\n            data-cy='save-privacy-settings'\n            block={true}\n            disabled={!madeChanges}\n            {...(!madeChanges && { tabIndex: -1 })}\n          >\n            {t('buttons.save')}{' '}\n            <span className='sr-only'>{t('settings.headings.privacy')}</span>\n          </Button>\n        </form>\n      </FullWidthRow>\n      <FullWidthRow>\n        <Spacer size='medium' />\n        <p>{t('settings.data')}</p>\n        <Button\n          block={true}\n          size='large'\n          variant='primary'\n          download={`${user.username}.json`}\n          href={`data:text/json;charset=utf-8,${encodeURIComponent(\n            JSON.stringify(user)\n          )}`}\n        >\n          {t('buttons.download-data')}\n        </Button>\n      </FullWidthRow>\n    </div>\n  );\n}\n\nPrivacySettings.displayName = 'PrivacySettings';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(PrivacySettings));\n","import React, { Component } from 'react';\nimport type { TFunction } from 'i18next';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Panel, Button } from '@freecodecamp/ui';\n\nimport { deleteUserToken } from '../../redux/actions';\nimport { FullWidthRow, Spacer } from '../helpers';\n\ntype UserTokenProps = {\n  deleteUserToken: () => void;\n  t: TFunction;\n};\n\nconst mapDispatchToProps = {\n  deleteUserToken\n};\n\nclass UserToken extends Component<UserTokenProps> {\n  static displayName: string;\n\n  deleteToken = () => {\n    this.props.deleteUserToken();\n  };\n\n  render() {\n    const { t } = this.props;\n\n    return (\n      <FullWidthRow>\n        <Panel variant='info' className='text-center'>\n          <Panel.Heading>{t('user-token.title')}</Panel.Heading>\n          <Spacer size='medium' />\n          <Panel.Body>\n            <p>{t('user-token.delete-p1')}</p>\n            <FullWidthRow>\n              <Spacer size='small' />\n              <Button\n                block={true}\n                size='large'\n                variant='info'\n                onClick={this.deleteToken}\n                type='button'\n              >\n                {t('user-token.delete')}\n              </Button>\n              <Spacer size='medium' />\n            </FullWidthRow>\n          </Panel.Body>\n        </Panel>\n      </FullWidthRow>\n    );\n  }\n}\n\nUserToken.displayName = 'UserToken';\n\nexport default connect(null, mapDispatchToProps)(withTranslation()(UserToken));\n","import React, { useRef } from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { Container } from '@freecodecamp/ui';\n\nimport store from 'store';\nimport envData from '../../config/env.json';\nimport { createFlashMessage } from '../components/Flash/redux';\nimport { Loader, Spacer } from '../components/helpers';\nimport Certification from '../components/settings/certification';\nimport About from '../components/settings/about';\nimport DangerZone from '../components/settings/danger-zone';\nimport Email from '../components/settings/email';\nimport Honesty from '../components/settings/honesty';\nimport Internet, { Socials } from '../components/settings/internet';\nimport Portfolio from '../components/settings/portfolio';\nimport Privacy from '../components/settings/privacy';\nimport { type ThemeProps, Themes } from '../components/settings/theme';\nimport UserToken from '../components/settings/user-token';\nimport { hardGoTo as navigate } from '../redux/actions';\nimport {\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector,\n  userTokenSelector\n} from '../redux/selectors';\nimport { User } from '../redux/prop-types';\nimport {\n  submitNewAbout,\n  updateMyHonesty,\n  updateMyPortfolio,\n  updateMyQuincyEmail,\n  updateMySocials,\n  updateMySound,\n  updateMyTheme,\n  updateMyKeyboardShortcuts,\n  verifyCert\n} from '../redux/settings/actions';\nconst { apiLocation } = envData;\n\n// TODO: update types for actions\ntype ShowSettingsProps = Pick<ThemeProps, 'toggleNightMode'> & {\n  createFlashMessage: typeof createFlashMessage;\n  isSignedIn: boolean;\n  navigate: (location: string) => void;\n  showLoading: boolean;\n  submitNewAbout: () => void;\n  toggleSoundMode: (sound: boolean) => void;\n  toggleKeyboardShortcuts: (keyboardShortcuts: boolean) => void;\n  updateSocials: (formValues: Socials) => void;\n  updateIsHonest: () => void;\n  updatePortfolio: () => void;\n  updateQuincyEmail: (isSendQuincyEmail: boolean) => void;\n  user: User;\n  verifyCert: typeof verifyCert;\n  path?: string;\n  userToken: string | null;\n};\n\nconst mapStateToProps = createSelector(\n  signInLoadingSelector,\n  userSelector,\n  isSignedInSelector,\n  userTokenSelector,\n  (showLoading: boolean, user: User, isSignedIn, userToken: string | null) => ({\n    showLoading,\n    user,\n    isSignedIn,\n    userToken\n  })\n);\n\nconst mapDispatchToProps = {\n  createFlashMessage,\n  navigate,\n  submitNewAbout,\n  toggleNightMode: (theme: Themes) => updateMyTheme({ theme }),\n  toggleSoundMode: (sound: boolean) => updateMySound({ sound }),\n  toggleKeyboardShortcuts: (keyboardShortcuts: boolean) =>\n    updateMyKeyboardShortcuts({ keyboardShortcuts }),\n  updateSocials: (formValues: Socials) => updateMySocials(formValues),\n  updateIsHonest: updateMyHonesty,\n  updatePortfolio: updateMyPortfolio,\n  updateQuincyEmail: (sendQuincyEmail: boolean) =>\n    updateMyQuincyEmail({ sendQuincyEmail }),\n  verifyCert\n};\n\nexport function ShowSettings(props: ShowSettingsProps): JSX.Element {\n  const { t } = useTranslation();\n  const {\n    createFlashMessage,\n    isSignedIn,\n    submitNewAbout,\n    toggleNightMode,\n    toggleSoundMode,\n    toggleKeyboardShortcuts,\n    user: {\n      completedChallenges,\n      email,\n      is2018DataVisCert,\n      isApisMicroservicesCert,\n      isJsAlgoDataStructCert,\n      isBackEndCert,\n      isDataVisCert,\n      isFrontEndCert,\n      isInfosecQaCert,\n      isQaCertV7,\n      isInfosecCertV7,\n      isFrontEndLibsCert,\n      isFullStackCert,\n      isRespWebDesignCert,\n      isSciCompPyCertV7,\n      isDataAnalysisPyCertV7,\n      isMachineLearningPyCertV7,\n      isRelationalDatabaseCertV8,\n      isCollegeAlgebraPyCertV8,\n      isFoundationalCSharpCertV8,\n      isJsAlgoDataStructCertV8,\n      isEmailVerified,\n      isHonest,\n      sendQuincyEmail,\n      username,\n      about,\n      picture,\n      theme,\n      keyboardShortcuts,\n      location,\n      name,\n      githubProfile,\n      linkedin,\n      twitter,\n      website,\n      portfolio\n    },\n    navigate,\n    showLoading,\n    updateQuincyEmail,\n    updateSocials,\n    updatePortfolio,\n    updateIsHonest,\n    verifyCert,\n    userToken\n  } = props;\n  const isSignedInRef = useRef(isSignedIn);\n\n  if (showLoading) {\n    return <Loader fullScreen={true} />;\n  }\n\n  if (!isSignedInRef.current) {\n    navigate(`${apiLocation}/signin`);\n    return <Loader fullScreen={true} />;\n  }\n  const sound = (store.get('fcc-sound') as boolean) ?? false;\n  return (\n    <>\n      <Helmet title={`${t('buttons.settings')} | freeCodeCamp.org`} />\n      <Container>\n        <main>\n          <Spacer size='large' />\n          <h1\n            id='content-start'\n            className='text-center'\n            style={{ overflowWrap: 'break-word' }}\n            data-playwright-test-label='settings-heading'\n          >\n            {t('settings.for', { username: username })}\n          </h1>\n          <About\n            about={about}\n            currentTheme={theme}\n            location={location}\n            name={name}\n            picture={picture}\n            sound={sound}\n            keyboardShortcuts={keyboardShortcuts}\n            submitNewAbout={submitNewAbout}\n            toggleNightMode={toggleNightMode}\n            toggleSoundMode={toggleSoundMode}\n            toggleKeyboardShortcuts={toggleKeyboardShortcuts}\n            username={username}\n          />\n          <Spacer size='medium' />\n          <Privacy />\n          <Spacer size='medium' />\n          <Email\n            email={email}\n            isEmailVerified={isEmailVerified}\n            sendQuincyEmail={sendQuincyEmail}\n            updateQuincyEmail={updateQuincyEmail}\n          />\n          <Spacer size='medium' />\n          <Internet\n            githubProfile={githubProfile}\n            linkedin={linkedin}\n            twitter={twitter}\n            updateSocials={updateSocials}\n            website={website}\n          />\n          <Spacer size='medium' />\n          <Portfolio portfolio={portfolio} updatePortfolio={updatePortfolio} />\n          <Spacer size='medium' />\n          <Honesty isHonest={isHonest} updateIsHonest={updateIsHonest} />\n          <Spacer size='medium' />\n          <Certification\n            completedChallenges={completedChallenges}\n            createFlashMessage={createFlashMessage}\n            is2018DataVisCert={is2018DataVisCert}\n            isApisMicroservicesCert={isApisMicroservicesCert}\n            isBackEndCert={isBackEndCert}\n            isDataAnalysisPyCertV7={isDataAnalysisPyCertV7}\n            isDataVisCert={isDataVisCert}\n            isCollegeAlgebraPyCertV8={isCollegeAlgebraPyCertV8}\n            isFoundationalCSharpCertV8={isFoundationalCSharpCertV8}\n            isFrontEndCert={isFrontEndCert}\n            isFrontEndLibsCert={isFrontEndLibsCert}\n            isFullStackCert={isFullStackCert}\n            isHonest={isHonest}\n            isInfosecCertV7={isInfosecCertV7}\n            isInfosecQaCert={isInfosecQaCert}\n            isJsAlgoDataStructCert={isJsAlgoDataStructCert}\n            isMachineLearningPyCertV7={isMachineLearningPyCertV7}\n            isQaCertV7={isQaCertV7}\n            isRelationalDatabaseCertV8={isRelationalDatabaseCertV8}\n            isRespWebDesignCert={isRespWebDesignCert}\n            isSciCompPyCertV7={isSciCompPyCertV7}\n            isJsAlgoDataStructCertV8={isJsAlgoDataStructCertV8}\n            username={username}\n            verifyCert={verifyCert}\n            isEmailVerified={isEmailVerified}\n          />\n          {userToken && (\n            <>\n              <Spacer size='medium' />\n              <UserToken />\n            </>\n          )}\n          <Spacer size='medium' />\n          <DangerZone />\n        </main>\n      </Container>\n    </>\n  );\n}\n\nShowSettings.displayName = 'ShowSettings';\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowSettings);\n","import { Router } from '@reach/router';\nimport { withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport ShowSettings from '../client-only-routes/show-settings';\nimport RedirectHome from '../components/redirect-home';\n\nfunction Settings(): JSX.Element {\n  return (\n    <Router>\n      <ShowSettings path={withPrefix('/settings')} />\n\n      <RedirectHome default />\n    </Router>\n  );\n}\n\nSettings.displayName = 'Settings';\n\nexport default Settings;\n","import store from 'store';\n\nexport function getScrollbarWidth(): number {\n  const storedWidth = store.get('monacoScrollbarWidth') as number;\n  return storedWidth >= 5 || storedWidth <= 25 ? storedWidth : 5;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMicrosoftTranscriptLink = exports.isValidUsername = exports.isHttpStatusCode = exports.usernameIsHttpStatusCode = exports.usernameTooShort = exports.validationSuccess = exports.invalidCharError = void 0;\nexports.invalidCharError = {\n    valid: false,\n    error: 'contains invalid characters'\n};\nexports.validationSuccess = { valid: true, error: null };\nexports.usernameTooShort = {\n    valid: false,\n    error: 'is too short'\n};\nexports.usernameIsHttpStatusCode = {\n    valid: false,\n    error: 'is a reserved error code'\n};\nconst validCharsRE = /^[a-zA-Z0-9\\-_+]*$/;\nconst isHttpStatusCode = (str) => {\n    const output = parseInt(str, 10);\n    return !isNaN(output) && output >= 100 && output <= 599;\n};\nexports.isHttpStatusCode = isHttpStatusCode;\nconst isValidUsername = (str) => {\n    if (!validCharsRE.test(str))\n        return exports.invalidCharError;\n    if (str.length < 3)\n        return exports.usernameTooShort;\n    if ((0, exports.isHttpStatusCode)(str))\n        return exports.usernameIsHttpStatusCode;\n    return exports.validationSuccess;\n};\nexports.isValidUsername = isValidUsername;\n// link template:\n// https://learn.microsoft.com/LOCALE/users/USERNAME/transcript/ID\nconst isMicrosoftTranscriptLink = (value) => {\n    let url;\n    try {\n        url = new URL(value);\n    }\n    catch {\n        return false;\n    }\n    const correctDomain = url.hostname === 'learn.microsoft.com';\n    const correctPath = !!url.pathname.match(/^\\/[^/]+\\/users\\/[^/]+\\/transcript\\/[^/]+$/);\n    const notPlaceholder = !url.pathname.match('/LOCALE/users/USERNAME/transcript/ID');\n    return correctDomain && correctPath && notPlaceholder;\n};\nexports.isMicrosoftTranscriptLink = isMicrosoftTranscriptLink;\n"],"names":["module","exports","o","n","e","t","Symbol","iterator","constructor","window","scrollY","pageYOffset","getBoundingClientRect","top","d","i","v","p","s","b","y","m","scrollTo","requestAnimationFrame","r","c","l","setAttribute","focus","w","u","arguments","length","duration","a","offset","callback","easing","a11y","f","document","querySelector","findIndexFunc","collection","predicate","fromIndex","iterable","Object","isArrayLike","iteratee","keys","key","index","undefined","nativeMax","Math","max","array","value","other","defineProperty","obj","_extends","assign","target","source","prototype","hasOwnProperty","call","_jump","_jump2","__esModule","default","_func","_scroll","_hash","defaultConfig","scrollDuration","keepLastAnchorHash","Manager","_this","this","instance","Constructor","TypeError","_classCallCheck","addListeners","addEventListener","scrollHandler","handleHashChange","removeListeners","removeEventListener","configure","config","goToTop","getScrollTop","forcedHash","scroll","addAnchor","id","component","anchors","forceHashUpdate","removeAnchor","handleScroll","_config","bestAnchorId","getBestAnchorGivenScrollLocation","getHash","updateHash","removeHash","goToSection","element","getElementById","debounce","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_react","_react2","_interopRequireDefault","_reactDom2","_propTypes2","_Manager2","ScrollableAnchor","_Component","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","children","ref","subClass","superClass","create","setPrototypeOf","_inherits","findDOMNode","refs","_props","cloneElement","Component","propTypes","node","string","get","_ScrollableAnchor","_arguments","func","wait","immediate","timeout","context","args","callNow","clearTimeout","setTimeout","apply","decodeURI","location","hash","slice","affectHistory","replace","history","replaceState","title","pathname","search","body","scrollTop","documentElement","getElementOffset","_element$getBoundingC","bottom","floor","doesElementContainScrollTop","extraOffset","offsetTop","offsetHeight","checkLocationRelevance","el1","el2","_getElementOffset","top1","bottom1","_getElementOffset2","top2","bottom2","checkElementRelevance","contains","bestId","bestElement","forEach","ProjectModal","_ref","isOpen","projectTitle","challengeFiles","solution","handleSolutionModalHide","useTranslation","React","Modal","onClose","open","size","Header","showCloseButton","closeButtonClassNames","Body","alignment","SolutionViewer","Footer","Button","onClick","displayName","solutions","ext","contents","fileKey","map","_ref2","Panel","variant","className","Heading","toUpperCase","dangerouslySetInnerHTML","__html","Prism","trim","to","navigate","BlockSaveButton","bgSize","restProps","block","type","createRedirect","withPrefix","KeyboardShortcutsSettings","keyboardShortcuts","toggleKeyboardShortcuts","explain","ToggleButtonSetting","action","flag","flagName","offLabel","onLabel","toggleFlag","Spacer","SectionHeader","dataPlaywrightTestLabel","FullWidthRow","showUpcomingChanges","env","configureAnchors","mapDispatchToProps","openModal","isCertMapSelector","createSelector","is2018DataVisCert","isApisMicroservicesCert","isJsAlgoDataStructCert","isBackEndCert","isDataVisCert","isFrontEndCert","isInfosecQaCert","isQaCertV7","isInfosecCertV7","isFrontEndLibsCert","isFullStackCert","isRespWebDesignCert","isSciCompPyCertV7","isDataAnalysisPyCertV7","isMachineLearningPyCertV7","isRelationalDatabaseCertV8","isCollegeAlgebraPyCertV8","isFoundationalCSharpCertV8","isJsAlgoDataStructCertV8","honestyInfoMessage","message","FlashMessages","HonestFirst","LegacyFullStack","username","isHonest","createFlashMessage","verifyCert","fullStackClaimable","certSlug","Certification","certLocation","cert","href","preventDefault","createClickHandler","disabled","CertificationSettings","setProjectTitle","useState","setChallengeFiles","challengeData","setChallengeData","setSolution","examResults","setExamResults","setIsOpen","_ref4","certName","certsToProjects","Table","ProjectsFor","isCert","_ref5","_ref6","link","Link","getProjectSolution","projectId","_completedProject$cha","_completedProject$cha2","completedChallenges","completedProject","_find","_ref3","regeneratePathAndHistory","SolutionDisplayWidget","completedChallenge","showExamResults","showUserCode","showProjectPreview","displayContext","colSpan","currentCertTitles","legacyCertTitles","upcomingCertTitles","ProjectPreviewModal","previewTitle","closeText","ExamResultsModal","connect","withTranslation","SoundSettings","sound","toggleSoundMode","volumeDisplay","setVolumeDisplay","store","mayPlay","setMayPlay","htmlFor","min","defaultValue","onInput","event","inputValue","Number","playTone","mapStateToProps","state","ns","usernameValidation","isValidUsername","fetchState","validating","pending","hex","tempUserRegex","RegExp","UsernameSettings","super","isFormPristine","formValue","characterValidation","valid","error","submitClicked","isUserNew","test","handleChange","bind","handleSubmit","validateFormInput","componentDidUpdate","prevProps","prevState","prevUsername","prevFormValue","setState","submitNewUsername","validateUsername","newValue","toLowerCase","renderAlerts","Alert","render","isDisabled","onSubmit","FormGroup","ControlLabel","FormControl","name","onChange","tabIndex","dispatch","bindActionCreators","ticks","ScrollbarWidthSettings","scrollbarWidth","setScrollbarWidth","getScrollbarWidth","rangeRef","useRef","handleClick","newScrollbarWidth","dataset","current","includes","String","style","width","tick","step","ShowImageValidationWarning","alertContent","HelpBlock","AboutSettings","formValues","originalValues","isPictureUrlValid","every","bool","submitNewAbout","formClicked","handleNameChange","handleLocationChange","loadEvent","errorEvent","picture","handlePictureChange","isURL","require_protocol","validationImage","src","encodeURI","handleAboutChange","about","Image","values","componentDidMount","componentWillUnmount","currentTheme","toggleNightMode","role","controlId","componentClass","ThemeSettings","DeleteModal","show","onHide","email","Trans","i18nKey","delete","ResetModal","reset","DangerZone","deleteAccount","resetProgress","setReset","delete_","setDelete","toggleResetModal","prev","toggleDeleteModal","EmailSettings","isEmailVerified","sendQuincyEmail","updateMyEmail","updateQuincyEmail","emailForm","setEmailForm","currentEmail","newEmail","confirmNewEmail","isPristine","createHandleEmailFormChange","userInput","newEmailValidation","newEmailValidationMessage","maybeEmailRE","isEmail","getValidationForNewEmail","confirmEmailValidation","confirmEmailValidationMessage","isMatch","getValidationForConfirmEmail","Static","validationState","Honesty","updateIsHonest","buttonText","Info","InternetSettings","createHandleChange","isFormValid","updateSocials","renderCheck","url","validation","Feedback","FontAwesomeIcon","icon","faCheck","githubProfile","linkedin","twitter","website","getValidationStateFor","maybeURl","maybeUrlRE","githubProfileValidation","githubProfileValidationMessage","linkedinValidation","linkedinValidationMessage","twitterValidation","twitterValidationMessage","websiteValidation","websiteValidationMessage","placeholder","createFindById","PortfolioSettings","createOnChangeHandler","portfolio","currentPortfolio","mutablePortfolio","_findIndex","updateItem","unsavedItemId","updatePortfolio","handleAdd","item","nanoid","description","image","handleRemoveItem","filter","originalPortfolio","original","edited","_isEqual","renderPortfolio","arr","isButtonDisabled","titleState","titleMessage","urlState","urlMessage","imageState","imageMessage","desc","descriptionState","descriptionMessage","pristine","formCorrect","required","getDescriptionValidation","charsLeft","getTitleValidation","len","getUrlValidation","maybeUrl","isImage","hasProtocolRE","protocols","require_tld","some","ToggleRadioSetting","firstRadioId","secondRadioId","defaultChecked","userSelector","user","PrivacySettings","submitProfileUI","privacyValues","setPrivacyValues","profileUI","madeChanges","setMadeChanges","download","encodeURIComponent","JSON","stringify","deleteUserToken","UserToken","deleteToken","apiLocation","envData","signInLoadingSelector","isSignedInSelector","userTokenSelector","showLoading","isSignedIn","userToken","theme","updateMyTheme","updateMySound","updateMyKeyboardShortcuts","updateMySocials","updateMyHonesty","updateMyPortfolio","updateMyQuincyEmail","ShowSettings","isSignedInRef","Loader","fullScreen","Helmet","Container","overflowWrap","About","Privacy","Email","Internet","Portfolio","Settings","Router","path","RedirectHome","storedWidth","validCharsRE","str","output","parseInt","isNaN","URL","correctDomain","hostname","correctPath","match","notPlaceholder"],"sourceRoot":""}