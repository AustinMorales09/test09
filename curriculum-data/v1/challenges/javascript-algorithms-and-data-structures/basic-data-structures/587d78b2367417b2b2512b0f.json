{
  "id": "587d78b2367417b2b2512b0f",
  "title": "Remove Items from an Array with pop() and shift()",
  "challengeType": 1,
  "forumTopicId": 301165,
  "dashedName": "remove-items-from-an-array-with-pop-and-shift",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function popShift(arr) {\n  let popped; // Change this line\n  let shifted; // Change this line\n  return [shifted, popped];\n}\n\nconsole.log(popShift(['challenge', 'is', 'not', 'complete']));",
      "error": null,
      "seed": "function popShift(arr) {\n  let popped; // Change this line\n  let shifted; // Change this line\n  return [shifted, popped];\n}\n\nconsole.log(popShift(['challenge', 'is', 'not', 'complete']));"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function popShift(arr) {\n  let popped = arr.pop(); // Change this line\n  let shifted = arr.shift(); // Change this line\n  return [shifted, popped];\n}",
        "error": null,
        "seed": "function popShift(arr) {\n  let popped = arr.pop(); // Change this line\n  let shifted = arr.shift(); // Change this line\n  return [shifted, popped];\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>popShift([\"challenge\", \"is\", \"not\", \"complete\"])</code> should return <code>[\"challenge\", \"complete\"]</code></p>",
      "testString": "assert.deepEqual(popShift(['challenge', 'is', 'not', 'complete']), [\n  'challenge',\n  'complete'\n]);"
    },
    {
      "text": "<p>The <code>popShift</code> function should utilize the <code>pop()</code> method</p>",
      "testString": "assert.notStrictEqual(popShift.toString().search(/\\.pop\\(/), -1);"
    },
    {
      "text": "<p>The <code>popShift</code> function should utilize the <code>shift()</code> method</p>",
      "testString": "assert.notStrictEqual(popShift.toString().search(/\\.shift\\(/), -1);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Both <code>push()</code> and <code>unshift()</code> have corresponding methods that are nearly functional opposites: <code>pop()</code> and <code>shift()</code>. As you may have guessed by now, instead of adding, <code>pop()</code> <em>removes</em> an element from the end of an array, while <code>shift()</code> removes an element from the beginning. The key difference between <code>pop()</code> and <code>shift()</code> and their cousins <code>push()</code> and <code>unshift()</code>, is that neither method takes parameters, and each only allows an array to be modified by a single element at a time.</p>\n<p>Let's take a look:</p>\n<pre><code class=\"language-js\">let greetings = ['whats up?', 'hello', 'see ya!'];\n\ngreetings.pop();\n</code></pre>\n<p><code>greetings</code> would have the value <code>['whats up?', 'hello']</code>.</p>\n<pre><code class=\"language-js\">greetings.shift();\n</code></pre>\n<p><code>greetings</code> would have the value <code>['hello']</code>.</p>\n<p>We can also return the value of the removed element with either method like this:</p>\n<pre><code class=\"language-js\">let popped = greetings.pop();\n</code></pre>\n<p><code>greetings</code> would have the value <code>[]</code>, and <code>popped</code> would have the value <code>hello</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>We have defined a function, <code>popShift</code>, which takes an array as an argument and returns a new array. Modify the function, using <code>pop()</code> and <code>shift()</code>, to remove the first and last elements of the argument array, and assign the removed elements to their corresponding variables, so that the returned array contains their values.</p>\n</section>",
  "translationPending": false,
  "block": "basic-data-structures",
  "hasEditableBoundaries": false,
  "order": 4,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 3,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}