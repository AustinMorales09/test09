{
  "id": "587d7db0367417b2b2512b81",
  "title": "Understand Where an Objectâ€™s Prototype Comes From",
  "challengeType": 1,
  "forumTopicId": 301330,
  "dashedName": "understand-where-an-objects-prototype-comes-from",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function Dog(name) {\n  this.name = name;\n}\n\nlet beagle = new Dog(\"Snoopy\");\n\n// Only change code below this line",
      "error": null,
      "seed": "function Dog(name) {\n  this.name = name;\n}\n\nlet beagle = new Dog(\"Snoopy\");\n\n// Only change code below this line"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function Dog(name) {\n  this.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\nDog.prototype.isPrototypeOf(beagle);",
        "error": null,
        "seed": "function Dog(name) {\n  this.name = name;\n}\nlet beagle = new Dog(\"Snoopy\");\nDog.prototype.isPrototypeOf(beagle);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should show that <code>Dog.prototype</code> is the <code>prototype</code> of <code>beagle</code></p>",
      "testString": "assert(/Dog\\.prototype\\.isPrototypeOf\\(beagle\\)/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>Just like people inherit genes from their parents, an object inherits its <code>prototype</code> directly from the constructor function that created it. For example, here the <code>Bird</code> constructor creates the <code>duck</code> object:</p>\n<pre><code class=\"language-js\">function Bird(name) {\n  this.name = name;\n}\n\nlet duck = new Bird(\"Donald\");\n</code></pre>\n<p><code>duck</code> inherits its <code>prototype</code> from the <code>Bird</code> constructor function. You can show this relationship with the <code>isPrototypeOf</code> method:</p>\n<pre><code class=\"language-js\">Bird.prototype.isPrototypeOf(duck);\n</code></pre>\n<p>This would return <code>true</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use <code>isPrototypeOf</code> to check the <code>prototype</code> of <code>beagle</code>.</p>\n</section>",
  "translationPending": false,
  "block": "object-oriented-programming",
  "hasEditableBoundaries": false,
  "order": 6,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 14,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}