{
  "id": "587d7db1367417b2b2512b85",
  "title": "Set the Child's Prototype to an Instance of the Parent",
  "challengeType": 1,
  "forumTopicId": 301325,
  "dashedName": "set-the-childs-prototype-to-an-instance-of-the-parent",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function Animal() { }\n\nAnimal.prototype = {\n  constructor: Animal,\n  eat: function() {\n    console.log(\"nom nom nom\");\n  }\n};\n\nfunction Dog() { }\n\n// Only change code below this line\n\n\nlet beagle = new Dog();",
      "error": null,
      "seed": "function Animal() { }\n\nAnimal.prototype = {\n  constructor: Animal,\n  eat: function() {\n    console.log(\"nom nom nom\");\n  }\n};\n\nfunction Dog() { }\n\n// Only change code below this line\n\n\nlet beagle = new Dog();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function Animal() { }\n\nAnimal.prototype = {\n  constructor: Animal,\n  eat: function() {\n    console.log(\"nom nom nom\");\n  }\n};\n\nfunction Dog() { }\nDog.prototype = Object.create(Animal.prototype);\n\nlet beagle = new Dog();\nbeagle.eat();",
        "error": null,
        "seed": "function Animal() { }\n\nAnimal.prototype = {\n  constructor: Animal,\n  eat: function() {\n    console.log(\"nom nom nom\");\n  }\n};\n\nfunction Dog() { }\nDog.prototype = Object.create(Animal.prototype);\n\nlet beagle = new Dog();\nbeagle.eat();"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>Dog.prototype</code> should be an instance of <code>Animal</code>.</p>",
      "testString": "assert(Animal.prototype.isPrototypeOf(Dog.prototype));"
    }
  ],
  "description": "<section id=\"description\">\n<p>In the previous challenge you saw the first step for inheriting behavior from the supertype (or parent) <code>Animal</code>: making a new instance of <code>Animal</code>.</p>\n<p>This challenge covers the next step: set the <code>prototype</code> of the subtype (or child)—in this case, <code>Bird</code>—to be an instance of <code>Animal</code>.</p>\n<pre><code class=\"language-js\">Bird.prototype = Object.create(Animal.prototype);\n</code></pre>\n<p>Remember that the <code>prototype</code> is like the \"recipe\" for creating an object. In a way, the recipe for <code>Bird</code> now includes all the key \"ingredients\" from <code>Animal</code>.</p>\n<pre><code class=\"language-js\">let duck = new Bird(\"Donald\");\nduck.eat();\n</code></pre>\n<p><code>duck</code> inherits all of <code>Animal</code>'s properties, including the <code>eat</code> method.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify the code so that instances of <code>Dog</code> inherit from <code>Animal</code>.</p>\n</section>",
  "translationPending": false,
  "block": "object-oriented-programming",
  "hasEditableBoundaries": false,
  "order": 6,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 18,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}