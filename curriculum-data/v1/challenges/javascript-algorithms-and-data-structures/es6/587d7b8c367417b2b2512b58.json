{
  "id": "587d7b8c367417b2b2512b58",
  "title": "Create an Export Fallback with export default",
  "challengeType": 1,
  "forumTopicId": 301199,
  "dashedName": "create-an-export-fallback-with-export-default",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function subtract(x, y) {\n  return x - y;\n}",
      "error": null,
      "seed": "function subtract(x, y) {\n  return x - y;\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "export default function subtract(x, y) {\n  return x - y;\n}",
        "error": null,
        "seed": "export default function subtract(x, y) {\n  return x - y;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use an <code>export</code> fallback.</p>",
      "testString": "assert(\n  __helpers.removeJSComments(code).match(\n    /export\\s+default\\s+function(\\s+subtract\\s*|\\s*)\\(\\s*x,\\s*y\\s*\\)\\s*{/g\n  )\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In the <code>export</code> lesson, you learned about the syntax referred to as a <dfn>named export</dfn>. This allowed you to make multiple functions and variables available for use in other files.</p>\n<p>There is another <code>export</code> syntax you need to know, known as <dfn>export default</dfn>. Usually you will use this syntax if only one value is being exported from a file. It is also used to create a fallback value for a file or module.</p>\n<p>Below are examples using <code>export default</code>:</p>\n<pre><code class=\"language-js\">export default function add(x, y) {\n  return x + y;\n}\n\nexport default function(x, y) {\n  return x + y;\n}\n</code></pre>\n<p>The first is a named function, and the second is an anonymous function.</p>\n<p>Since <code>export default</code> is used to declare a fallback value for a module or file, you can only have one value be a default export in each module or file. Additionally, you cannot use <code>export default</code> with <code>var</code>, <code>let</code>, or <code>const</code></p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>The following function should be the fallback value for the module. Please add the necessary code to do so.</p>\n</section>",
  "translationPending": false,
  "block": "es6",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 23,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}