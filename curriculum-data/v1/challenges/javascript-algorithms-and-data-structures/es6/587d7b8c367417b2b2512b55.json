{
  "id": "587d7b8c367417b2b2512b55",
  "title": "Reuse JavaScript Code Using import",
  "challengeType": 1,
  "forumTopicId": 301208,
  "dashedName": "reuse-javascript-code-using-import",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "  \n// Only change code above this line\n\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");",
      "error": null,
      "seed": "  \n// Only change code above this line\n\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "import { uppercaseString, lowercaseString } from './string_functions.js';\n\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");",
        "error": null,
        "seed": "import { uppercaseString, lowercaseString } from './string_functions.js';\n\nuppercaseString(\"hello\");\nlowercaseString(\"WORLD!\");"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should properly import <code>uppercaseString</code>.</p>",
      "testString": "assert(\n  __helpers.removeJSComments(code).match(\n    /import\\s*{\\s*(uppercaseString[^}]*|[^,]*,\\s*uppercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n  )\n);"
    },
    {
      "text": "<p>You should properly import <code>lowercaseString</code>.</p>",
      "testString": "assert(\n  __helpers.removeJSComments(code).match(\n    /import\\s*{\\s*(lowercaseString[^}]*|[^,]*,\\s*lowercaseString\\s*)}\\s+from\\s+('|\")\\.\\/string_functions\\.js\\2/g\n  )\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p><code>import</code> allows you to choose which parts of a file or module to load. In the previous lesson, the examples exported <code>add</code> from the <code>math_functions.js</code> file. Here's how you can import it to use in another file:</p>\n<pre><code class=\"language-js\">import { add } from './math_functions.js';\n</code></pre>\n<p>Here, <code>import</code> will find <code>add</code> in <code>math_functions.js</code>, import just that function for you to use, and ignore the rest. The <code>./</code> tells the import to look for the <code>math_functions.js</code> file in the same folder as the current file. The relative file path (<code>./</code>) and file extension (<code>.js</code>) are required when using import in this way.</p>\n<p>You can import more than one item from the file by adding them in the <code>import</code> statement like this:</p>\n<pre><code class=\"language-js\">import { add, subtract } from './math_functions.js';\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add the appropriate <code>import</code> statement that will allow the current file to use the <code>uppercaseString</code> and <code>lowercaseString</code> functions you exported in the previous lesson. These functions are in a file called <code>string_functions.js</code>, which is in the same directory as the current file.</p>\n</section>",
  "translationPending": false,
  "block": "es6",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 21,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}