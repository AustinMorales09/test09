{
  "id": "a6e40f1041b06c996f7b2406",
  "title": "Finders Keepers",
  "challengeType": 1,
  "forumTopicId": 16016,
  "dashedName": "finders-keepers",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function findElement(arr, func) {\n  let num = 0;\n  return num;\n}\n\nfindElement([1, 2, 3, 4], num => num % 2 === 0);",
      "error": null,
      "seed": "function findElement(arr, func) {\n  let num = 0;\n  return num;\n}\n\nfindElement([1, 2, 3, 4], num => num % 2 === 0);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function findElement(arr, func) {\n  return arr.filter(func)[0];\n}\n\nfindElement([1, 2, 3, 4], num => num % 2 === 0);",
        "error": null,
        "seed": "function findElement(arr, func) {\n  return arr.filter(func)[0];\n}\n\nfindElement([1, 2, 3, 4], num => num % 2 === 0);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>findElement([1, 3, 5, 8, 9, 10], function(num) { return num % 2 === 0; })</code> should return <code>8</code>.</p>",
      "testString": "assert.strictEqual(\n  findElement([1, 3, 5, 8, 9, 10], function (num) {\n    return num % 2 === 0;\n  }),\n  8\n);"
    },
    {
      "text": "<p><code>findElement([1, 3, 5, 9], function(num) { return num % 2 === 0; })</code> should return <code>undefined</code>.</p>",
      "testString": "assert.strictEqual(\n  findElement([1, 3, 5, 9], function (num) {\n    return num % 2 === 0;\n  }),\n  undefined\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Create a function that looks through an array <code>arr</code> and returns the first element in it that passes a 'truth test'. This means that given an element <code>x</code>, the 'truth test' is passed if <code>func(x)</code> is <code>true</code>. If no element passes the test, return <code>undefined</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-algorithm-scripting",
  "hasEditableBoundaries": false,
  "order": 5,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 8,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}