{
  "id": "579e2a2c335b9d72dd32e05c",
  "title": "Slice and Splice",
  "challengeType": 1,
  "forumTopicId": 301148,
  "dashedName": "slice-and-splice",
  "challengeFiles": [
    {
      "head": "",
      "tail": "let testArr1 = [1, 2];\nlet testArr2 = [\"a\", \"b\"];",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function frankenSplice(arr1, arr2, n) {\n  return arr2;\n}\n\nfrankenSplice([1, 2, 3], [4, 5, 6], 1);",
      "error": null,
      "seed": "function frankenSplice(arr1, arr2, n) {\n  return arr2;\n}\n\nfrankenSplice([1, 2, 3], [4, 5, 6], 1);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function frankenSplice(arr1, arr2, n) {\n  // It's alive. It's alive!\n  let result = arr2.slice();\n  for (let i = 0; i < arr1.length; i++) {\n    result.splice(n+i, 0, arr1[i]);\n  }\n  return result;\n}\n\nfrankenSplice([1, 2, 3], [4, 5], 1);",
        "error": null,
        "seed": "function frankenSplice(arr1, arr2, n) {\n  // It's alive. It's alive!\n  let result = arr2.slice();\n  for (let i = 0; i < arr1.length; i++) {\n    result.splice(n+i, 0, arr1[i]);\n  }\n  return result;\n}\n\nfrankenSplice([1, 2, 3], [4, 5], 1);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>frankenSplice([1, 2, 3], [4, 5], 1)</code> should return <code>[4, 1, 2, 3, 5]</code>.</p>",
      "testString": "assert.deepEqual(frankenSplice([1, 2, 3], [4, 5], 1), [4, 1, 2, 3, 5]);"
    },
    {
      "text": "<p><code>frankenSplice([1, 2], [\"a\", \"b\"], 1)</code> should return <code>[\"a\", 1, 2, \"b\"]</code>.</p>",
      "testString": "assert.deepEqual(frankenSplice(testArr1, testArr2, 1), ['a', 1, 2, 'b']);"
    },
    {
      "text": "<p><code>frankenSplice([\"claw\", \"tentacle\"], [\"head\", \"shoulders\", \"knees\", \"toes\"], 2)</code> should return <code>[\"head\", \"shoulders\", \"claw\", \"tentacle\", \"knees\", \"toes\"]</code>.</p>",
      "testString": "assert.deepEqual(\n  frankenSplice(\n    ['claw', 'tentacle'],\n    ['head', 'shoulders', 'knees', 'toes'],\n    2\n  ),\n  ['head', 'shoulders', 'claw', 'tentacle', 'knees', 'toes']\n);"
    },
    {
      "text": "<p>All elements from the first array should be added to the second array in their original order. <code>frankenSplice([1, 2, 3, 4], [], 0)</code> should return <code>[1, 2, 3, 4]</code>.</p>",
      "testString": "assert.deepEqual(frankenSplice([1, 2, 3, 4], [], 0), [1, 2, 3, 4]);"
    },
    {
      "text": "<p>The first array should remain the same after the function runs.</p>",
      "testString": "frankenSplice(testArr1, testArr2, 1);\nassert.deepEqual(testArr1, [1, 2]);"
    },
    {
      "text": "<p>The second array should remain the same after the function runs.</p>",
      "testString": "frankenSplice(testArr1, testArr2, 1);\nassert.deepEqual(testArr2, ['a', 'b']);"
    }
  ],
  "description": "<section id=\"description\">\n<p>You are given two arrays and an index.</p>\n<p>Copy each element of the first array into the second array, in order.</p>\n<p>Begin inserting elements at index <code>n</code> of the second array.</p>\n<p>Return the resulting array. The input arrays should remain the same after the function runs.</p>\n</section>",
  "translationPending": false,
  "block": "basic-algorithm-scripting",
  "hasEditableBoundaries": false,
  "order": 5,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 11,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}