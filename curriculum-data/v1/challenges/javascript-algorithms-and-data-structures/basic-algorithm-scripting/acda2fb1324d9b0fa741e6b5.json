{
  "id": "acda2fb1324d9b0fa741e6b5",
  "title": "Confirm the Ending",
  "challengeType": 1,
  "forumTopicId": 16006,
  "dashedName": "confirm-the-ending",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function confirmEnding(str, target) {\n  return str;\n}\n\nconfirmEnding(\"Bastian\", \"n\");",
      "error": null,
      "seed": "function confirmEnding(str, target) {\n  return str;\n}\n\nconfirmEnding(\"Bastian\", \"n\");"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function confirmEnding(str, target) {\n  return str.substring(str.length - target.length) === target;\n}\n\nconfirmEnding(\"Bastian\", \"n\");",
        "error": null,
        "seed": "function confirmEnding(str, target) {\n  return str.substring(str.length - target.length) === target;\n}\n\nconfirmEnding(\"Bastian\", \"n\");"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>confirmEnding(\"Bastian\", \"n\")</code> should return <code>true</code>.</p>",
      "testString": "assert(confirmEnding('Bastian', 'n') === true);"
    },
    {
      "text": "<p><code>confirmEnding(\"Congratulation\", \"on\")</code> should return <code>true</code>.</p>",
      "testString": "assert(confirmEnding('Congratulation', 'on') === true);"
    },
    {
      "text": "<p><code>confirmEnding(\"Connor\", \"n\")</code> should return <code>false</code>.</p>",
      "testString": "assert(confirmEnding('Connor', 'n') === false);"
    },
    {
      "text": "<p><code>confirmEnding(\"Walking on water and developing software from a specification are easy if both are frozen\", \"specification\")</code> should return <code>false</code>.</p>",
      "testString": "assert(\n  confirmEnding(\n    'Walking on water and developing software from a specification are easy if both are frozen',\n    'specification'\n  ) === false\n);"
    },
    {
      "text": "<p><code>confirmEnding(\"He has to give me a new name\", \"name\")</code> should return <code>true</code>.</p>",
      "testString": "assert(confirmEnding('He has to give me a new name', 'name') === true);"
    },
    {
      "text": "<p><code>confirmEnding(\"Open sesame\", \"same\")</code> should return <code>true</code>.</p>",
      "testString": "assert(confirmEnding('Open sesame', 'same') === true);"
    },
    {
      "text": "<p><code>confirmEnding(\"Open sesame\", \"sage\")</code> should return <code>false</code>.</p>",
      "testString": "assert(confirmEnding('Open sesame', 'sage') === false);"
    },
    {
      "text": "<p><code>confirmEnding(\"Open sesame\", \"game\")</code> should return <code>false</code>.</p>",
      "testString": "assert(confirmEnding('Open sesame', 'game') === false);"
    },
    {
      "text": "<p><code>confirmEnding(\"If you want to save our world, you must hurry. We dont know how much longer we can withstand the nothing\", \"mountain\")</code> should return <code>false</code>.</p>",
      "testString": "assert(\n  confirmEnding(\n    'If you want to save our world, you must hurry. We dont know how much longer we can withstand the nothing',\n    'mountain'\n  ) === false\n);"
    },
    {
      "text": "<p><code>confirmEnding(\"Abstraction\", \"action\")</code> should return <code>true</code>.</p>",
      "testString": "assert(confirmEnding('Abstraction', 'action') === true);"
    },
    {
      "text": "<p>Your code should not use the built-in method <code>.endsWith()</code> to solve the challenge.</p>",
      "testString": "assert(!/\\.endsWith\\(.*?\\)\\s*?;?/.test(__helpers.removeJSComments(code)) && !/\\['endsWith'\\]/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>Check if a string (first argument, <code>str</code>) ends with the given target string (second argument, <code>target</code>).</p>\n<p>This challenge <em>can</em> be solved with the <code>.endsWith()</code> method, which was introduced in ES2015. But for the purpose of this challenge, we would like you to use one of the JavaScript substring methods instead.</p>\n</section>",
  "translationPending": false,
  "block": "basic-algorithm-scripting",
  "hasEditableBoundaries": false,
  "order": 5,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 5,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}