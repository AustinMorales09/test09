{
  "id": "587d7da9367417b2b2512b69",
  "title": "Sort an Array Alphabetically using the sort Method",
  "challengeType": 1,
  "forumTopicId": 18303,
  "dashedName": "sort-an-array-alphabetically-using-the-sort-method",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function alphabeticalOrder(arr) {\n  // Only change code below this line\n\n  return arr\n  // Only change code above this line\n}\n\nalphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"]);",
      "error": null,
      "seed": "function alphabeticalOrder(arr) {\n  // Only change code below this line\n\n  return arr\n  // Only change code above this line\n}\n\nalphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"]);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function alphabeticalOrder(arr) {\n  return arr.sort();\n}",
        "error": null,
        "seed": "function alphabeticalOrder(arr) {\n  return arr.sort();\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use the <code>sort</code> method.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\\.sort/g));"
    },
    {
      "text": "<p><code>alphabeticalOrder([\"a\", \"d\", \"c\", \"a\", \"z\", \"g\"])</code> should return <code>[\"a\", \"a\", \"c\", \"d\", \"g\", \"z\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(alphabeticalOrder(['a', 'd', 'c', 'a', 'z', 'g'])) ===\n    JSON.stringify(['a', 'a', 'c', 'd', 'g', 'z'])\n);"
    },
    {
      "text": "<p><code>alphabeticalOrder([\"x\", \"h\", \"a\", \"m\", \"n\", \"m\"])</code> should return <code>[\"a\", \"h\", \"m\", \"m\", \"n\", \"x\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(alphabeticalOrder(['x', 'h', 'a', 'm', 'n', 'm'])) ===\n    JSON.stringify(['a', 'h', 'm', 'm', 'n', 'x'])\n);"
    },
    {
      "text": "<p><code>alphabeticalOrder([\"a\", \"a\", \"a\", \"a\", \"x\", \"t\"])</code> should return <code>[\"a\", \"a\", \"a\", \"a\", \"t\", \"x\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(alphabeticalOrder(['a', 'a', 'a', 'a', 'x', 't'])) ===\n    JSON.stringify(['a', 'a', 'a', 'a', 't', 'x'])\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <code>sort</code> method sorts the elements of an array according to the callback function.</p>\n<p>For example:</p>\n<pre><code class=\"language-js\">function ascendingOrder(arr) {\n  return arr.sort(function(a, b) {\n    return a - b;\n  });\n}\n\nascendingOrder([1, 5, 2, 3, 4]);\n</code></pre>\n<p>This would return the value <code>[1, 2, 3, 4, 5]</code>.</p>\n<pre><code class=\"language-js\">function reverseAlpha(arr) {\n  return arr.sort(function(a, b) {\n    return a === b ? 0 : a &#x3C; b ? 1 : -1;\n  });\n}\n\nreverseAlpha(['l', 'h', 'z', 'b', 's']);\n</code></pre>\n<p>This would return the value <code>['z', 's', 'l', 'h', 'b']</code>.</p>\n<p>JavaScript's default sorting method is by string Unicode point value, which may return unexpected results. Therefore, it is encouraged to provide a callback function to specify how to sort the array items. When such a callback function, normally called <code>compareFunction</code>, is supplied, the array elements are sorted according to the return value of the <code>compareFunction</code>: If <code>compareFunction(a,b)</code> returns a value less than 0 for two elements <code>a</code> and <code>b</code>, then <code>a</code> will come before <code>b</code>. If <code>compareFunction(a,b)</code> returns a value greater than 0 for two elements <code>a</code> and <code>b</code>, then <code>b</code> will come before <code>a</code>. If <code>compareFunction(a,b)</code> returns a value equal to 0 for two elements <code>a</code> and <code>b</code>, then <code>a</code> and <code>b</code> will remain unchanged.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use the <code>sort</code> method in the <code>alphabeticalOrder</code> function to sort the elements of <code>arr</code> in alphabetical order. The function should return the sorted array.</p>\n</section>",
  "translationPending": false,
  "block": "functional-programming",
  "hasEditableBoundaries": false,
  "order": 7,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 16,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}