{
  "id": "587d7daa367417b2b2512b6b",
  "title": "Split a String into an Array Using the split Method",
  "challengeType": 1,
  "forumTopicId": 18305,
  "dashedName": "split-a-string-into-an-array-using-the-split-method",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function splitify(str) {\n  // Only change code below this line\n\n\n  // Only change code above this line\n}\n\nsplitify(\"Hello World,I-am code\");",
      "error": null,
      "seed": "function splitify(str) {\n  // Only change code below this line\n\n\n  // Only change code above this line\n}\n\nsplitify(\"Hello World,I-am code\");"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function splitify(str) {\n  return str.split(/\\W/);\n}",
        "error": null,
        "seed": "function splitify(str) {\n  return str.split(/\\W/);\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use the <code>split</code> method.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\\.split/g));"
    },
    {
      "text": "<p><code>splitify(\"Hello World,I-am code\")</code> should return <code>[\"Hello\", \"World\", \"I\", \"am\", \"code\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(splitify('Hello World,I-am code')) ===\n    JSON.stringify(['Hello', 'World', 'I', 'am', 'code'])\n);"
    },
    {
      "text": "<p><code>splitify(\"Earth-is-our home\")</code> should return <code>[\"Earth\", \"is\", \"our\", \"home\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(splitify('Earth-is-our home')) ===\n    JSON.stringify(['Earth', 'is', 'our', 'home'])\n);"
    },
    {
      "text": "<p><code>splitify(\"This.is.a-sentence\")</code> should return <code>[\"This\", \"is\", \"a\", \"sentence\"]</code>.</p>",
      "testString": "assert(\n  JSON.stringify(splitify('This.is.a-sentence')) ===\n    JSON.stringify(['This', 'is', 'a', 'sentence'])\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <code>split</code> method splits a string into an array of strings. It takes an argument for the delimiter, which can be a character to use to break up the string or a regular expression. For example, if the delimiter is a space, you get an array of words, and if the delimiter is an empty string, you get an array of each character in the string.</p>\n<p>Here are two examples that split one string by spaces, then another by digits using a regular expression:</p>\n<pre><code class=\"language-js\">const str = \"Hello World\";\nconst bySpace = str.split(\" \");\n\nconst otherString = \"How9are7you2today\";\nconst byDigits = otherString.split(/\\d/);\n</code></pre>\n<p><code>bySpace</code> would have the value <code>[\"Hello\", \"World\"]</code> and <code>byDigits</code> would have the value <code>[\"How\", \"are\", \"you\", \"today\"]</code>.</p>\n<p>Since strings are immutable, the <code>split</code> method makes it easier to work with them.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use the <code>split</code> method inside the <code>splitify</code> function to split <code>str</code> into an array of words. The function should return the array. Note that the words are not always separated by spaces, and the array should not contain punctuation.</p>\n</section>",
  "translationPending": false,
  "block": "functional-programming",
  "hasEditableBoundaries": false,
  "order": 7,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 18,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}