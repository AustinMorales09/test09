{
  "id": "cf1111c1c12feddfaeb3bdef",
  "title": "Use Conditional Logic with If Statements",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cy87mf3",
  "forumTopicId": 18348,
  "dashedName": "use-conditional-logic-with-if-statements",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function trueOrFalse(wasThatTrue) {\n  // Only change code below this line\n\n\n\n  // Only change code above this line\n\n}",
      "error": null,
      "seed": "function trueOrFalse(wasThatTrue) {\n  // Only change code below this line\n\n\n\n  // Only change code above this line\n\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function trueOrFalse(wasThatTrue) {\n  if (wasThatTrue) {\n    return \"Yes, that was true\";\n  }\n  return \"No, that was false\";\n}",
        "error": null,
        "seed": "function trueOrFalse(wasThatTrue) {\n  if (wasThatTrue) {\n    return \"Yes, that was true\";\n  }\n  return \"No, that was false\";\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>trueOrFalse</code> should be a function</p>",
      "testString": "assert(typeof trueOrFalse === 'function');"
    },
    {
      "text": "<p><code>trueOrFalse(true)</code> should return a string</p>",
      "testString": "assert(typeof trueOrFalse(true) === 'string');"
    },
    {
      "text": "<p><code>trueOrFalse(false)</code> should return a string</p>",
      "testString": "assert(typeof trueOrFalse(false) === 'string');"
    },
    {
      "text": "<p><code>trueOrFalse(true)</code> should return the string <code>Yes, that was true</code></p>",
      "testString": "assert(trueOrFalse(true) === 'Yes, that was true');"
    },
    {
      "text": "<p><code>trueOrFalse(false)</code> should return the string <code>No, that was false</code></p>",
      "testString": "assert(trueOrFalse(false) === 'No, that was false');"
    }
  ],
  "description": "<section id=\"description\">\n<p><code>if</code> statements are used to make decisions in code. The keyword <code>if</code> tells JavaScript to execute the code in the curly braces under certain conditions, defined in the parentheses. These conditions are known as <code>Boolean</code> conditions and they may only be <code>true</code> or <code>false</code>.</p>\n<p>When the condition evaluates to <code>true</code>, the program executes the statement inside the curly braces. When the Boolean condition evaluates to <code>false</code>, the statement inside the curly braces will not execute.</p>\n<p><strong>Pseudocode</strong></p>\n<blockquote>if (<i>condition is true</i>) {<br>  <i>statement is executed</i><br>}</blockquote>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">function test(myCondition) {\n  if (myCondition) {\n    return \"It was true\";\n  }\n  return \"It was false\";\n}\n\ntest(true);\ntest(false);\n</code></pre>\n<p><code>test(true)</code> returns the string <code>It was true</code>, and <code>test(false)</code> returns the string <code>It was false</code>.</p>\n<p>When <code>test</code> is called with a value of <code>true</code>, the <code>if</code> statement evaluates <code>myCondition</code> to see if it is <code>true</code> or not. Since it is <code>true</code>, the function returns <code>It was true</code>. When we call <code>test</code> with a value of <code>false</code>, <code>myCondition</code> is <em>not</em> <code>true</code> and the statement in the curly braces is not executed and the function returns <code>It was false</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Create an <code>if</code> statement inside the function to return <code>Yes, that was true</code> if the parameter <code>wasThatTrue</code> is <code>true</code> and return <code>No, that was false</code> otherwise.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 58,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}