{
  "id": "bd7123c9c443eddfaeb5bdef",
  "title": "Declare JavaScript Variables",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cNanrHq",
  "forumTopicId": 17556,
  "dashedName": "declare-javascript-variables",
  "challengeFiles": [
    {
      "head": "",
      "tail": "if(typeof myName !== \"undefined\"){(function(v){return v;})(myName);}",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "var myName;",
        "error": null,
        "seed": "var myName;"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare <code>myName</code> with the <code>var</code> keyword, ending with a semicolon</p>",
      "testString": "assert(/var\\s+myName\\s*;/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>In computer science, <dfn>data</dfn> is anything that is meaningful to the computer. JavaScript provides eight different <dfn>data types</dfn> which are <code>undefined</code>, <code>null</code>, <code>boolean</code>, <code>string</code>, <code>symbol</code>, <code>bigint</code>, <code>number</code>, and <code>object</code>.</p>\n<p>For example, computers distinguish between numbers, such as the number <code>12</code>, and <code>strings</code>, such as <code>\"12\"</code>, <code>\"dog\"</code>, or <code>\"123 cats\"</code>, which are collections of characters. Computers can perform mathematical operations on a number, but not on a string.</p>\n<p><dfn>Variables</dfn> allow computers to store and manipulate data in a dynamic fashion. They do this by using a \"label\" to point to the data rather than using the data itself. Any of the eight data types may be stored in a variable.</p>\n<p>Variables are similar to the x and y variables you use in mathematics, which means they're a simple name to represent the data we want to refer to. Computer variables differ from mathematical variables in that they can store different values at different times.</p>\n<p>We tell JavaScript to create or <dfn>declare</dfn> a variable by putting the keyword <code>var</code> in front of it, like so:</p>\n<pre><code class=\"language-js\">var ourName;\n</code></pre>\n<p>creates a variable called <code>ourName</code>. In JavaScript we end statements with semicolons. Variable names can be made up of numbers, letters, and <code>$</code> or <code>_</code>, but may not contain spaces or start with a number.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use the <code>var</code> keyword to create a variable called <code>myName</code>.</p>\n<p><strong>Hint</strong><br>\nLook at the <code>ourName</code> example above if you get stuck.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 1,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}