{
  "id": "56bbb991ad1ed5201cd392d2",
  "title": "Add New Properties to a JavaScript Object",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cQe38UD",
  "forumTopicId": 301169,
  "dashedName": "add-new-properties-to-a-javascript-object",
  "challengeFiles": [
    {
      "head": "",
      "tail": "(function(z){return z;})(myDog);",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const myDog = {\n  \"name\": \"Happy Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\n\n",
      "error": null,
      "seed": "const myDog = {\n  \"name\": \"Happy Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\n\n"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const myDog = {\n  \"name\": \"Happy Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.bark = \"Woof Woof\";",
        "error": null,
        "seed": "const myDog = {\n  \"name\": \"Happy Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.bark = \"Woof Woof\";"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should add the property <code>bark</code> to <code>myDog</code>.</p>",
      "testString": "assert(myDog.bark !== undefined);"
    },
    {
      "text": "<p>You should not add <code>bark</code> to the initialization of <code>myDog</code>.</p>",
      "testString": "assert(!/bark[^\\n]:/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>You can add new properties to existing JavaScript objects the same way you would modify them.</p>\n<p>Here's how we would add a <code>bark</code> property to <code>ourDog</code>:</p>\n<pre><code class=\"language-js\">ourDog.bark = \"bow-wow\";\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-js\">ourDog[\"bark\"] = \"bow-wow\";\n</code></pre>\n<p>Now when we evaluate <code>ourDog.bark</code>, we'll get his bark, <code>bow-wow</code>.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const ourDog = {\n  \"name\": \"Camper\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"everything!\"]\n};\n\nourDog.bark = \"bow-wow\";\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add a <code>bark</code> property to <code>myDog</code> and set it to a dog sound, such as \"woof\". You may use either dot or bracket notation.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 87,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}