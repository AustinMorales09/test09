{
  "id": "56533eb9ac21ba0edf2244ed",
  "title": "Appending Variables to Strings",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cbQmZfa",
  "forumTopicId": 16656,
  "dashedName": "appending-variables-to-strings",
  "challengeFiles": [
    {
      "head": "",
      "tail": "(function(){\n  var output = [];\n  if(typeof someAdjective === 'string') {\n    output.push('someAdjective = \"' + someAdjective + '\"');\n  } else {\n    output.push('someAdjective is not a string');\n  }\n  if(typeof myStr === 'string') {\n    output.push('myStr = \"' + myStr + '\"');\n  } else {\n    output.push('myStr is not a string');\n  }\n  return output.join('\\n');\n})();",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Change code below this line\nconst someAdjective = \"\";\nlet myStr = \"Learning to code is \";",
      "error": null,
      "seed": "// Change code below this line\nconst someAdjective = \"\";\nlet myStr = \"Learning to code is \";"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const someAdjective = \"neat\";\nlet myStr = \"Learning to code is \";\nmyStr += someAdjective;",
        "error": null,
        "seed": "const someAdjective = \"neat\";\nlet myStr = \"Learning to code is \";\nmyStr += someAdjective;"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>someAdjective</code> should be set to a string at least 3 characters long.</p>",
      "testString": "assert(typeof someAdjective !== 'undefined' && someAdjective.length > 2);"
    },
    {
      "text": "<p>You should append <code>someAdjective</code> to <code>myStr</code> using the <code>+=</code> operator.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/myStr\\s*\\+=\\s*someAdjective\\s*/).length > 0);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Just as we can build a string over multiple lines out of string <dfn>literals</dfn>, we can also append variables to a string using the plus equals (<code>+=</code>) operator.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const anAdjective = \"awesome!\";\nlet ourStr = \"freeCodeCamp is \";\nourStr += anAdjective;\n</code></pre>\n<p><code>ourStr</code> would have the value <code>freeCodeCamp is awesome!</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Set <code>someAdjective</code> to a string of at least 3 characters and append it to <code>myStr</code> using the <code>+=</code> operator.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 30,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}