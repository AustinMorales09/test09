{
  "id": "56533eb9ac21ba0edf2244d4",
  "title": "Comparison with the Greater Than Operator",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cp6GbH4",
  "forumTopicId": 16786,
  "dashedName": "comparison-with-the-greater-than-operator",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function testGreaterThan(val) {\n  if (val) {  // Change this line\n    return \"Over 100\";\n  }\n\n  if (val) {  // Change this line\n    return \"Over 10\";\n  }\n\n  return \"10 or Under\";\n}\n\ntestGreaterThan(10);",
      "error": null,
      "seed": "function testGreaterThan(val) {\n  if (val) {  // Change this line\n    return \"Over 100\";\n  }\n\n  if (val) {  // Change this line\n    return \"Over 10\";\n  }\n\n  return \"10 or Under\";\n}\n\ntestGreaterThan(10);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function testGreaterThan(val) {\n  if (val > 100) {  // Change this line\n    return \"Over 100\";\n  }\n  if (val > 10) {  // Change this line\n    return \"Over 10\";\n  }\n  return \"10 or Under\";\n}",
        "error": null,
        "seed": "function testGreaterThan(val) {\n  if (val > 100) {  // Change this line\n    return \"Over 100\";\n  }\n  if (val > 10) {  // Change this line\n    return \"Over 10\";\n  }\n  return \"10 or Under\";\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>testGreaterThan(0)</code> should return the string <code>10 or Under</code></p>",
      "testString": "assert(testGreaterThan(0) === '10 or Under');"
    },
    {
      "text": "<p><code>testGreaterThan(10)</code> should return the string <code>10 or Under</code></p>",
      "testString": "assert(testGreaterThan(10) === '10 or Under');"
    },
    {
      "text": "<p><code>testGreaterThan(11)</code> should return the string <code>Over 10</code></p>",
      "testString": "assert(testGreaterThan(11) === 'Over 10');"
    },
    {
      "text": "<p><code>testGreaterThan(99)</code> should return the string <code>Over 10</code></p>",
      "testString": "assert(testGreaterThan(99) === 'Over 10');"
    },
    {
      "text": "<p><code>testGreaterThan(100)</code> should return the string <code>Over 10</code></p>",
      "testString": "assert(testGreaterThan(100) === 'Over 10');"
    },
    {
      "text": "<p><code>testGreaterThan(101)</code> should return the string <code>Over 100</code></p>",
      "testString": "assert(testGreaterThan(101) === 'Over 100');"
    },
    {
      "text": "<p><code>testGreaterThan(150)</code> should return the string <code>Over 100</code></p>",
      "testString": "assert(testGreaterThan(150) === 'Over 100');"
    },
    {
      "text": "<p>You should use the <code>></code> operator at least twice</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/val\\s*>\\s*('|\")*\\d+('|\")*/g).length > 1);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The greater than operator (<code>></code>) compares the values of two numbers. If the number to the left is greater than the number to the right, it returns <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>Like the equality operator, the greater than operator will convert data types of values while comparing.</p>\n<p><strong>Examples</strong></p>\n<pre><code class=\"language-js\">5   >  3  // true\n7   > '3' // true\n2   >  3  // false\n'1' >  9  // false\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add the greater than operator to the indicated lines so that the return statements make sense.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 64,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}