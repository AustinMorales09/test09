{
  "id": "cf1111c1c12feddfaeb2bdef",
  "title": "Generate Random Whole Numbers within a Range",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cm83yu6",
  "forumTopicId": 18187,
  "dashedName": "generate-random-whole-numbers-within-a-range",
  "challengeFiles": [
    {
      "head": "",
      "tail": "var calcMin = 100;\nvar calcMax = -100;\nfor(var i = 0; i < 100; i++) {\n  var result = randomRange(5,15);\n  calcMin = Math.min(calcMin, result);\n  calcMax = Math.max(calcMax, result);\n}\n(function(){\n  if(typeof myRandom === 'number') {\n    return \"myRandom = \" + myRandom;\n  } else {\n    return \"myRandom undefined\";\n  }\n})()",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function randomRange(myMin, myMax) {\n  return 0;\n}",
      "error": null,
      "seed": "function randomRange(myMin, myMax) {\n  return 0;\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function randomRange(myMin, myMax) {\n  return Math.floor(Math.random() * (myMax - myMin + 1)) + myMin;\n}",
        "error": null,
        "seed": "function randomRange(myMin, myMax) {\n  return Math.floor(Math.random() * (myMax - myMin + 1)) + myMin;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The lowest random number that can be generated by <code>randomRange</code> should be equal to your minimum number, <code>myMin</code>.</p>",
      "testString": "assert(calcMin === 5);"
    },
    {
      "text": "<p>The highest random number that can be generated by <code>randomRange</code> should be equal to your maximum number, <code>myMax</code>.</p>",
      "testString": "assert(calcMax === 15);"
    },
    {
      "text": "<p>The random number generated by <code>randomRange</code> should be an integer, not a decimal.</p>",
      "testString": "assert(randomRange(0, 1) % 1 === 0);"
    },
    {
      "text": "<p><code>randomRange</code> should use both <code>myMax</code> and <code>myMin</code>, and return a random number in your range.</p>",
      "testString": "assert(\n  (function () {\n    if (\n      __helpers.removeJSComments(code).match(/myMax/g).length > 1 &&\n      __helpers.removeJSComments(code).match(/myMin/g).length > 2 &&\n      __helpers.removeJSComments(code).match(/Math.floor/g) &&\n      __helpers.removeJSComments(code).match(/Math.random/g)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>You can generate a random whole number in the range from zero to a given number. You can also pick a different lower number for this range.</p>\n<p>You'll call your minimum number <code>min</code> and your maximum number <code>max</code>.</p>\n<p>This formula gives a random whole number in the range from <code>min</code> to <code>max</code>. Take a moment to read it and try to understand what this code is doing:</p>\n<pre><code class=\"language-js\">Math.floor(Math.random() * (max - min + 1)) + min\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Create a function called <code>randomRange</code> that takes a range <code>myMin</code> and <code>myMax</code> and returns a random whole number that's greater than or equal to <code>myMin</code> and less than or equal to <code>myMax</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 106,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}