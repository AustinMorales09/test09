{
  "id": "56533eb9ac21ba0edf2244e1",
  "title": "Nesting For Loops",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cRn6GHM",
  "forumTopicId": 18248,
  "dashedName": "nesting-for-loops",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function multiplyAll(arr) {\n  let product = 1;\n  // Only change code below this line\n\n  // Only change code above this line\n  return product;\n}\n\nmultiplyAll([[1, 2], [3, 4], [5, 6, 7]]);",
      "error": null,
      "seed": "function multiplyAll(arr) {\n  let product = 1;\n  // Only change code below this line\n\n  // Only change code above this line\n  return product;\n}\n\nmultiplyAll([[1, 2], [3, 4], [5, 6, 7]]);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function multiplyAll(arr) {\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      product *= arr[i][j];\n    }\n  }\n  return product;\n}",
        "error": null,
        "seed": "function multiplyAll(arr) {\n  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr[i].length; j++) {\n      product *= arr[i][j];\n    }\n  }\n  return product;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>multiplyAll([[1], [2], [3]])</code> should return <code>6</code></p>",
      "testString": "assert(multiplyAll([[1], [2], [3]]) === 6);"
    },
    {
      "text": "<p><code>multiplyAll([[1, 2], [3, 4], [5, 6, 7]])</code> should return <code>5040</code></p>",
      "testString": "assert(\n  multiplyAll([\n    [1, 2],\n    [3, 4],\n    [5, 6, 7]\n  ]) === 5040\n);"
    },
    {
      "text": "<p><code>multiplyAll([[5, 1], [0.2, 4, 0.5], [3, 9]])</code> should return <code>54</code></p>",
      "testString": "assert(\n  multiplyAll([\n    [5, 1],\n    [0.2, 4, 0.5],\n    [3, 9]\n  ]) === 54\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>If you have a multi-dimensional array, you can use the same logic as the prior waypoint to loop through both the array and any sub-arrays. Here is an example:</p>\n<pre><code class=\"language-js\">const arr = [\n  [1, 2], [3, 4], [5, 6]\n];\n\nfor (let i = 0; i &#x3C; arr.length; i++) {\n  for (let j = 0; j &#x3C; arr[i].length; j++) {\n    console.log(arr[i][j]);\n  }\n}\n</code></pre>\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify function <code>multiplyAll</code> so that it returns the product of all the numbers in the sub-arrays of <code>arr</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 100,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}