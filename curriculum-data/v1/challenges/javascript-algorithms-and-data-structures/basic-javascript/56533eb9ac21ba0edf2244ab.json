{
  "id": "56533eb9ac21ba0edf2244ab",
  "title": "Understanding Case Sensitivity in Variables",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cd6GDcD",
  "forumTopicId": 18334,
  "dashedName": "understanding-case-sensitivity-in-variables",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Variable declarations\nvar StUdLyCapVaR;\nvar properCamelCase;\nvar TitleCaseOver;\n\n// Variable assignments\nSTUDLYCAPVAR = 10;\nPRoperCAmelCAse = \"A String\";\ntITLEcASEoVER = 9000;",
      "error": null,
      "seed": "// Variable declarations\nvar StUdLyCapVaR;\nvar properCamelCase;\nvar TitleCaseOver;\n\n// Variable assignments\nSTUDLYCAPVAR = 10;\nPRoperCAmelCAse = \"A String\";\ntITLEcASEoVER = 9000;"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "var studlyCapVar;\nvar properCamelCase;\nvar titleCaseOver;\n\nstudlyCapVar = 10;\nproperCamelCase = \"A String\";\ntitleCaseOver = 9000;",
        "error": null,
        "seed": "var studlyCapVar;\nvar properCamelCase;\nvar titleCaseOver;\n\nstudlyCapVar = 10;\nproperCamelCase = \"A String\";\ntitleCaseOver = 9000;"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>studlyCapVar</code> should be defined and have a value of <code>10</code>.</p>",
      "testString": "assert(typeof studlyCapVar !== 'undefined' && studlyCapVar === 10);"
    },
    {
      "text": "<p><code>properCamelCase</code> should be defined and have a value of the string <code>A String</code>.</p>",
      "testString": "assert(\n  typeof properCamelCase !== 'undefined' && properCamelCase === 'A String'\n);"
    },
    {
      "text": "<p><code>titleCaseOver</code> should be defined and have a value of <code>9000</code>.</p>",
      "testString": "assert(typeof titleCaseOver !== 'undefined' && titleCaseOver === 9000);"
    },
    {
      "text": "<p><code>studlyCapVar</code> should use camelCase in both declaration and assignment sections.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/studlyCapVar/g).length === 2);"
    },
    {
      "text": "<p><code>properCamelCase</code> should use camelCase in both declaration and assignment sections.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/properCamelCase/g).length === 2);"
    },
    {
      "text": "<p><code>titleCaseOver</code> should use camelCase in both declaration and assignment sections.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/titleCaseOver/g).length === 2);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In JavaScript all variables and function names are case sensitive. This means that capitalization matters.</p>\n<p><code>MYVAR</code> is not the same as <code>MyVar</code> nor <code>myvar</code>. It is possible to have multiple distinct variables with the same name but different casing. It is strongly recommended that for the sake of clarity, you <em>do not</em> use this language feature.</p>\n<p><strong>Best Practice</strong></p>\n<p>Write variable names in JavaScript in <dfn>camelCase</dfn>. In <dfn>camelCase</dfn>, multi-word variable names have the first word in lowercase and the first letter of each subsequent word is capitalized.</p>\n<p><strong>Examples:</strong></p>\n<pre><code class=\"language-js\">var someVariable;\nvar anotherVariableName;\nvar thisVariableNameIsSoLong;\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify the existing declarations and assignments so their names use <dfn>camelCase</dfn>.</p>\n<p>Do not create any new variables.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 7,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}