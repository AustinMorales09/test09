{
  "id": "599a789b454f2bbd91a3ff4d",
  "title": "Practice comparing different values",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cm8PqCa",
  "forumTopicId": 301174,
  "dashedName": "practice-comparing-different-values",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nfunction compareEquality(a, b) {\n  if (a == b) { // Change this line\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}\n\ncompareEquality(10, \"10\");",
      "error": null,
      "seed": "// Setup\nfunction compareEquality(a, b) {\n  if (a == b) { // Change this line\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}\n\ncompareEquality(10, \"10\");"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function compareEquality(a,b) {\n  if (a === b) {\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}",
        "error": null,
        "seed": "function compareEquality(a,b) {\n  if (a === b) {\n    return \"Equal\";\n  }\n  return \"Not Equal\";\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>compareEquality(10, \"10\")</code> should return the string <code>Not Equal</code></p>",
      "testString": "assert(compareEquality(10, '10') === 'Not Equal');"
    },
    {
      "text": "<p><code>compareEquality(\"20\", 20)</code> should return the string <code>Not Equal</code></p>",
      "testString": "assert(compareEquality('20', 20) === 'Not Equal');"
    },
    {
      "text": "<p>You should use the <code>===</code> operator</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/===/g));"
    }
  ],
  "description": "<section id=\"description\">\n<p>In the last two challenges, we learned about the equality operator (<code>==</code>) and the strict equality operator (<code>===</code>). Let's do a quick review and practice using these operators some more.</p>\n<p>If the values being compared are not of the same type, the equality operator will perform a type conversion, and then evaluate the values. However, the strict equality operator will compare both the data type and value as-is, without converting one type to the other.</p>\n<p><strong>Examples</strong></p>\n<p><code>3 == '3'</code> returns <code>true</code> because JavaScript performs type conversion from string to number. <code>3 === '3'</code> returns <code>false</code> because the types are different and type conversion is not performed.</p>\n<p><strong>Note:</strong> In JavaScript, you can determine the type of a variable or a value with the <code>typeof</code> operator, as follows:</p>\n<pre><code class=\"language-js\">typeof 3\ntypeof '3'\n</code></pre>\n<p><code>typeof 3</code> returns the string <code>number</code>, and <code>typeof '3'</code> returns the string <code>string</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>The <code>compareEquality</code> function in the editor compares two values using the equality operator. Modify the function so that it returns the string <code>Equal</code> only when the values are strictly equal.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 61,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}