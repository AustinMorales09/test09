{
  "id": "56533eb9ac21ba0edf2244da",
  "title": "Introducing Else Statements",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cek4Efq",
  "forumTopicId": 18207,
  "dashedName": "introducing-else-statements",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function testElse(val) {\n  let result = \"\";\n  // Only change code below this line\n\n  if (val > 5) {\n    result = \"Bigger than 5\";\n  }\n\n  if (val <= 5) {\n    result = \"5 or Smaller\";\n  }\n\n  // Only change code above this line\n  return result;\n}\n\ntestElse(4);",
      "error": null,
      "seed": "function testElse(val) {\n  let result = \"\";\n  // Only change code below this line\n\n  if (val > 5) {\n    result = \"Bigger than 5\";\n  }\n\n  if (val <= 5) {\n    result = \"5 or Smaller\";\n  }\n\n  // Only change code above this line\n  return result;\n}\n\ntestElse(4);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function testElse(val) {\n  let result = \"\";\n  if(val > 5) {\n    result = \"Bigger than 5\";\n  } else {\n    result = \"5 or Smaller\";\n  }\n  return result;\n}",
        "error": null,
        "seed": "function testElse(val) {\n  let result = \"\";\n  if(val > 5) {\n    result = \"Bigger than 5\";\n  } else {\n    result = \"5 or Smaller\";\n  }\n  return result;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should only have one <code>if</code> statement in the editor</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/if/g).length === 1);"
    },
    {
      "text": "<p>You should use an <code>else</code> statement</p>",
      "testString": "assert(/else/g.test(__helpers.removeJSComments(code)));"
    },
    {
      "text": "<p><code>testElse(4)</code> should return the string <code>5 or Smaller</code></p>",
      "testString": "assert(testElse(4) === '5 or Smaller');"
    },
    {
      "text": "<p><code>testElse(5)</code> should return the string <code>5 or Smaller</code></p>",
      "testString": "assert(testElse(5) === '5 or Smaller');"
    },
    {
      "text": "<p><code>testElse(6)</code> should return the string <code>Bigger than 5</code></p>",
      "testString": "assert(testElse(6) === 'Bigger than 5');"
    },
    {
      "text": "<p><code>testElse(10)</code> should return the string <code>Bigger than 5</code></p>",
      "testString": "assert(testElse(10) === 'Bigger than 5');"
    },
    {
      "text": "<p>You should not change the code above or below the specified comments.</p>",
      "testString": "assert(/let result = \"\";/.test(__helpers.removeJSComments(code)) && /return result;/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>When a condition for an <code>if</code> statement is true, the block of code following it is executed. What about when that condition is false? Normally nothing would happen. With an <code>else</code> statement, an alternate block of code can be executed.</p>\n<pre><code class=\"language-js\">if (num > 10) {\n  return \"Bigger than 10\";\n} else {\n  return \"10 or Less\";\n}\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Combine the <code>if</code> statements into a single <code>if/else</code> statement.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 70,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}