{
  "id": "5688e62ea601b2482ff8422b",
  "title": "Profile Lookup",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cDqW2Cg",
  "forumTopicId": 18259,
  "dashedName": "profile-lookup",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nconst contacts = [\n  {\n    firstName: \"Akira\",\n    lastName: \"Laine\",\n    number: \"0543236543\",\n    likes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n  },\n  {\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    number: \"0994372684\",\n    likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n  },\n  {\n    firstName: \"Sherlock\",\n    lastName: \"Holmes\",\n    number: \"0487345643\",\n    likes: [\"Intriguing Cases\", \"Violin\"],\n  },\n  {\n    firstName: \"Kristian\",\n    lastName: \"Vos\",\n    number: \"unknown\",\n    likes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n  },\n];\n\nfunction lookUpProfile(name, prop) {\n  // Only change code below this line\n\n  // Only change code above this line\n}\n\nlookUpProfile(\"Akira\", \"likes\");",
      "error": null,
      "seed": "// Setup\nconst contacts = [\n  {\n    firstName: \"Akira\",\n    lastName: \"Laine\",\n    number: \"0543236543\",\n    likes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n  },\n  {\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    number: \"0994372684\",\n    likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n  },\n  {\n    firstName: \"Sherlock\",\n    lastName: \"Holmes\",\n    number: \"0487345643\",\n    likes: [\"Intriguing Cases\", \"Violin\"],\n  },\n  {\n    firstName: \"Kristian\",\n    lastName: \"Vos\",\n    number: \"unknown\",\n    likes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n  },\n];\n\nfunction lookUpProfile(name, prop) {\n  // Only change code below this line\n\n  // Only change code above this line\n}\n\nlookUpProfile(\"Akira\", \"likes\");"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const contacts = [\n  {\n    firstName: \"Akira\",\n    lastName: \"Laine\",\n    number: \"0543236543\",\n    likes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n  },\n  {\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    number: \"0994372684\",\n    likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n  },\n  {\n    firstName: \"Sherlock\",\n    lastName: \"Holmes\",\n    number: \"0487345643\",\n    likes: [\"Intriguing Cases\", \"Violin\"],\n  },\n  {\n    firstName: \"Kristian\",\n    lastName: \"Vos\",\n    number: \"unknown\",\n    likes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n  },\n];\nfunction lookUpProfile(name, prop) {\n  for (let i in contacts) {\n    if (contacts[i].firstName === name) {\n      return contacts[i][prop] || \"No such property\";\n    }\n  }\n  return \"No such contact\";\n}",
        "error": null,
        "seed": "const contacts = [\n  {\n    firstName: \"Akira\",\n    lastName: \"Laine\",\n    number: \"0543236543\",\n    likes: [\"Pizza\", \"Coding\", \"Brownie Points\"],\n  },\n  {\n    firstName: \"Harry\",\n    lastName: \"Potter\",\n    number: \"0994372684\",\n    likes: [\"Hogwarts\", \"Magic\", \"Hagrid\"],\n  },\n  {\n    firstName: \"Sherlock\",\n    lastName: \"Holmes\",\n    number: \"0487345643\",\n    likes: [\"Intriguing Cases\", \"Violin\"],\n  },\n  {\n    firstName: \"Kristian\",\n    lastName: \"Vos\",\n    number: \"unknown\",\n    likes: [\"JavaScript\", \"Gaming\", \"Foxes\"],\n  },\n];\nfunction lookUpProfile(name, prop) {\n  for (let i in contacts) {\n    if (contacts[i].firstName === name) {\n      return contacts[i][prop] || \"No such property\";\n    }\n  }\n  return \"No such contact\";\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>lookUpProfile(\"Kristian\", \"lastName\")</code> should return the string <code>Vos</code></p>",
      "testString": "assert(lookUpProfile('Kristian', 'lastName') === 'Vos');"
    },
    {
      "text": "<p><code>lookUpProfile(\"Sherlock\", \"likes\")</code> should return <code>[\"Intriguing Cases\", \"Violin\"]</code></p>",
      "testString": "assert.deepEqual(lookUpProfile('Sherlock', 'likes'), [\n  'Intriguing Cases',\n  'Violin'\n]);"
    },
    {
      "text": "<p><code>lookUpProfile(\"Harry\", \"likes\")</code> should return an array</p>",
      "testString": "assert(typeof lookUpProfile('Harry', 'likes') === 'object');"
    },
    {
      "text": "<p><code>lookUpProfile(\"Bob\", \"number\")</code> should return the string <code>No such contact</code></p>",
      "testString": "assert(lookUpProfile('Bob', 'number') === 'No such contact');"
    },
    {
      "text": "<p><code>lookUpProfile(\"Bob\", \"potato\")</code> should return the string <code>No such contact</code></p>",
      "testString": "assert(lookUpProfile('Bob', 'potato') === 'No such contact');"
    },
    {
      "text": "<p><code>lookUpProfile(\"Akira\", \"address\")</code> should return the string <code>No such property</code></p>",
      "testString": "assert(lookUpProfile('Akira', 'address') === 'No such property');"
    }
  ],
  "description": "<section id=\"description\">\n<p>We have an array of objects representing different people in our contacts lists.</p>\n<p>A <code>lookUpProfile</code> function that takes <code>name</code> and a property (<code>prop</code>) as arguments has been pre-written for you.</p>\n<p>The function should check if <code>name</code> is an actual contact's <code>firstName</code> and the given property (<code>prop</code>) is a property of that contact.</p>\n<p>If both are true, then return the \"value\" of that property.</p>\n<p>If <code>name</code> does not correspond to any contacts then return the string <code>No such contact</code>.</p>\n<p>If <code>prop</code> does not correspond to any valid properties of a contact found to match <code>name</code> then return the string <code>No such property</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 103,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}