{
  "id": "56533eb9ac21ba0edf2244ba",
  "title": "Understand String Immutability",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cWPVaUR",
  "forumTopicId": 18331,
  "dashedName": "understand-string-immutability",
  "challengeFiles": [
    {
      "head": "",
      "tail": "(function(v){return \"myStr = \" + v;})(myStr);",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nlet myStr = \"Jello World\";\n\n// Only change code below this line\nmyStr[0] = \"H\"; // Change this line\n// Only change code above this line",
      "error": null,
      "seed": "// Setup\nlet myStr = \"Jello World\";\n\n// Only change code below this line\nmyStr[0] = \"H\"; // Change this line\n// Only change code above this line"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let myStr = \"Jello World\";\nmyStr = \"Hello World\";",
        "error": null,
        "seed": "let myStr = \"Jello World\";\nmyStr = \"Hello World\";"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>myStr</code> should have a value of the string <code>Hello World</code>.</p>",
      "testString": "assert(myStr === 'Hello World');"
    },
    {
      "text": "<p>You should not change the code above the specified comment.</p>",
      "testString": "assert(/myStr = \"Jello World\"/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>In JavaScript, <code>String</code> values are <dfn>immutable</dfn>, which means that they cannot be altered once created.</p>\n<p>For example, the following code will produce an error because the letter <code>B</code> in the string <code>Bob</code> cannot be changed to the letter <code>J</code>:</p>\n<pre><code class=\"language-js\">let myStr = \"Bob\";\nmyStr[0] = \"J\";\n</code></pre>\n<p>Note that this does <em>not</em> mean that <code>myStr</code> could not be re-assigned. The only way to change <code>myStr</code> would be to assign it with a new value, like this:</p>\n<pre><code class=\"language-js\">let myStr = \"Bob\";\nmyStr = \"Job\";\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Correct the assignment to <code>myStr</code> so it contains the string value of <code>Hello World</code> using the approach shown in the example above.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 33,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}