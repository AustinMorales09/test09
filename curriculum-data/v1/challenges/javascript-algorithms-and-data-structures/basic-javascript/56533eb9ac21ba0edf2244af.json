{
  "id": "56533eb9ac21ba0edf2244af",
  "title": "Compound Assignment With Augmented Addition",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cDR6LCb",
  "forumTopicId": 16661,
  "dashedName": "compound-assignment-with-augmented-addition",
  "challengeFiles": [
    {
      "head": "",
      "tail": "(function(a,b,c){ return \"a = \" + a + \", b = \" + b + \", c = \" + c; })(a,b,c);",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let a = 3;\nlet b = 17;\nlet c = 12;\n\n// Only change code below this line\na = a + 12;\nb = 9 + b;\nc = c + 7;",
      "error": null,
      "seed": "let a = 3;\nlet b = 17;\nlet c = 12;\n\n// Only change code below this line\na = a + 12;\nb = 9 + b;\nc = c + 7;"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let a = 3;\nlet b = 17;\nlet c = 12;\n\na += 12;\nb += 9;\nc += 7;",
        "error": null,
        "seed": "let a = 3;\nlet b = 17;\nlet c = 12;\n\na += 12;\nb += 9;\nc += 7;"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>a</code> should equal <code>15</code>.</p>",
      "testString": "assert(a === 15);"
    },
    {
      "text": "<p><code>b</code> should equal <code>26</code>.</p>",
      "testString": "assert(b === 26);"
    },
    {
      "text": "<p><code>c</code> should equal <code>19</code>.</p>",
      "testString": "assert(c === 19);"
    },
    {
      "text": "<p>You should use the <code>+=</code> operator for each variable.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\\+=/g).length === 3);"
    },
    {
      "text": "<p>You should not modify the code above the specified comment.</p>",
      "testString": "assert(\n  /let a = 3;/.test(__helpers.removeJSComments(code)) &&\n    /let b = 17;/.test(__helpers.removeJSComments(code)) &&\n    /let c = 12;/.test(__helpers.removeJSComments(code))\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In programming, it is common to use assignments to modify the contents of a variable. Remember that everything to the right of the equals sign is evaluated first, so we can say:</p>\n<pre><code class=\"language-js\">myVar = myVar + 5;\n</code></pre>\n<p>to add <code>5</code> to <code>myVar</code>. Since this is such a common pattern, there are operators which do both a mathematical operation and assignment in one step.</p>\n<p>One such operator is the <code>+=</code> operator.</p>\n<pre><code class=\"language-js\">let myVar = 1;\nmyVar += 5;\nconsole.log(myVar);\n</code></pre>\n<p><code>6</code> would be displayed in the console.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Convert the assignments for <code>a</code>, <code>b</code>, and <code>c</code> to use the <code>+=</code> operator.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 20,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}