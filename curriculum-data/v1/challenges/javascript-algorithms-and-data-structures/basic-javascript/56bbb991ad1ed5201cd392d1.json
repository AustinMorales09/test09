{
  "id": "56bbb991ad1ed5201cd392d1",
  "title": "Updating Object Properties",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/c9yEJT4",
  "forumTopicId": 18336,
  "dashedName": "updating-object-properties",
  "challengeFiles": [
    {
      "head": "",
      "tail": "(function(z){return z;})(myDog);",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nconst myDog = {\n  \"name\": \"Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\n\n// Only change code below this line\n",
      "error": null,
      "seed": "// Setup\nconst myDog = {\n  \"name\": \"Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\n\n// Only change code below this line\n"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const myDog = {\n  \"name\": \"Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.name = \"Happy Coder\";",
        "error": null,
        "seed": "const myDog = {\n  \"name\": \"Coder\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"freeCodeCamp Campers\"]\n};\nmyDog.name = \"Happy Coder\";"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should update <code>myDog</code>'s <code>name</code> property to equal the string <code>Happy Coder</code>.</p>",
      "testString": "assert(/happy coder/gi.test(myDog.name));"
    },
    {
      "text": "<p>You should not edit the <code>myDog</code> definition.</p>",
      "testString": "assert(/\"name\": \"Coder\"/.test(__helpers.removeJSComments(code)));"
    }
  ],
  "description": "<section id=\"description\">\n<p>After you've created a JavaScript object, you can update its properties at any time just like you would update any other variable. You can use either dot or bracket notation to update.</p>\n<p>For example, let's look at <code>ourDog</code>:</p>\n<pre><code class=\"language-js\">const ourDog = {\n  \"name\": \"Camper\",\n  \"legs\": 4,\n  \"tails\": 1,\n  \"friends\": [\"everything!\"]\n};\n</code></pre>\n<p>Since he's a particularly happy dog, let's change his name to the string <code>Happy Camper</code>. Here's how we update his object's name property: <code>ourDog.name = \"Happy Camper\";</code> or <code>ourDog[\"name\"] = \"Happy Camper\";</code> Now when we evaluate <code>ourDog.name</code>, instead of getting <code>Camper</code>, we'll get his new name, <code>Happy Camper</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Update the <code>myDog</code> object's name property. Let's change her name from <code>Coder</code> to <code>Happy Coder</code>. You can use either dot or bracket notation.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 86,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}