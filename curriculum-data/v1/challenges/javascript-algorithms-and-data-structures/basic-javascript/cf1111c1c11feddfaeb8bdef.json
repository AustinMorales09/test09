{
  "id": "cf1111c1c11feddfaeb8bdef",
  "title": "Modify Array Data With Indexes",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/czQM4A8",
  "forumTopicId": 18241,
  "dashedName": "modify-array-data-with-indexes",
  "challengeFiles": [
    {
      "head": "",
      "tail": "if(typeof myArray !== \"undefined\"){(function(){return myArray;})();}",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nconst myArray = [18, 64, 99];\n\n// Only change code below this line\n",
      "error": null,
      "seed": "// Setup\nconst myArray = [18, 64, 99];\n\n// Only change code below this line\n"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const myArray = [18, 64, 99];\nmyArray[0] = 45;",
        "error": null,
        "seed": "const myArray = [18, 64, 99];\nmyArray[0] = 45;"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>myArray</code> should now be <code>[45, 64, 99]</code>.</p>",
      "testString": "assert(\n  (function () {\n    if (\n      typeof myArray != 'undefined' &&\n      myArray[0] == 45 &&\n      myArray[1] == 64 &&\n      myArray[2] == 99\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"
    },
    {
      "text": "<p>You should be using correct index to modify the value in <code>myArray</code>.</p>",
      "testString": "assert(\n  (function () {\n    if (__helpers.removeJSComments(code).match(/myArray\\[0\\]\\s*=\\s*/g)) {\n      return true;\n    } else {\n      return false;\n    }\n  })()\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Unlike strings, the entries of arrays are <dfn>mutable</dfn> and can be changed freely, even if the array was declared with <code>const</code>.</p>\n<p><strong>Example</strong></p>\n<pre><code class=\"language-js\">const ourArray = [50, 40, 30];\nourArray[0] = 15;\n</code></pre>\n<p><code>ourArray</code> now has the value <code>[15, 40, 30]</code>.</p>\n<p><strong>Note:</strong> There shouldn't be any spaces between the array name and the square brackets, like <code>array [0]</code>. Although JavaScript is able to process this correctly, this may confuse other programmers reading your code.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify the data stored at index <code>0</code> of <code>myArray</code> to a value of <code>45</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 41,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}