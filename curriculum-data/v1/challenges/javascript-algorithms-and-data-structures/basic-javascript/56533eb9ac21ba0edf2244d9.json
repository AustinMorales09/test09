{
  "id": "56533eb9ac21ba0edf2244d9",
  "title": "Comparisons with the Logical Or Operator",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/cEPrGTN",
  "forumTopicId": 16800,
  "dashedName": "comparisons-with-the-logical-or-operator",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function testLogicalOr(val) {\n  // Only change code below this line\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  // Only change code above this line\n  return \"Inside\";\n}\n\ntestLogicalOr(15);",
      "error": null,
      "seed": "function testLogicalOr(val) {\n  // Only change code below this line\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  if (val) {\n    return \"Outside\";\n  }\n\n  // Only change code above this line\n  return \"Inside\";\n}\n\ntestLogicalOr(15);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function testLogicalOr(val) {\n  if (val < 10 || val > 20) {\n    return \"Outside\";\n  }\n  return \"Inside\";\n}",
        "error": null,
        "seed": "function testLogicalOr(val) {\n  if (val < 10 || val > 20) {\n    return \"Outside\";\n  }\n  return \"Inside\";\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use the <code>||</code> operator once</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\\|\\|/g).length === 1);"
    },
    {
      "text": "<p>You should only have one <code>if</code> statement</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/if/g).length === 1);"
    },
    {
      "text": "<p><code>testLogicalOr(0)</code> should return the string <code>Outside</code></p>",
      "testString": "assert(testLogicalOr(0) === 'Outside');"
    },
    {
      "text": "<p><code>testLogicalOr(9)</code> should return the string <code>Outside</code></p>",
      "testString": "assert(testLogicalOr(9) === 'Outside');"
    },
    {
      "text": "<p><code>testLogicalOr(10)</code> should return the string <code>Inside</code></p>",
      "testString": "assert(testLogicalOr(10) === 'Inside');"
    },
    {
      "text": "<p><code>testLogicalOr(15)</code> should return the string <code>Inside</code></p>",
      "testString": "assert(testLogicalOr(15) === 'Inside');"
    },
    {
      "text": "<p><code>testLogicalOr(19)</code> should return the string <code>Inside</code></p>",
      "testString": "assert(testLogicalOr(19) === 'Inside');"
    },
    {
      "text": "<p><code>testLogicalOr(20)</code> should return the string <code>Inside</code></p>",
      "testString": "assert(testLogicalOr(20) === 'Inside');"
    },
    {
      "text": "<p><code>testLogicalOr(21)</code> should return the string <code>Outside</code></p>",
      "testString": "assert(testLogicalOr(21) === 'Outside');"
    },
    {
      "text": "<p><code>testLogicalOr(25)</code> should return the string <code>Outside</code></p>",
      "testString": "assert(testLogicalOr(25) === 'Outside');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <dfn>logical or</dfn> operator (<code>||</code>) returns <code>true</code> if either of the <dfn>operands</dfn> is <code>true</code>. Otherwise, it returns <code>false</code>.</p>\n<p>The <dfn>logical or</dfn> operator is composed of two pipe symbols: (<code>||</code>). This can typically be found between your Backspace and Enter keys.</p>\n<p>The pattern below should look familiar from prior waypoints.</p>\n<pre><code class=\"language-js\">if (num > 10) {\n  return \"No\";\n}\nif (num &#x3C; 5) {\n  return \"No\";\n}\nreturn \"Yes\";\n</code></pre>\n<p>This code will return <code>Yes</code> if <code>num</code> is between <code>5</code> and <code>10</code> (<code>5</code> and <code>10</code> included). The same logic can be written with the <dfn>logical or</dfn> operator.</p>\n<pre><code class=\"language-js\">if (num > 10 || num &#x3C; 5) {\n  return \"No\";\n}\nreturn \"Yes\";\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Combine the two <code>if</code> statements into one statement which returns the string <code>Outside</code> if <code>val</code> is not between <code>10</code> and <code>20</code>, inclusive. Otherwise, return the string <code>Inside</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 69,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}