{
  "id": "56105e7b514f539506016a5e",
  "title": "Count Backwards With a For Loop",
  "challengeType": 1,
  "videoUrl": "https://scrimba.com/c/c2R6BHa",
  "forumTopicId": 16808,
  "dashedName": "count-backwards-with-a-for-loop",
  "challengeFiles": [
    {
      "head": "",
      "tail": "if(typeof myArray !== \"undefined\"){(function(){return myArray;})();}",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Setup\nconst myArray = [];\n\n// Only change code below this line\n",
      "error": null,
      "seed": "// Setup\nconst myArray = [];\n\n// Only change code below this line\n"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const myArray = [];\nfor (let i = 9; i > 0; i -= 2) {\n  myArray.push(i);\n}",
        "error": null,
        "seed": "const myArray = [];\nfor (let i = 9; i > 0; i -= 2) {\n  myArray.push(i);\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should be using a <code>for</code> loop for this.</p>",
      "testString": "assert(/for\\s*\\([^)]+?\\)/.test(__helpers.removeJSComments(code)));"
    },
    {
      "text": "<p>You should be using the array method <code>push</code>.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/myArray.push/));"
    },
    {
      "text": "<p><code>myArray</code> should equal <code>[9, 7, 5, 3, 1]</code>.</p>",
      "testString": "assert.deepEqual(myArray, [9, 7, 5, 3, 1]);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A for loop can also count backwards, so long as we can define the right conditions.</p>\n<p>In order to decrement by two each iteration, we'll need to change our initialization, condition, and final expression.</p>\n<p>We'll start at <code>i = 10</code> and loop while <code>i > 0</code>. We'll decrement <code>i</code> by 2 each loop with <code>i -= 2</code>.</p>\n<pre><code class=\"language-js\">const ourArray = [];\n\nfor (let i = 10; i > 0; i -= 2) {\n  ourArray.push(i);\n}\n</code></pre>\n<p><code>ourArray</code> will now contain <code>[10, 8, 6, 4, 2]</code>. Let's change our initialization and final expression so we can count backwards by twos to create an array of descending odd numbers.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Push the odd numbers from 9 through 1 to <code>myArray</code> using a <code>for</code> loop.</p>\n</section>",
  "translationPending": false,
  "block": "basic-javascript",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 98,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}