{
  "id": "587d7b84367417b2b2512b37",
  "title": "Catch Mixed Usage of Single and Double Quotes",
  "challengeType": 1,
  "forumTopicId": 301188,
  "dashedName": "catch-mixed-usage-of-single-and-double-quotes",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let innerHtml = \"<p>Click here to <a href=\"#Home\">return home</a></p>\";\nconsole.log(innerHtml);",
      "error": null,
      "seed": "let innerHtml = \"<p>Click here to <a href=\"#Home\">return home</a></p>\";\nconsole.log(innerHtml);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let innerHtml = \"<p>Click here to <a href=\\\"#Home\\\">return home</a></p>\";\nconsole.log(innerHtml);",
        "error": null,
        "seed": "let innerHtml = \"<p>Click here to <a href=\\\"#Home\\\">return home</a></p>\";\nconsole.log(innerHtml);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should fix the quotes around the <code>href</code> value <code>#Home</code> by either changing or escaping them.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/<a href=\\s*?('|\\\\\")#Home\\1\\s*?>/g));"
    },
    {
      "text": "<p>Your code should keep the double quotes around the entire string.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\"<p>.*?<\\/p>\";/g));"
    }
  ],
  "description": "<section id=\"description\">\n<p>JavaScript allows the use of both single (<code>'</code>) and double (<code>\"</code>) quotes to declare a string. Deciding which one to use generally comes down to personal preference, with some exceptions.</p>\n<p>Having two choices is great when a string has contractions or another piece of text that's in quotes. Just be careful that you don't close the string too early, which causes a syntax error.</p>\n<p>Here are some examples of mixing quotes:</p>\n<pre><code class=\"language-js\">const grouchoContraction = \"I've had a perfectly wonderful evening, but this wasn't it.\";\nconst quoteInString = \"Groucho Marx once said 'Quote me as saying I was mis-quoted.'\";\nconst uhOhGroucho = 'I've had a perfectly wonderful evening, but this wasn't it.';\n</code></pre>\n<p>The first two are correct, but the third is incorrect.</p>\n<p>Of course, it is okay to use only one style of quotes. You can escape the quotes inside the string by using the backslash (<code>\\</code>) escape character:</p>\n<pre><code class=\"language-js\">const allSameQuotes = 'I\\'ve had a perfectly wonderful evening, but this wasn\\'t it.';\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Fix the string so it either uses different quotes for the <code>href</code> value, or escape the existing ones. Keep the double quote marks around the entire string.</p>\n</section>",
  "translationPending": false,
  "block": "debugging",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 5,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}