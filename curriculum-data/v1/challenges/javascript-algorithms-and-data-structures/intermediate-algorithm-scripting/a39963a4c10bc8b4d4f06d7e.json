{
  "id": "a39963a4c10bc8b4d4f06d7e",
  "title": "Seek and Destroy",
  "challengeType": 1,
  "forumTopicId": 16046,
  "dashedName": "seek-and-destroy",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function destroyer(arr) {\n  return arr;\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);",
      "error": null,
      "seed": "function destroyer(arr) {\n  return arr;\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function destroyer(arr) {\n  var hash = Object.create(null);\n  [].slice.call(arguments, 1).forEach(function(e) {\n    hash[e] = true;\n  });\n  return arr.filter(function(e) { return !(e in hash);});\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);",
        "error": null,
        "seed": "function destroyer(arr) {\n  var hash = Object.create(null);\n  [].slice.call(arguments, 1).forEach(function(e) {\n    hash[e] = true;\n  });\n  return arr.filter(function(e) { return !(e in hash);});\n}\n\ndestroyer([1, 2, 3, 1, 2, 3], 2, 3);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>destroyer([1, 2, 3, 1, 2, 3], 2, 3)</code> should return <code>[1, 1]</code>.</p>",
      "testString": "assert.deepEqual(destroyer([1, 2, 3, 1, 2, 3], 2, 3), [1, 1]);"
    },
    {
      "text": "<p><code>destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3)</code> should return <code>[1, 5, 1]</code>.</p>",
      "testString": "assert.deepEqual(destroyer([1, 2, 3, 5, 1, 2, 3], 2, 3), [1, 5, 1]);"
    },
    {
      "text": "<p><code>destroyer([3, 5, 1, 2, 2], 2, 3, 5)</code> should return <code>[1]</code>.</p>",
      "testString": "assert.deepEqual(destroyer([3, 5, 1, 2, 2], 2, 3, 5), [1]);"
    },
    {
      "text": "<p><code>destroyer([2, 3, 2, 3], 2, 3)</code> should return <code>[]</code>.</p>",
      "testString": "assert.deepEqual(destroyer([2, 3, 2, 3], 2, 3), []);"
    },
    {
      "text": "<p><code>destroyer([\"tree\", \"hamburger\", 53], \"tree\", 53)</code> should return <code>[\"hamburger\"]</code>.</p>",
      "testString": "assert.deepEqual(destroyer(['tree', 'hamburger', 53], 'tree', 53), [\n  'hamburger'\n]);"
    },
    {
      "text": "<p><code>destroyer([\"possum\", \"trollo\", 12, \"safari\", \"hotdog\", 92, 65, \"grandma\", \"bugati\", \"trojan\", \"yacht\"], \"yacht\", \"possum\", \"trollo\", \"safari\", \"hotdog\", \"grandma\", \"bugati\", \"trojan\")</code> should return <code>[12,92,65]</code>.</p>",
      "testString": "assert.deepEqual(\n  destroyer(\n    [\n      'possum',\n      'trollo',\n      12,\n      'safari',\n      'hotdog',\n      92,\n      65,\n      'grandma',\n      'bugati',\n      'trojan',\n      'yacht'\n    ],\n    'yacht',\n    'possum',\n    'trollo',\n    'safari',\n    'hotdog',\n    'grandma',\n    'bugati',\n    'trojan'\n  ),\n  [12, 92, 65]\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>You will be provided with an initial array as the first argument to the <code>destroyer</code> function, followed by one or more arguments. Remove all elements from the initial array that are of the same value as these arguments.</p>\n<p>The function must accept an indeterminate number of arguments, also known as a variadic function. You can access the additional arguments by adding a rest parameter to the function definition or using the <code>arguments</code> object.</p>\n</section>",
  "translationPending": false,
  "block": "intermediate-algorithm-scripting",
  "hasEditableBoundaries": false,
  "order": 8,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 2,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}