{
  "id": "587d7dba367417b2b2512ba8",
  "title": "Check for All or None",
  "challengeType": 1,
  "forumTopicId": 301338,
  "dashedName": "check-for-all-or-none",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let favWord = \"favorite\";\nlet favRegex = /change/; // Change this line\nlet result = favRegex.test(favWord);",
      "error": null,
      "seed": "let favWord = \"favorite\";\nlet favRegex = /change/; // Change this line\nlet result = favRegex.test(favWord);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let favWord = \"favorite\";\nlet favRegex = /favou?r/;\nlet result = favRegex.test(favWord);",
        "error": null,
        "seed": "let favWord = \"favorite\";\nlet favRegex = /favou?r/;\nlet result = favRegex.test(favWord);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your regex should use the optional symbol, <code>?</code>.</p>",
      "testString": "favRegex.lastIndex = 0;\nassert(favRegex.source.match(/\\?/).length > 0);"
    },
    {
      "text": "<p>Your regex should match the string <code>favorite</code></p>",
      "testString": "favRegex.lastIndex = 0;\nassert(favRegex.test('favorite'));"
    },
    {
      "text": "<p>Your regex should match the string <code>favourite</code></p>",
      "testString": "favRegex.lastIndex = 0;\nassert(favRegex.test('favourite'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>fav</code></p>",
      "testString": "favRegex.lastIndex = 0;\nassert(!favRegex.test('fav'));"
    }
  ],
  "description": "<section id=\"description\">\n<p>Sometimes the patterns you want to search for may have parts of it that may or may not exist. However, it may be important to check for them nonetheless.</p>\n<p>You can specify the possible existence of an element with a question mark, <code>?</code>. This checks for zero or one of the preceding element. You can think of this symbol as saying the previous element is optional.</p>\n<p>For example, there are slight differences in American and British English and you can use the question mark to match both spellings.</p>\n<pre><code class=\"language-js\">let american = \"color\";\nlet british = \"colour\";\nlet rainbowRegex= /colou?r/;\nrainbowRegex.test(american);\nrainbowRegex.test(british);\n</code></pre>\n<p>Both uses of the <code>test</code> method would return <code>true</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Change the regex <code>favRegex</code> to match both the American English (<code>favorite</code>) and the British English (<code>favourite</code>) version of the word.</p>\n</section>",
  "translationPending": false,
  "block": "regular-expressions",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 27,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}