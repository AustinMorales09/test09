{
  "id": "587d7db6367417b2b2512b9a",
  "title": "Match Characters that Occur Zero or More Times",
  "challengeType": 1,
  "forumTopicId": 301351,
  "dashedName": "match-characters-that-occur-zero-or-more-times",
  "challengeFiles": [
    {
      "head": "const chewieQuote = \"Aaaaaaaaaaaaaaaarrrgh!\";",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "// Only change code below this line\nlet chewieRegex = /change/; // Change this line\n// Only change code above this line\n\nlet result = chewieQuote.match(chewieRegex);",
      "error": null,
      "seed": "// Only change code below this line\nlet chewieRegex = /change/; // Change this line\n// Only change code above this line\n\nlet result = chewieQuote.match(chewieRegex);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "  let chewieRegex = /Aa*/;\n  let result = chewieQuote.match(chewieRegex);",
        "error": null,
        "seed": "  let chewieRegex = /Aa*/;\n  let result = chewieQuote.match(chewieRegex);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your regex <code>chewieRegex</code> should use the <code>*</code> character to match zero or more <code>a</code> characters.</p>",
      "testString": "assert(/\\*/.test(chewieRegex.source));"
    },
    {
      "text": "<p>Your regex should match the string <code>A</code> in <code>chewieQuote</code>.</p>",
      "testString": "assert(result[0][0] === 'A');"
    },
    {
      "text": "<p>Your regex should match the string <code>Aaaaaaaaaaaaaaaa</code> in <code>chewieQuote</code>.</p>",
      "testString": "assert(result[0] === 'Aaaaaaaaaaaaaaaa');"
    },
    {
      "text": "<p>Your regex <code>chewieRegex</code> should match 16 characters in <code>chewieQuote</code>.</p>",
      "testString": "assert(result[0].length === 16);"
    },
    {
      "text": "<p>Your regex should not match any characters in the string <code>He made a fair move. Screaming about it can't help you.</code></p>",
      "testString": "assert(\n  !\"He made a fair move. Screaming about it can't help you.\".match(chewieRegex)\n);"
    },
    {
      "text": "<p>Your regex should not match any characters in the string <code>Let him have it. It's not wise to upset a Wookiee.</code></p>",
      "testString": "assert(\n  !\"Let him have it. It's not wise to upset a Wookiee.\".match(chewieRegex)\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last challenge used the plus <code>+</code> sign to look for characters that occur one or more times. There's also an option that matches characters that occur zero or more times.</p>\n<p>The character to do this is the asterisk or star: <code>*</code>.</p>\n<pre><code class=\"language-js\">let soccerWord = \"gooooooooal!\";\nlet gPhrase = \"gut feeling\";\nlet oPhrase = \"over the moon\";\nlet goRegex = /go*/;\nsoccerWord.match(goRegex);\ngPhrase.match(goRegex);\noPhrase.match(goRegex);\n</code></pre>\n<p>In order, the three <code>match</code> calls would return the values <code>[\"goooooooo\"]</code>, <code>[\"g\"]</code>, and <code>null</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>For this challenge, <code>chewieQuote</code> has been initialized as the string <code>Aaaaaaaaaaaaaaaarrrgh!</code> behind the scenes. Create a regex <code>chewieRegex</code> that uses the <code>*</code> character to match an uppercase <code>A</code> character immediately followed by zero or more lowercase <code>a</code> characters in <code>chewieQuote</code>. Your regex does not need flags or character classes, and it should not match any of the other quotes.</p>\n</section>",
  "translationPending": false,
  "block": "regular-expressions",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 12,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}