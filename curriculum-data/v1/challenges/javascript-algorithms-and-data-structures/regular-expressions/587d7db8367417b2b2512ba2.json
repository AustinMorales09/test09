{
  "id": "587d7db8367417b2b2512ba2",
  "title": "Restrict Possible Usernames",
  "challengeType": 1,
  "forumTopicId": 301363,
  "dashedName": "restrict-possible-usernames",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let username = \"JackOfAllTrades\";\nlet userCheck = /change/; // Change this line\nlet result = userCheck.test(username);",
      "error": null,
      "seed": "let username = \"JackOfAllTrades\";\nlet userCheck = /change/; // Change this line\nlet result = userCheck.test(username);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let username = \"JackOfAllTrades\";\nconst userCheck = /^[a-z]([0-9]{2,}|[a-z]+\\d*)$/i;\nlet result = userCheck.test(username);",
        "error": null,
        "seed": "let username = \"JackOfAllTrades\";\nconst userCheck = /^[a-z]([0-9]{2,}|[a-z]+\\d*)$/i;\nlet result = userCheck.test(username);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your regex should match the string <code>JACK</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('JACK'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>J</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('J'));"
    },
    {
      "text": "<p>Your regex should match the string <code>Jo</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('Jo'));"
    },
    {
      "text": "<p>Your regex should match the string <code>Oceans11</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('Oceans11'));"
    },
    {
      "text": "<p>Your regex should match the string <code>RegexGuru</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('RegexGuru'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>007</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('007'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>9</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('9'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>A1</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('A1'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>BadUs3rnam3</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('BadUs3rnam3'));"
    },
    {
      "text": "<p>Your regex should match the string <code>Z97</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('Z97'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>c57bT3</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('c57bT3'));"
    },
    {
      "text": "<p>Your regex should match the string <code>AB1</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(userCheck.test('AB1'));"
    },
    {
      "text": "<p>Your regex should not match the string <code>J%4</code></p>",
      "testString": "userCheck.lastIndex = 0;\nassert(!userCheck.test('J%4'))"
    }
  ],
  "description": "<section id=\"description\">\n<p>Usernames are used everywhere on the internet. They are what give users a unique identity on their favorite sites.</p>\n<p>You need to check all the usernames in a database. Here are some simple rules that users have to follow when creating their username.</p>\n<ol>\n<li>\n<p>Usernames can only use alphanumeric characters.</p>\n</li>\n<li>\n<p>The only numbers in the username have to be at the end. There can be zero or more of them at the end. Username cannot start with the number.</p>\n</li>\n<li>\n<p>Username letters can be lowercase and uppercase.</p>\n</li>\n<li>\n<p>Usernames have to be at least two characters long. A two-character username can only use alphabet letters as characters.</p>\n</li>\n</ol>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Change the regex <code>userCheck</code> to fit the constraints listed above.</p>\n</section>",
  "translationPending": false,
  "block": "regular-expressions",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 21,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}