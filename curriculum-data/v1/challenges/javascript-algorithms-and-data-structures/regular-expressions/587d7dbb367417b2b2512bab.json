{
  "id": "587d7dbb367417b2b2512bab",
  "title": "Use Capture Groups to Search and Replace",
  "challengeType": 1,
  "forumTopicId": 301368,
  "dashedName": "use-capture-groups-to-search-and-replace",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let str = \"one two three\";\nlet fixRegex = /change/; // Change this line\nlet replaceText = \"\"; // Change this line\nlet result = str.replace(fixRegex, replaceText);",
      "error": null,
      "seed": "let str = \"one two three\";\nlet fixRegex = /change/; // Change this line\nlet replaceText = \"\"; // Change this line\nlet result = str.replace(fixRegex, replaceText);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "let str = \"one two three\";\nlet fixRegex = /(\\w+) (\\w+) (\\w+)/g; // Change this line\nlet replaceText = \"$3 $2 $1\"; // Change this line\nlet result = str.replace(fixRegex, replaceText);",
        "error": null,
        "seed": "let str = \"one two three\";\nlet fixRegex = /(\\w+) (\\w+) (\\w+)/g; // Change this line\nlet replaceText = \"$3 $2 $1\"; // Change this line\nlet result = str.replace(fixRegex, replaceText);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use <code>.replace()</code> to search and replace.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/\\.replace\\(.*\\)/));"
    },
    {
      "text": "<p>Your regex should change the string <code>one two three</code> to the string <code>three two one</code></p>",
      "testString": "assert(result === 'three two one');"
    },
    {
      "text": "<p>You should not change the last line.</p>",
      "testString": "assert(__helpers.removeJSComments(code).match(/result\\s*=\\s*str\\.replace\\(.*?\\)/));"
    },
    {
      "text": "<p><code>fixRegex</code> should use at least three capture groups.</p>",
      "testString": "assert(new RegExp(fixRegex.source + '|').exec('').length - 1 >= 3);"
    },
    {
      "text": "<p><code>replaceText</code> should use parenthesized submatch string(s) (i.e. the nth parenthesized submatch string, $n, corresponds to the nth capture group).</p>",
      "testString": "{\n  const re = /(\\$\\d{1,2})+(?:[\\D]|\\b)/g;\n  assert(replaceText.match(re).length >= 3);\n}"
    }
  ],
  "description": "<section id=\"description\">\n<p>Searching is useful. However, you can make searching even more powerful when it also changes (or replaces) the text you match.</p>\n<p>You can search and replace text in a string using <code>.replace()</code> on a string. The inputs for <code>.replace()</code> is first the regex pattern you want to search for. The second parameter is the string to replace the match or a function to do something.</p>\n<pre><code class=\"language-js\">let wrongText = \"The sky is silver.\";\nlet silverRegex = /silver/;\nwrongText.replace(silverRegex, \"blue\");\n</code></pre>\n<p>The <code>replace</code> call would return the string <code>The sky is blue.</code>.</p>\n<p>You can also access capture groups in the replacement string with dollar signs (<code>$</code>).</p>\n<pre><code class=\"language-js\">\"Code Camp\".replace(/(\\w+)\\s(\\w+)/, '$2 $1');\n</code></pre>\n<p>The <code>replace</code> call would return the string <code>Camp Code</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Write a regex <code>fixRegex</code> using three capture groups that will search for each word in the string <code>one two three</code>. Then update the <code>replaceText</code> variable to replace <code>one two three</code> with the string <code>three two one</code> and assign the result to the <code>result</code> variable. Make sure you are utilizing capture groups in the replacement string using the dollar sign (<code>$</code>) syntax.</p>\n</section>",
  "translationPending": false,
  "block": "regular-expressions",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 19,
  "certification": "javascript-algorithms-and-data-structures",
  "superBlock": "javascript-algorithms-and-data-structures",
  "challengeOrder": 31,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}