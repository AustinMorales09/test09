{
  "id": "64e4e7bbedb22d6939001ad3",
  "title": "Step 7",
  "challengeType": 0,
  "dashedName": "step-7",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Learn localStorage by Building a Todo App</title>\n  <link rel=\"stylesheet\" href=\"styles.css\" />\n</head>\n\n<body>\n  <main>\n    <h1>Todo App</h1>\n    <div class=\"todo-app\">\n      <button id=\"open-task-form-btn\" class=\"btn large-btn\">\n        Add New Task\n      </button>\n      <form class=\"task-form hidden\" id=\"task-form\">\n        <div class=\"task-form-header\">\n          <button id=\"close-task-form-btn\" class=\"close-task-form-btn\" type=\"button\" aria-label=\"close\">\n            <svg class=\"close-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#F44336\" d=\"M21.5 4.5H26.501V43.5H21.5z\" transform=\"rotate(45.001 24 24)\" /><path fill=\"#F44336\" d=\"M21.5 4.5H26.5V43.501H21.5z\" transform=\"rotate(135.008 24 24)\" /></svg>\n          </button>\n        </div>\n        <div class=\"task-form-body\">\n          <label class=\"task-form-label\" for=\"title-input\">Title</label>\n          <input required type=\"text\" class=\"form-control\" id=\"title-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"date-input\">Date</label>\n          <input type=\"date\" class=\"form-control\" id=\"date-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"description-input\">Description</label>\n          <textarea class=\"form-control\" id=\"description-input\" cols=\"30\" rows=\"5\"></textarea>\n        </div>\n        <div class=\"task-form-footer\">\n          <button id=\"add-or-update-task-btn\" class=\"btn large-btn\" type=\"submit\">\n            Add Task\n          </button>\n        </div>\n      </form>\n      <dialog id=\"confirm-close-dialog\">\n        <form method=\"dialog\">\n          <p class=\"discard-message-text\">Discard unsaved changes?</p>\n          <div class=\"confirm-close-dialog-btn-container\">\n            <button id=\"cancel-btn\" class=\"btn\">\n              Cancel\n            </button>\n            <button id=\"discard-btn\" class=\"btn\">\n              Discard\n            </button>\n          </div>\n        </form>\n      </dialog>\n      <div id=\"tasks-container\"></div>\n    </div>\n  </main>\n  <script src=\"script.js\"></script>\n</body>\n\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Learn localStorage by Building a Todo App</title>\n  <link rel=\"stylesheet\" href=\"styles.css\" />\n</head>\n\n<body>\n  <main>\n    <h1>Todo App</h1>\n    <div class=\"todo-app\">\n      <button id=\"open-task-form-btn\" class=\"btn large-btn\">\n        Add New Task\n      </button>\n      <form class=\"task-form hidden\" id=\"task-form\">\n        <div class=\"task-form-header\">\n          <button id=\"close-task-form-btn\" class=\"close-task-form-btn\" type=\"button\" aria-label=\"close\">\n            <svg class=\"close-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" width=\"48px\" height=\"48px\"><path fill=\"#F44336\" d=\"M21.5 4.5H26.501V43.5H21.5z\" transform=\"rotate(45.001 24 24)\" /><path fill=\"#F44336\" d=\"M21.5 4.5H26.5V43.501H21.5z\" transform=\"rotate(135.008 24 24)\" /></svg>\n          </button>\n        </div>\n        <div class=\"task-form-body\">\n          <label class=\"task-form-label\" for=\"title-input\">Title</label>\n          <input required type=\"text\" class=\"form-control\" id=\"title-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"date-input\">Date</label>\n          <input type=\"date\" class=\"form-control\" id=\"date-input\" value=\"\" />\n          <label class=\"task-form-label\" for=\"description-input\">Description</label>\n          <textarea class=\"form-control\" id=\"description-input\" cols=\"30\" rows=\"5\"></textarea>\n        </div>\n        <div class=\"task-form-footer\">\n          <button id=\"add-or-update-task-btn\" class=\"btn large-btn\" type=\"submit\">\n            Add Task\n          </button>\n        </div>\n      </form>\n      <dialog id=\"confirm-close-dialog\">\n        <form method=\"dialog\">\n          <p class=\"discard-message-text\">Discard unsaved changes?</p>\n          <div class=\"confirm-close-dialog-btn-container\">\n            <button id=\"cancel-btn\" class=\"btn\">\n              Cancel\n            </button>\n            <button id=\"discard-btn\" class=\"btn\">\n              Discard\n            </button>\n          </div>\n        </form>\n      </dialog>\n      <div id=\"tasks-container\"></div>\n    </div>\n  </main>\n  <script src=\"script.js\"></script>\n</body>\n\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": ":root {\n  --white: #fff;\n  --light-grey: #f5f6f7;\n  --dark-grey: #0a0a23;\n  --yellow: #f1be32;\n  --golden-yellow: #feac32;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: var(--light-grey);\n  margin: 20px 0 40px 0;\n}\n\n.todo-app {\n  background-color: var(--white);\n  width: 300px;\n  height: 350px;\n  border: 5px solid var(--yellow);\n  border-radius: 8px;\n  padding: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.btn {\n  cursor: pointer;\n  width: 100px;\n  margin: 10px;\n  color: var(--dark-grey);\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(#ffcc4c, #f89808);\n}\n\n.large-btn {\n  width: 80%;\n  font-size: 1.2rem;\n  align-self: center;\n  justify-self: center;\n}\n\n.close-task-form-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 20px;\n  height: 20px;\n}\n\n.task-form {\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--white);\n  border-radius: 5px;\n  padding: 15px;\n  width: 300px;\n  height: 350px;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n.task-form-header {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.task-form-body {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.task-form-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.task-form-label,\n#title-input,\n#date-input,\n#description-input {\n  display: block;\n}\n\n.task-form-label {\n  margin-bottom: 5px;\n  font-size: 1.3rem;\n  font-weight: bold;\n}\n\n#title-input,\n#date-input,\n#description-input {\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 2px;\n}\n\n#confirm-close-dialog {\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 15px;\n}\n\n.confirm-close-dialog-btn-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.discard-message-text {\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n#tasks-container {\n  height: 100%;\n  overflow-y: auto;\n}\n\n.task {\n  margin: 5px 0;\n}\n\n.hidden {\n  display: none;\n}\n\n@media (min-width: 576px) {\n  .todo-app,\n  .task-form {\n    width: 400px;\n    height: 450px;\n  }\n\n  .task-form-label {\n    font-size: 1.5rem;\n  }\n\n  #title-input,\n  #date-input {\n    height: 2rem;\n  }\n\n  #title-input,\n  #date-input,\n  #description-input {\n    padding: 5px;\n    margin-bottom: 20px;\n  }\n}",
      "error": null,
      "seed": ":root {\n  --white: #fff;\n  --light-grey: #f5f6f7;\n  --dark-grey: #0a0a23;\n  --yellow: #f1be32;\n  --golden-yellow: #feac32;\n}\n\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nh1 {\n  color: var(--light-grey);\n  margin: 20px 0 40px 0;\n}\n\n.todo-app {\n  background-color: var(--white);\n  width: 300px;\n  height: 350px;\n  border: 5px solid var(--yellow);\n  border-radius: 8px;\n  padding: 15px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.btn {\n  cursor: pointer;\n  width: 100px;\n  margin: 10px;\n  color: var(--dark-grey);\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(#ffcc4c, #f89808);\n}\n\n.large-btn {\n  width: 80%;\n  font-size: 1.2rem;\n  align-self: center;\n  justify-self: center;\n}\n\n.close-task-form-btn {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.close-icon {\n  width: 20px;\n  height: 20px;\n}\n\n.task-form {\n  display: flex;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: var(--white);\n  border-radius: 5px;\n  padding: 15px;\n  width: 300px;\n  height: 350px;\n  flex-direction: column;\n  justify-content: space-between;\n  overflow: auto;\n}\n\n.task-form-header {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.task-form-body {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n\n.task-form-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.task-form-label,\n#title-input,\n#date-input,\n#description-input {\n  display: block;\n}\n\n.task-form-label {\n  margin-bottom: 5px;\n  font-size: 1.3rem;\n  font-weight: bold;\n}\n\n#title-input,\n#date-input,\n#description-input {\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 2px;\n}\n\n#confirm-close-dialog {\n  padding: 10px;\n  margin: 10px auto;\n  border-radius: 15px;\n}\n\n.confirm-close-dialog-btn-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n}\n\n.discard-message-text {\n  font-weight: bold;\n  font-size: 1.5rem;\n}\n\n#tasks-container {\n  height: 100%;\n  overflow-y: auto;\n}\n\n.task {\n  margin: 5px 0;\n}\n\n.hidden {\n  display: none;\n}\n\n@media (min-width: 576px) {\n  .todo-app,\n  .task-form {\n    width: 400px;\n    height: 450px;\n  }\n\n  .task-form-label {\n    font-size: 1.5rem;\n  }\n\n  #title-input,\n  #date-input {\n    height: 2rem;\n  }\n\n  #title-input,\n  #date-input,\n  #description-input {\n    padding: 5px;\n    margin-bottom: 20px;\n  }\n}"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        19,
        21
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const taskForm = document.getElementById(\"task-form\");\nconst confirmCloseDialog = document.getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document.getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document.getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document.getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document.getElementById(\"cancel-btn\");\nconst discardBtn = document.getElementById(\"discard-btn\");\nconst tasksContainer = document.getElementById(\"tasks-container\");\nconst titleInput = document.getElementById(\"title-input\");\nconst dateInput = document.getElementById(\"date-input\");\nconst descriptionInput = document.getElementById(\"description-input\");\n\nconst taskData = [];\nlet currentTask = {};\n\nopenTaskFormBtn.addEventListener(\"click\", () =>\n  taskForm.classList.toggle(\"hidden\")\n);\n\n",
      "error": null,
      "seed": "const taskForm = document.getElementById(\"task-form\");\nconst confirmCloseDialog = document.getElementById(\"confirm-close-dialog\");\nconst openTaskFormBtn = document.getElementById(\"open-task-form-btn\");\nconst closeTaskFormBtn = document.getElementById(\"close-task-form-btn\");\nconst addOrUpdateTaskBtn = document.getElementById(\"add-or-update-task-btn\");\nconst cancelBtn = document.getElementById(\"cancel-btn\");\nconst discardBtn = document.getElementById(\"discard-btn\");\nconst tasksContainer = document.getElementById(\"tasks-container\");\nconst titleInput = document.getElementById(\"title-input\");\nconst dateInput = document.getElementById(\"date-input\");\nconst descriptionInput = document.getElementById(\"description-input\");\n\nconst taskData = [];\nlet currentTask = {};\n\nopenTaskFormBtn.addEventListener(\"click\", () =>\n  taskForm.classList.toggle(\"hidden\")\n);\n\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should call the <code>addEventListener()</code> method on your <code>closeTaskFormBtn</code> variable.</p>",
      "testString": "assert.match(code, /closeTaskFormBtn\\.addEventListener\\(/)"
    },
    {
      "text": "<p>Your event listener should listen for a <code>click</code> event.</p>",
      "testString": "assert.match(code, /closeTaskFormBtn\\.addEventListener\\(\\s*('|\"|`)click\\1/)"
    },
    {
      "text": "<p>Your event listener's callback function should call the <code>showModal()</code> method on the <code>confirmCloseDialog</code> element.</p>",
      "testString": "assert.match(code, /closeTaskFormBtn\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(.*\\)\\s*=>\\s*(\\{\\s*confirmCloseDialog\\.showModal\\(\\s*\\)\\s*;?\\s*\\}|confirmCloseDialog\\.showModal\\(\\s*\\))\\s*\\)\\s*;?/)"
    }
  ],
  "description": "<section id=\"description\">\n<p>The HTML <code>dialog</code> element has a <code>showModal()</code> method that can be used to display a modal dialog box on a web page.</p>\n<pre><code class=\"language-js\">dialogElement.showModal();\n</code></pre>\n<p>Add an event listener to the <code>closeTaskFormBtn</code> variable and pass in a <code>click</code> event for the first argument and a callback function for the second argument.</p>\n<p>For the callback function, call the <code>showModal()</code> method on the <code>confirmCloseDialog</code> element. This will display a modal with the <code>Discard</code> and <code>Cancel</code> buttons.</p>\n</section>",
  "translationPending": false,
  "block": "learn-localstorage-by-building-a-todo-app",
  "hasEditableBoundaries": true,
  "order": 10,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 6,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}