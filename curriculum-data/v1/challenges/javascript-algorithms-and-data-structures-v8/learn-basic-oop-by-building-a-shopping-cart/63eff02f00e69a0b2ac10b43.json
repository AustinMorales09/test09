{
  "id": "63eff02f00e69a0b2ac10b43",
  "title": "Step 25",
  "challengeType": 0,
  "dashedName": "step-25",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}",
      "error": null,
      "seed": "*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        110,
        123
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    \n  }\n};",
      "error": null,
      "seed": "const cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaron\",\n    price: 3.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macarons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macarons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaron\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = (totalCountPerProduct[dessert.id] || 0) + 1;\n    })\n\n    \n  }\n};"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a <code>currentProductCount</code> variable in your <code>addItem</code> function.</p>",
      "testString": "const cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*=/);"
    },
    {
      "text": "<p>You should use <code>const</code> to declare <code>currentProductCount</code>.</p>",
      "testString": "const afterAdd = code.split(\"addItem\")[1];\nassert.match(afterAdd, /const\\s+currentProductCount\\s*=/);"
    },
    {
      "text": "<p>You should assign the value of <code>totalCountPerProduct[product.id]</code> to <code>currentProductCount</code>.</p>",
      "testString": "const cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /currentProductCount\\s*=\\s*totalCountPerProduct\\s*\\[\\s*product\\.id\\s*\\]/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now you need to get prepared to update the display with the new product the user added. Declare a <code>currentProductCount</code> variable, and assign it the value of the <code>totalCountPerProduct</code> object's property matching the <code>id</code> of <code>product</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-basic-oop-by-building-a-shopping-cart",
  "hasEditableBoundaries": true,
  "order": 18,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 24,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}