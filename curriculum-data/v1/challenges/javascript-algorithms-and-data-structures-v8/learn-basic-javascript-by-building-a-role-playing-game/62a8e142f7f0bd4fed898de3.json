{
  "id": "62a8e142f7f0bd4fed898de3",
  "title": "Step 115",
  "challengeType": 0,
  "dashedName": "step-115",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n  </head>\n  <body>\n    <div id=\"game\">\n      <div id=\"stats\">\n        <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n        <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n      </div>\n      <div id=\"controls\">\n        <button id=\"button1\">Go to store</button>\n        <button id=\"button2\">Go to cave</button>\n        <button id=\"button3\">Fight dragon</button>\n      </div>\n      <div id=\"monsterStats\">\n        <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n        <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n      </div>\n      <div id=\"text\">\n        Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n      </div>\n    </div>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}",
      "error": null,
      "seed": "body {\n  background-color: #0a0a23;\n}\n\n#text {\n  background-color: #0a0a23;\n  color: #ffffff;\n  padding: 10px;\n}\n\n#game {\n  max-width: 500px;\n  max-height: 400px;\n  background-color: #ffffff;\n  color: #ffffff;\n  margin: 30px auto 0px;\n  padding: 10px;\n}\n\n#controls,\n#stats {\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #0a0a23;\n}\n\n#monsterStats {\n  display: none;\n  border: 1px solid #0a0a23;\n  padding: 5px;\n  color: #ffffff;\n  background-color: #c70d0d;\n}\n\n.stat {\n  padding-right: 10px;\n}\n\nbutton {\n  cursor: pointer;\n  color: #0a0a23;\n  background-color: #feac32;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n}"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        41,
        62
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n\n}\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}",
      "error": null,
      "seed": "let xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeaponIndex = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText = document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n  {\n    name: \"town square\",\n    \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n    \"button functions\": [goStore, goCave, fightDragon],\n    text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n  },\n  {\n    name: \"store\",\n    \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n    \"button functions\": [buyHealth, buyWeapon, goTown],\n    text: \"You enter the store.\"\n  },\n  {\n    name: \"cave\",\n    \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n    \"button functions\": [fightSlime, fightBeast, goTown],\n    text: \"You enter the cave. You see some monsters.\"\n  }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeaponIndex < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeaponIndex++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeaponIndex].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n\n}\n\nfunction attack() {\n\n}\n\nfunction dodge() {\n\n}"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>locations</code> array should have 4 values in it.</p>",
      "testString": "assert.lengthOf(locations, 4);"
    },
    {
      "text": "<p>Your new value should be an object.</p>",
      "testString": "assert.isObject(locations[3]);"
    },
    {
      "text": "<p>Your new object should have a <code>name</code> property set to <code>\"fight\"</code>.</p>",
      "testString": "assert.equal(locations[3].name, \"fight\");"
    },
    {
      "text": "<p>Your new object should have a <code>\"button text\"</code> property set to an array with the strings <code>\"Attack\"</code>, <code>\"Dodge\"</code>, and <code>\"Run\"</code>.</p>",
      "testString": "assert.deepEqual(locations[3][\"button text\"], [\"Attack\", \"Dodge\", \"Run\"]);"
    },
    {
      "text": "<p>Your new object should have a <code>\"button functions\"</code> property set to an array with the variables <code>attack</code>, <code>dodge</code>, and <code>goTown</code>.</p>",
      "testString": "assert.deepEqual(locations[3][\"button functions\"], [attack, dodge, goTown]);"
    },
    {
      "text": "<p>Your new object should have a <code>text</code> property set to <code>\"You are fighting a monster.\"</code>.</p>",
      "testString": "assert.equal(locations[3].text, \"You are fighting a monster.\");"
    }
  ],
  "description": "<section id=\"description\">\n<p>Add a new object to the end of the <code>locations</code> array, following the same properties as the rest of the objects. Set <code>name</code> to <code>\"fight\"</code>, <code>\"button text\"</code> to an array with <code>\"Attack\"</code>, <code>\"Dodge\"</code>, and <code>\"Run\"</code>, <code>\"button functions\"</code> to an array with <code>attack</code>, <code>dodge</code>, and <code>goTown</code>, and <code>text</code> to <code>\"You are fighting a monster.\"</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-basic-javascript-by-building-a-role-playing-game",
  "hasEditableBoundaries": true,
  "order": 2,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 114,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}