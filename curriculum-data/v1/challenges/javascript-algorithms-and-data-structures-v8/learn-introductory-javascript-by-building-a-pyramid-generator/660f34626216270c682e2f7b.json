{
  "id": "660f34626216270c682e2f7b",
  "title": "Step 63",
  "challengeType": 1,
  "dashedName": "step-63",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        9,
        13
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return character.repeat(rowNumber);\n}\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return character.repeat(rowNumber);\n}\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should not use <code>i + 1</code> in your <code>push</code> call.</p>",
      "testString": "assert.notMatch(code, /repeat\\(\\s*i\\s*\\+\\s*1\\s*\\)/);"
    },
    {
      "text": "<p>You should not use <code>character.repeat</code> in your <code>.push()</code> call.</p>",
      "testString": "assert.notMatch(code, /push\\(\\s*character/);"
    },
    {
      "text": "<p>You should call <code>padRow</code> in your <code>.push()</code> call.</p>",
      "testString": "assert.match(code, /push\\(\\s*padRow\\(\\s*\\)\\)/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A <dfn>function call</dfn> allows you to actually use a function. You may not have been aware of it, but the methods like <code>.push()</code> that you have been using have been function calls.</p>\n<p>A function is called by referencing the function's name, and adding <code>()</code>. Here's how to call a <code>test</code> function:</p>\n<pre><code class=\"language-js\">test();\n</code></pre>\n<p>Replace the <code>character.repeat(i + 1)</code> in your <code>.push()</code> call with a function call for your <code>padRow</code> function.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 62,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}