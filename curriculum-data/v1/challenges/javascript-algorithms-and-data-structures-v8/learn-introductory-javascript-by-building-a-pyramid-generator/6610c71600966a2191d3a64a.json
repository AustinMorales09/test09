{
  "id": "6610c71600966a2191d3a64a",
  "title": "Step 56",
  "challengeType": 1,
  "dashedName": "step-56",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        10
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(name) {\n  const test = \"Testing\";  \n  return character + name;\n}\n\nconst call = padRow(\"CamperChan\");\nconsole.log(call);\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(name) {\n  const test = \"Testing\";  \n  return character + name;\n}\n\nconst call = padRow(\"CamperChan\");\nconsole.log(call);\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>padRow</code> function should return the <code>test</code> variable.</p>",
      "testString": "assert.equal(padRow(\"Naomi\"), \"Testing\");"
    }
  ],
  "description": "<section id=\"description\">\n<p>Values returned out of a function are used by calling the function. You can use the function call directly as the value it returns, or capture the returned value in a variable. This way, you can use the value assigned to a locally scoped variable, outside the function it was created in.</p>\n<pre><code class=\"language-js\">function getName() {\n  const name = \"Camper cat\";\n  return name;\n}\n\nconsole.log(getName()); // \"Camper cat\"\n\nconst capturedReturnValue = getName();\nconsole.log(capturedReturnValue); // \"Camper cat\"\n\nconsole.log(name); // reference error\n</code></pre>\n<p>To use your <code>\"Testing\"</code> value, return it out of the <code>padRow</code> function by updating your <code>return</code> statement to return only the <code>test</code> variable.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 55,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}