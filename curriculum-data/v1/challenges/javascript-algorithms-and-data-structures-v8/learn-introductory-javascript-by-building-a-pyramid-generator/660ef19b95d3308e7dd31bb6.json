{
  "id": "660ef19b95d3308e7dd31bb6",
  "title": "Step 4",
  "challengeType": 1,
  "dashedName": "step-4",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        3
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let character = 'Hello';\n",
      "error": null,
      "seed": "let character = 'Hello';\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should access the <code>console</code> in your code.</p>",
      "testString": "assert.match(code, /console/);"
    },
    {
      "text": "<p>You should access the <code>log</code> property of the <code>console</code>.</p>",
      "testString": "assert.match(code, /console\\.log/);"
    },
    {
      "text": "<p>You should use parentheses to call the <code>.log()</code> method.</p>",
      "testString": "assert.match(code, /console\\.log\\(/);"
    },
    {
      "text": "<p>You should print the <code>character</code> variable to the console.</p>",
      "testString": "assert.match(code, /console\\.log\\(\\s*character\\s*\\)/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <dfn>console</dfn> allows you to print and view JavaScript output. You can send information to the console using <code>console.log()</code>. For example, this code will print <code>\"Naomi\"</code> to the console:</p>\n<pre><code class=\"language-js\">let developer = \"Naomi\";\nconsole.log(developer);\n</code></pre>\n<p>The code above accesses the <code>developer</code> variable with its name in the <code>console.log()</code>. Note that the value between the parentheses is the value that will be printed.</p>\n<p>Print the value of the <code>character</code> variable to the console. Then, click the \"Console\" button to view the JavaScript console.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 3,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}