{
  "id": "660f46460f9c36330ebc07d8",
  "title": "Step 85",
  "challengeType": 1,
  "dashedName": "step-85",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        18,
        22
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(2 * rowNumber - 1) + \" \".repeat(rowCount - rowNumber);\n}\n\n// TODO: use a different type of loop\n/*for (let i = 1; i <= count; i++) {\n  rows.push(padRow(i, count));\n}*/\n\nlet continueLoop = false;\nlet done = 0;\n\nwhile (continueLoop) {\n  done++;\n  if (done == count) {\n\n  }\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(2 * rowNumber - 1) + \" \".repeat(rowCount - rowNumber);\n}\n\n// TODO: use a different type of loop\n/*for (let i = 1; i <= count; i++) {\n  rows.push(padRow(i, count));\n}*/\n\nlet continueLoop = false;\nlet done = 0;\n\nwhile (continueLoop) {\n  done++;\n  if (done == count) {\n\n  }\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>if</code> condition should use strict equality.</p>",
      "testString": "assert.match(code, /while\\s*\\(\\s*continueLoop\\s*\\)\\s*\\{\\s*done\\+\\+;\\s*if\\s*\\(\\s*(?:done\\s*===\\s*count|count\\s*===\\s*done)\\s*\\)\\s*\\{/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The equality operator can lead to some strange behavior in JavaScript. For example, <code>\"0\" == 0</code> is true, even though one is a string and one is a number.</p>\n<p>The <dfn>strict equality</dfn> operator <code>===</code> is used to check if two values are equal and share the same type. As a general rule, this is the equality operator you should always use. With the strict equality operator, <code>\"0\" === 0</code> becomes false, because while they might have the same value of zero, they are not of the same type.</p>\n<p>Update your <code>done == count</code> condition to use the strict equality operator.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 84,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}