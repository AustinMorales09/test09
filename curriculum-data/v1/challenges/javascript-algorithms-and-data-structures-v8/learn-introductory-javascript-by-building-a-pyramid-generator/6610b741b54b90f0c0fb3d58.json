{
  "id": "6610b741b54b90f0c0fb3d58",
  "title": "Step 7",
  "challengeType": 1,
  "dashedName": "step-7",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        6
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "let character = 'Hello';\nconsole.log(character);\ncharacter = \"World\";\nconsole.log(character);\n",
      "error": null,
      "seed": "let character = 'Hello';\nconsole.log(character);\ncharacter = \"World\";\nconsole.log(character);\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a <code>secondCharacter</code> variable.</p>",
      "testString": "assert.match(code, /secondCharacter/);"
    },
    {
      "text": "<p>You should use <code>let</code> to declare your <code>secondCharacter</code> variable.</p>",
      "testString": "assert.match(code, /let\\s+secondCharacter/);"
    },
    {
      "text": "<p>You should not assign a value to your <code>secondCharacter</code> variable. Do not forget your semi-colon.</p>",
      "testString": "assert.match(code, /let\\s+secondCharacter;/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>When variable names are more than one word, there are specific naming conventions for how you capitalize the words. In JavaScript, the convention to use is <dfn>camel case</dfn>.</p>\n<p>Camel case means that the first word in the name is entirely lowercase, but the following words are all title-cased. Here are some examples of camel case:</p>\n<pre><code class=\"language-js\">let variableOne;\nlet secondVariable;\nlet yetAnotherVariable;\nlet thisIsAnAbsurdlyLongName;\n</code></pre>\n<p>Use camel case to declare a new <code>secondCharacter</code> variable.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 6,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}