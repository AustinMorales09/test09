{
  "id": "660f383d4c772c12ff59904b",
  "title": "Step 67",
  "challengeType": 1,
  "dashedName": "step-67",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        8
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(rowNumber) + \" \".repeat(rowCount - rowNumber);\n}\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(padRow(i + 1, count));\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \".repeat(rowCount - rowNumber) + character.repeat(rowNumber) + \" \".repeat(rowCount - rowNumber);\n}\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(padRow(i + 1, count));\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your function should pass <code>2 * rowNumber - 1</code> to your <code>.repeat()</code> call.</p>",
      "testString": "assert.equal(padRow(4, 5), \" ####### \");"
    }
  ],
  "description": "<section id=\"description\">\n<p>You can pass full expressions as an argument. The function will receive the result of evaluating that expression. For example, these two function calls would yield the same result:</p>\n<pre><code class=\"language-js\">test(2 * 3 + 1);\ntest(7);\n</code></pre>\n<p>Looking at the pattern again:</p>\n<pre><code class=\"language-md\">··#··\n·###·\n#####\n</code></pre>\n<p>Update the <code>character</code> value to be repeated <code>2 * rowNumber - 1</code> times.</p>\n<p>Open up the console again to see the updated result.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 66,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}