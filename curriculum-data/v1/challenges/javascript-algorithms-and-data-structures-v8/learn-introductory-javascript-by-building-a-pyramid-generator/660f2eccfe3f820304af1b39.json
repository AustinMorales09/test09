{
  "id": "660f2eccfe3f820304af1b39",
  "title": "Step 61",
  "challengeType": 1,
  "dashedName": "step-61",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        8
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow() {\n\n}\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow() {\n\n}\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>padRow</code> function should have a <code>rowNumber</code> parameter.</p>",
      "testString": "assert.match(code, /function\\s+padRow\\s*\\(\\s*rowNumber/);"
    },
    {
      "text": "<p>You should add a comma after your <code>rowNumber</code> parameter.</p>",
      "testString": "assert.match(code, /function\\s+padRow\\s*\\(\\s*rowNumber\\s*,\\s*/);"
    },
    {
      "text": "<p>Your <code>padRow</code> function should have a <code>rowCount</code> parameter.</p>",
      "testString": "assert.match(code, /function\\s+padRow\\s*\\(\\s*rowNumber\\s*,\\s*rowCount\\s*\\)/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In order to know how to format a row, your <code>padRow</code> function will need to know which row number you are on, and how many rows in total are being generated.</p>\n<p>The best way to do this is by creating function parameters for them. Give your <code>padRow</code> function a <code>rowNumber</code> and <code>rowCount</code> parameter. Multiple parameters are separated by a comma:</p>\n<pre><code class=\"language-js\">function name(first, second) {\n\n}\n</code></pre>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 60,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}