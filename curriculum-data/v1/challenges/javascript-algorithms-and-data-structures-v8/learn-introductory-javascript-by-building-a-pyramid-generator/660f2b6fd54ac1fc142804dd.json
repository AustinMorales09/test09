{
  "id": "660f2b6fd54ac1fc142804dd",
  "title": "Step 46",
  "challengeType": 1,
  "dashedName": "step-46",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        6
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\n\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\n\n\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(character.repeat(i + 1))\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use the <code>function</code> keyword.</p>",
      "testString": "assert.match(code, /function/);"
    },
    {
      "text": "<p>You should declare a <code>padRow</code> function.</p>",
      "testString": "assert.isFunction(padRow);"
    },
    {
      "text": "<p>Your <code>padRow()</code> function should not have any parameters.</p>",
      "testString": "assert.match(code, /padRow\\s*\\(\\s*\\)/);"
    },
    {
      "text": "<p>Your <code>padRow()</code> function should have an empty body.</p>",
      "testString": "assert.match(code, /padRow\\s*\\(\\s*\\)\\s*\\{\\s*\\}/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The logic for formatting this pyramid is likely going to get complicated, which means it's a great time to extract that code into a function.</p>\n<p>A <dfn>function</dfn> is a block of code that can be reused throughout your application. Functions are declared with the following syntax:</p>\n<pre><code class=\"language-js\">function name(parameter) {\n\n}\n</code></pre>\n<p>The <code>function</code> keyword tells JavaScript that the <code>name</code> variable is going to be a function. <code>parameter</code> is a variable that represents a value that is passed into the function when it is used. A function may have as many, or as few, <dfn>parameters</dfn> as you'd like. Like a <code>for</code> loop, the space between the curly braces is the <dfn>function body</dfn>.</p>\n<p>Declare a <code>padRow</code> function. Do not create any parameter variables yet. The function body should be empty. Remember that you need to use camel case for your naming convention.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 45,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}