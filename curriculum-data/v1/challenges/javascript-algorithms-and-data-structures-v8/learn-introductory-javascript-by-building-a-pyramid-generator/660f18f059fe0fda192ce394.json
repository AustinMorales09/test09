{
  "id": "660f18f059fe0fda192ce394",
  "title": "Step 33",
  "challengeType": 1,
  "dashedName": "step-33",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        8
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfor (\"iterator\"; \"condition\"; \"iteration\") {\n\n}",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfor (\"iterator\"; \"condition\"; \"iteration\") {\n\n}"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use <code>let</code> to declare an <code>i</code> variable.</p>",
      "testString": "assert.match(code, /let\\s+i/);"
    },
    {
      "text": "<p>You should assign <code>0</code> to your <code>i</code> variable.</p>",
      "testString": "assert.match(code, /let\\s+i\\s*=\\s*0/);"
    },
    {
      "text": "<p>Your <code>for</code> loop should start an <code>i</code> iterator at <code>0</code>.</p>",
      "testString": "assert.match(code, /for\\s*\\(\\s*let\\s+i\\s*=\\s*0/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Your loop now needs a proper iterator. The <dfn>iterator</dfn> is a variable you can declare specifically in your <code>for</code> loop to control how the loop iterates or goes through your logic.</p>\n<p>It is a common convention to use <code>i</code> as your iterator variable in a loop. A <code>for</code> loop allows you to declare this in the parentheses <code>()</code>. For example, here is a <code>for</code> loop that declares an <code>index</code> variable and assigns it the value <code>100</code>.</p>\n<pre><code class=\"language-js\">for (let index = 100; \"second\"; \"third\") {\n\n}\n</code></pre>\n<p>Replace the string <code>\"iterator\"</code> with a <code>let</code> declaration for the variable <code>i</code>. Assign it the value <code>0</code> to start. This will give the <code>i</code> variable the value <code>0</code> the <strong>first time</strong> your loop runs.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 32,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}