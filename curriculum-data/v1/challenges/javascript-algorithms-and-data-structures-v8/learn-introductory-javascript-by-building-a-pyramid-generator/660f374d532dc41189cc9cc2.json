{
  "id": "660f374d532dc41189cc9cc2",
  "title": "Step 66",
  "challengeType": 1,
  "dashedName": "step-66",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        8
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \" + character.repeat(rowNumber) + \" \";\n}\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(padRow(i + 1, count));\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);",
      "error": null,
      "seed": "const character = \"#\";\nconst count = 8;\nconst rows = [];\n\nfunction padRow(rowNumber, rowCount) {\n  return \" \" + character.repeat(rowNumber) + \" \";\n}\n\nfor (let i = 0; i < count; i = i + 1) {\n  rows.push(padRow(i + 1, count));\n}\n\nlet result = \"\"\n\nfor (const row of rows) {\n  result = result + \"\\n\" + row;\n}\n\nconsole.log(result);"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should call <code>.repeat()</code> on your <code>\" \"</code> strings to repeat them <code>rowCount - rowNumber</code> times.</p>",
      "testString": "assert.equal(padRow(1, 3), \"  #  \");"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now it is time for a bit of math. Consider a three-row pyramid. If we want it centered, it would look something like:</p>\n<pre><code class=\"language-md\">··#··\n·###·\n#####\n</code></pre>\n<p>Empty spaces have been replaced with interpuncts, or middle dots, for readability. If you extrapolate the pattern, you can see that the spaces at the beginning and end of a row follow a pattern.</p>\n<p>Update your blank space strings to be repeated <code>rowCount - rowNumber</code> times.</p>\n<p>Open up the console to see the result.</p>\n</section>",
  "translationPending": false,
  "block": "learn-introductory-javascript-by-building-a-pyramid-generator",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 65,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}