{
  "id": "6626b8dcf5057f896f948440",
  "title": "Step 4",
  "challengeType": 1,
  "dashedName": "step-4",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        30,
        35
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\nfunction studentMsg(totalScores, studentScore) {\n\n}\nconsole.log(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37));\n",
      "error": null,
      "seed": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\nfunction studentMsg(totalScores, studentScore) {\n\n}\nconsole.log(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37));\n"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\nfunction studentMsg(totalScores, studentScore) {\n  let average = getAverage(totalScores);\n  let grade = getGrade(studentScore);\n\n  return `Class average: ${average}. Your grade: ${grade}. You ${\n    hasPassingGrade(studentScore) ? \"passed\" : \"failed\"\n  } the course.`;\n}\n",
        "error": null,
        "seed": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\n\nfunction getGrade(score) {\n  if (score === 100) {\n    return \"A++\";\n  } else if (score >= 90) {\n    return \"A\";\n  } else if (score >= 80) {\n    return \"B\";\n  } else if (score >= 70) {\n    return \"C\";\n  } else if (score >= 60) {\n    return \"D\";\n  } else {\n    return \"F\";\n  }\n}\n\nfunction hasPassingGrade(score) {\n  return getGrade(score) !== \"F\";\n}\n\nfunction studentMsg(totalScores, studentScore) {\n  let average = getAverage(totalScores);\n  let grade = getGrade(studentScore);\n\n  return `Class average: ${average}. Your grade: ${grade}. You ${\n    hasPassingGrade(studentScore) ? \"passed\" : \"failed\"\n  } the course.`;\n}\n"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your function call of <code>studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37)</code> should return the following message: <code>\"Class average: 71.7. Your grade: F. You failed the course.\"</code>.</p>",
      "testString": "assert.strictEqual(studentMsg([92, 88, 12, 77, 57, 100, 67, 38, 97, 89], 37), \"Class average: 71.7. Your grade: F. You failed the course.\");"
    },
    {
      "text": "<p>Your function call of <code>studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100)</code> should return the following message: <code>\"Class average: 50.8. Your grade: A++. You passed the course.\"</code>.</p>",
      "testString": "assert.strictEqual(studentMsg([56, 23, 89, 42, 75, 11, 68, 34, 91, 19], 100), \"Class average: 50.8. Your grade: A++. You passed the course.\");"
    },
    {
      "text": "<p>Your <code>studentMsg</code> function should return the correct message based on the student's score and the class average.</p>",
      "testString": "assert.strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 92), \"Class average: 70.25. Your grade: A. You passed the course.\");\nassert.strictEqual(studentMsg([33, 44, 55, 66, 77, 88, 99, 100], 57), \"Class average: 70.25. Your grade: F. You failed the course.\");"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now that the teacher has all of the information they need, they want to be able to message the student with the results.</p>\n<p>Complete the <code>studentMsg</code> function with <code>totalScores</code> and <code>studentScore</code> for parameters. The function should return a string representing a message to the student.</p>\n<p>If the student passed the course, the string should follow this format:</p>\n<pre><code class=\"language-js\">Class average: average-goes-here. Your grade: grade-goes-here. You passed the course.\n</code></pre>\n<p>If the student failed the course, the string should follow this format:</p>\n<pre><code class=\"language-js\">Class average: average-goes-here. Your grade: grade-goes-here. You failed the course.\n</code></pre>\n<p>Replace <code>average-goes-here</code> with the average of the total scores.\nReplace <code>grade-goes-here</code> with the student's grade.</p>\n<p><strong>Tips</strong></p>\n<ul>\n<li>Use the <code>getAverage</code> function to get the class average.</li>\n<li>Use the <code>getGrade</code> function to get the student's grade.</li>\n<li>Use string concatenation (<code>+</code>) to build the message.</li>\n<li>Be careful with the punctuation and spaces in the message.</li>\n</ul>\n</section>",
  "translationPending": false,
  "block": "review-js-fundamentals-by-building-a-gradebook-app",
  "hasEditableBoundaries": true,
  "order": 1,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 3,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}