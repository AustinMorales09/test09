{
  "id": "6626a060c4006f793e10cb33",
  "title": "Step 2",
  "challengeType": 1,
  "dashedName": "step-2",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        9,
        17
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\nfunction getGrade(score) {\n\n}\n\nconsole.log(getGrade(96));\nconsole.log(getGrade(82));\nconsole.log(getGrade(56));",
      "error": null,
      "seed": "function getAverage(scores) {\n  let sum = 0;\n\n  for (const score of scores) {\n    sum += score;\n  }\n\n  return sum / scores.length;\n}\nfunction getGrade(score) {\n\n}\n\nconsole.log(getGrade(96));\nconsole.log(getGrade(82));\nconsole.log(getGrade(56));"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"A++\"</code> if the score is <code>100</code>.</p>",
      "testString": "assert.strictEqual(getGrade(100), \"A++\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"A\"</code> if the score is <code>94</code>.</p>",
      "testString": "assert.strictEqual(getGrade(94), \"A\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"B\"</code> if the score is between <code>80</code> and <code>89</code>.</p>",
      "testString": "assert.strictEqual(getGrade(80), \"B\");\nassert.strictEqual(getGrade(83), \"B\");\nassert.strictEqual(getGrade(88), \"B\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"C\"</code> if the score is <code>78</code>.</p>",
      "testString": "assert.strictEqual(getGrade(75), \"C\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"D\"</code> if the score is between <code>60</code> and <code>69</code>.</p>",
      "testString": "assert.strictEqual(getGrade(60), \"D\");\nassert.strictEqual(getGrade(63), \"D\");\nassert.strictEqual(getGrade(68), \"D\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"F\"</code> if the score is <code>57</code>.</p>",
      "testString": "assert.strictEqual(getGrade(57), \"F\");"
    },
    {
      "text": "<p>Your <code>getGrade</code> function should return <code>\"F\"</code> if the score is between <code>0</code> and <code>59</code>.</p>",
      "testString": "assert.strictEqual(getGrade(0), \"F\");\nassert.strictEqual(getGrade(30), \"F\");\nassert.strictEqual(getGrade(43), \"F\");"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now the teacher needs your help converting the student score to a letter grade.</p>\n<p>Complete the <code>getGrade</code> function that takes a number <code>score</code> as a parameter. Your function should return a string representing a letter grade based on the score.</p>\n<p>Here are the scores and their corresponding letter grades:</p>\n<table>\n<thead>\n<tr>\n<th>Score Range</th>\n<th>Grade</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>100</code></td>\n<td><code>\"A++\"</code></td>\n</tr>\n<tr>\n<td><code>90 - 99</code></td>\n<td><code>\"A\"</code></td>\n</tr>\n<tr>\n<td><code>80 - 89</code></td>\n<td><code>\"B\"</code></td>\n</tr>\n<tr>\n<td><code>70 - 79</code></td>\n<td><code>\"C\"</code></td>\n</tr>\n<tr>\n<td><code>60 - 69</code></td>\n<td><code>\"D\"</code></td>\n</tr>\n<tr>\n<td><code>0 - 59</code></td>\n<td><code>\"F\"</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>Tips</strong></p>\n<ul>\n<li>Remember that you learned about conditional statements(<code>if</code>, <code>else if</code>, and <code>else</code>).</li>\n<li>Remember that you learned about comparison operators (<code>></code>, <code>&#x3C;</code>, <code>>=</code>, <code>&#x3C;=</code>, <code>===</code>).</li>\n</ul>\n</section>",
  "translationPending": false,
  "block": "review-js-fundamentals-by-building-a-gradebook-app",
  "hasEditableBoundaries": true,
  "order": 1,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 1,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}