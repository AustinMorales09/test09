{
  "id": "641da895fb7ec648a5bdf19c",
  "title": "Step 20",
  "challengeType": 0,
  "dashedName": "step-20",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp News Author Page</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <h1 class=\"title\">freeCodeCamp News Author Page</h1>\n\n    <main>\n      <div id=\"author-container\"></div>\n      <button class=\"btn\" id=\"load-more-btn\">Load More Authors</button>\n    </main>\n\n    <script src=\"./script.js\"></script>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp News Author Page</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <h1 class=\"title\">freeCodeCamp News Author Page</h1>\n\n    <main>\n      <div id=\"author-container\"></div>\n      <button class=\"btn\" id=\"load-more-btn\">Load More Authors</button>\n    </main>\n\n    <script src=\"./script.js\"></script>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #1b1b32;\n  --light-grey: #f5f6f7;\n  --dark-purple: #5a01a7;\n  --golden-yellow: #feac32;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n  text-align: center;\n}\n\n.title {\n  color: var(--light-grey);\n  margin: 20px 0;\n}\n\n#author-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.user-card {\n  border-radius: 15px;\n  width: 300px;\n  height: 350px;\n  background-color: var(--light-grey);\n  margin: 20px;\n}\n\n.user-img {\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n}\n\n.purple-divider {\n  background-color: var(--dark-purple);\n  width: 100%;\n  height: 15px;\n}\n\n.author-name {\n  margin: 10px;\n}\n\n.bio {\n  margin: 20px;\n}\n\n.error-msg {\n  color: var(--light-grey);\n}\n\n.btn {\n  cursor: pointer;\n  width: 200px;\n  margin: 10px;\n  color: var(--main-bg-color);\n  font-size: 14px;\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}",
      "error": null,
      "seed": "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --main-bg-color: #1b1b32;\n  --light-grey: #f5f6f7;\n  --dark-purple: #5a01a7;\n  --golden-yellow: #feac32;\n}\n\nbody {\n  background-color: var(--main-bg-color);\n  text-align: center;\n}\n\n.title {\n  color: var(--light-grey);\n  margin: 20px 0;\n}\n\n#author-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.user-card {\n  border-radius: 15px;\n  width: 300px;\n  height: 350px;\n  background-color: var(--light-grey);\n  margin: 20px;\n}\n\n.user-img {\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n}\n\n.purple-divider {\n  background-color: var(--dark-purple);\n  width: 100%;\n  height: 15px;\n}\n\n.author-name {\n  margin: 10px;\n}\n\n.bio {\n  margin: 20px;\n}\n\n.error-msg {\n  color: var(--light-grey);\n}\n\n.btn {\n  cursor: pointer;\n  width: 200px;\n  margin: 10px;\n  color: var(--main-bg-color);\n  font-size: 14px;\n  background-color: var(--golden-yellow);\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border-color: var(--golden-yellow);\n  border-width: 3px;\n}"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        17,
        19
      ],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "const authorContainer = document.getElementById('author-container');\nconst loadMoreBtn = document.getElementById('load-more-btn');\n\nlet startingIndex = 0;\nlet endingIndex = 8;\nlet authorDataArr = [];\n\nfetch('https://cdn.freecodecamp.org/curriculum/news-author-page/authors.json')\n  .then((res) => res.json())\n  .then((data) => {\n    authorDataArr = data;\n    displayAuthors(authorDataArr.slice(startingIndex, endingIndex));  \n  })\n  .catch((err) => {\n    console.error(`There was an error: ${err}`);\n  });\n\n\n\nconst displayAuthors = (authors) => {\n  authors.forEach(({ author, image, url, bio }, index) => {\n    authorContainer.innerHTML += `\n    <div id=\"${index}\" class=\"user-card\">\n      <h2 class=\"author-name\">${author}</h2>\n      <img class=\"user-img\" src=\"${image}\" alt=\"${author} avatar\" />\n      <p class=\"bio\">${bio}</p>\n      <a class=\"author-link\" href=\"${url}\" target=\"_blank\">${author}'s author page</a>\n    </div>\n  `;\n  });\n};",
      "error": null,
      "seed": "const authorContainer = document.getElementById('author-container');\nconst loadMoreBtn = document.getElementById('load-more-btn');\n\nlet startingIndex = 0;\nlet endingIndex = 8;\nlet authorDataArr = [];\n\nfetch('https://cdn.freecodecamp.org/curriculum/news-author-page/authors.json')\n  .then((res) => res.json())\n  .then((data) => {\n    authorDataArr = data;\n    displayAuthors(authorDataArr.slice(startingIndex, endingIndex));  \n  })\n  .catch((err) => {\n    console.error(`There was an error: ${err}`);\n  });\n\n\n\nconst displayAuthors = (authors) => {\n  authors.forEach(({ author, image, url, bio }, index) => {\n    authorContainer.innerHTML += `\n    <div id=\"${index}\" class=\"user-card\">\n      <h2 class=\"author-name\">${author}</h2>\n      <img class=\"user-img\" src=\"${image}\" alt=\"${author} avatar\" />\n      <p class=\"bio\">${bio}</p>\n      <a class=\"author-link\" href=\"${url}\" target=\"_blank\">${author}'s author page</a>\n    </div>\n  `;\n  });\n};"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use <code>const</code> to create a <code>fetchMoreAuthors</code> function.</p>",
      "testString": "assert.match(code, /const\\s+fetchMoreAuthors\\s*=\\s*/)"
    },
    {
      "text": "<p><code>fetchMoreAuthors</code> should be a function.</p>",
      "testString": "assert.isFunction(fetchMoreAuthors)"
    },
    {
      "text": "<p>Your <code>fetchMoreAuthors</code> function should not take any parameter.</p>",
      "testString": "assert.match(code, /const\\s+fetchMoreAuthors\\s*=\\s*\\(\\s*\\)\\s*/)"
    },
    {
      "text": "<p>Your <code>fetchMoreAuthors</code> function should use arrow syntax.</p>",
      "testString": "assert.match(code, /const\\s+fetchMoreAuthors\\s*=\\s*\\(\\s*\\)\\s*=>\\s*/)"
    },
    {
      "text": "<p>Your <code>fetchMoreAuthors</code> function should be empty.</p>",
      "testString": "assert.match(code, /const\\s+fetchMoreAuthors\\s*=\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*\\}/)"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now you have everything you want to include in the UI. The next step is to make the <code>Load More Authors</code> button fetch more authors whenever it's clicked. You can do this by adding a <code>click</code> event to the button and carefully incrementing the <code>startingIndex</code> and <code>endingIndex</code> variables.</p>\n<p>Create a <code>fetchMoreAuthors</code> function with the arrow function syntax. Don't put anything in it yet. Make sure you use curly braces because you'll have more than one expression inside the function.</p>\n</section>",
  "translationPending": false,
  "block": "learn-fetch-and-promises-by-building-an-fcc-authors-page",
  "hasEditableBoundaries": true,
  "order": 22,
  "superOrder": 1,
  "certification": "javascript-algorithms-and-data-structures-v8",
  "superBlock": "javascript-algorithms-and-data-structures-v8",
  "challengeOrder": 19,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}