{
  "id": "5900f5091000cf542c51001b",
  "title": "Problem 408: Admissible paths through a grid",
  "challengeType": 1,
  "forumTopicId": 302076,
  "dashedName": "problem-408-admissible-paths-through-a-grid",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function admissiblePaths() {\n\n  return true;\n}\n\nadmissiblePaths();",
      "error": null,
      "seed": "function admissiblePaths() {\n\n  return true;\n}\n\nadmissiblePaths();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>admissiblePaths()</code> should return <code>299742733</code>.</p>",
      "testString": "assert.strictEqual(admissiblePaths(), 299742733);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Let's call a lattice point ($x$, $y$) inadmissible if $x$, $y$ and $x + y$ are all positive perfect squares.</p>\n<p>For example, (9, 16) is inadmissible, while (0, 4), (3, 1) and (9, 4) are not.</p>\n<p>Consider a path from point ($x_1$, $y_1$) to point ($x_2$, $y_2$) using only unit steps north or east. Let's call such a path admissible if none of its intermediate points are inadmissible.</p>\n<p>Let $P(n)$ be the number of admissible paths from (0, 0) to ($n$, $n$). It can be verified that $P(5) = 252$, $P(16) = 596\\,994\\,440$ and $P(1\\,000)\\bmod 1\\,000\\,000\\,007 = 341\\,920\\,854$.</p>\n<p>Find $P(10\\,000\\,000)\\bmod 1\\,000\\,000\\,007$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-401-to-480",
  "hasEditableBoundaries": false,
  "order": 4,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 7,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}