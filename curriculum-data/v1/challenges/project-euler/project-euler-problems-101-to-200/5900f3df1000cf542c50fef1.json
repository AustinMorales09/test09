{
  "id": "5900f3df1000cf542c50fef1",
  "title": "Problem 115: Counting block combinations II",
  "challengeType": 1,
  "forumTopicId": 301741,
  "dashedName": "problem-115-counting-block-combinations-ii",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function countingBlockTwo() {\n\n  return true;\n}\n\ncountingBlockTwo();",
      "error": null,
      "seed": "function countingBlockTwo() {\n\n  return true;\n}\n\ncountingBlockTwo();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>countingBlockTwo()</code> should return <code>168</code>.</p>",
      "testString": "assert.strictEqual(countingBlockTwo(), 168);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A row measuring <code>n</code> units in length has red blocks with a minimum length of <code>m</code> units placed on it, such that any two red blocks (which are allowed to be different lengths) are separated by at least one black square.</p>\n<p>Let the fill-count function, $F(m, n)$, represent the number of ways that a row can be filled.</p>\n<p>For example, $F(3, 29) = 673135$ and $F(3, 30) = 1089155$.</p>\n<p>That is, for m = 3, it can be seen that n = 30 is the smallest value for which the fill-count function first exceeds one million.</p>\n<p>In the same way, for m = 10, it can be verified that $F(10, 56) = 880711$ and $F(10, 57) = 1148904$, so n = 57 is the least value for which the fill-count function first exceeds one million.</p>\n<p>For m = 50, find the least value of <code>n</code> for which the fill-count function first exceeds one million.</p>\n<p><strong>Note:</strong> This is a more difficult version of Problem 114.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-101-to-200",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 14,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}