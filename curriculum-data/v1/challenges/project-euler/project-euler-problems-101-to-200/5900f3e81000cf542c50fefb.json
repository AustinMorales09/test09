{
  "id": "5900f3e81000cf542c50fefb",
  "title": "Problem 124: Ordered radicals",
  "challengeType": 1,
  "forumTopicId": 301751,
  "dashedName": "problem-124-ordered-radicals",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function orderedRadicals() {\n\n  return true;\n}\n\norderedRadicals();",
      "error": null,
      "seed": "function orderedRadicals() {\n\n  return true;\n}\n\norderedRadicals();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>orderedRadicals()</code> should return <code>21417</code>.</p>",
      "testString": "assert.strictEqual(orderedRadicals(), 21417);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The radical of $n$, $rad(n)$, is the product of the distinct prime factors of $n$. For example, $504 = 2^3 × 3^2 × 7$, so $rad(504) = 2 × 3 × 7 = 42$.</p>\n<p>If we calculate $rad(n)$ for $1 ≤ n ≤ 10$, then sort them on $rad(n)$, and sorting on $n$ if the radical values are equal, we get:</p>\n<div style=\"text-align: center;\">\n  <table cellpadding=\"2\" cellspacing=\"0\" border=\"0\" align=\"center\">\n    <tbody>\n      <tr>\n        <td colspan=\"2\">$Unsorted$</td>\n        <td></td>\n        <td colspan=\"3\">$Sorted$</td>\n      </tr>\n      <tr>\n        <td>$n$</td>\n        <td>$rad(n)$</td>\n        <td></td>\n        <td>$n$</td>\n        <td>$rad(n)$</td>\n        <td>$k$</td>\n      </tr>\n      <tr>\n        <td>1</td>\n        <td>1</td>\n        <td></td>\n        <td>1</td>\n        <td>1</td>\n        <td>1</td>\n      </tr>\n      <tr>\n        <td>2</td>\n        <td>2</td>\n        <td></td>\n        <td>2</td>\n        <td>2</td>\n        <td>2</td>\n      </tr>\n      <tr>\n        <td>3</td>\n        <td>3</td>\n        <td></td>\n        <td>4</td>\n        <td>2</td>\n        <td>3</td>\n      </tr>\n      <tr>\n        <td>4</td>\n        <td>2</td>\n        <td></td>\n        <td>8</td>\n        <td>2</td>\n        <td>4</td>\n      </tr>\n      <tr>\n        <td>5</td>\n        <td>5</td>\n        <td></td>\n        <td>3</td>\n        <td>3</td>\n        <td>5</td>\n      </tr>\n      <tr>\n        <td>6</td>\n        <td>6</td>\n        <td></td>\n        <td>9</td>\n        <td>3</td>\n        <td>6</td>\n      </tr>\n      <tr>\n        <td>7</td>\n        <td>7</td>\n        <td></td>\n        <td>5</td>\n        <td>5</td>\n        <td>7</td>\n      </tr>\n      <tr>\n        <td>8</td>\n        <td>2</td>\n        <td></td>\n        <td>6</td>\n        <td>6</td>\n        <td>8</td>\n      </tr>\n      <tr>\n        <td>9</td>\n        <td>3</td>\n        <td></td>\n        <td>7</td>\n        <td>7</td>\n        <td>9</td>\n      </tr>\n      <tr>\n        <td>10</td>\n        <td>10</td>\n        <td></td>\n        <td>10</td>\n        <td>10</td>\n        <td>10</td>\n      </tr>\n    </tbody>\n  </table>\n</div><br>\n<p>Let $E(k)$ be the $k$th element in the sorted $n$ column; for example, $E(4) = 8$ and $E(6) = 9$. If $rad(n)$ is sorted for $1 ≤ n ≤ 100000$, find $E(10000)$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-101-to-200",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 23,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}