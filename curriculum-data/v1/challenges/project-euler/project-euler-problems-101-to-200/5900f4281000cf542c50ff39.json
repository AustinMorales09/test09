{
  "id": "5900f4281000cf542c50ff39",
  "title": "Problem 186: Connectedness of a network",
  "challengeType": 1,
  "forumTopicId": 301822,
  "dashedName": "problem-186-connectedness-of-a-network",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function connectednessOfANetwork() {\n\n  return true;\n}\n\nconnectednessOfANetwork();",
      "error": null,
      "seed": "function connectednessOfANetwork() {\n\n  return true;\n}\n\nconnectednessOfANetwork();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>connectednessOfANetwork()</code> should return <code>2325629</code>.</p>",
      "testString": "assert.strictEqual(connectednessOfANetwork(), 2325629);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Here are the records from a busy telephone system with one million users:</p>\n<table>\n<thead>\n<tr>\n<th>RecNr</th>\n<th>Caller</th>\n<th>Called</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>200007</td>\n<td>100053</td>\n</tr>\n<tr>\n<td>2</td>\n<td>600183</td>\n<td>500439</td>\n</tr>\n<tr>\n<td>3</td>\n<td>600863</td>\n<td>701497</td>\n</tr>\n<tr>\n<td>...</td>\n<td>...</td>\n<td>...</td>\n</tr>\n</tbody>\n</table>\n<p>The telephone number of the caller and the called number in record $n$ are $Caller(n) = S_{2n - 1}$ and $Called(n) = S_{2n}$ where ${S}_{1,2,3,\\ldots}$ come from the \"Lagged Fibonacci Generator\":</p>\n<p>For $1 ≤ k ≤ 55$, $S_k = [100003 - 200003k + 300007{k}^3]\\;(\\text{modulo}\\;1000000)$</p>\n<p>For $56 ≤ k$, $S_k = [S_{k - 24} + S_{k - 55}]\\;(\\text{modulo}\\;1000000)$</p>\n<p>If $Caller(n) = Called(n)$ then the user is assumed to have misdialled and the call fails; otherwise the call is successful.</p>\n<p>From the start of the records, we say that any pair of users $X$ and $Y$ are friends if $X$ calls $Y$ or vice-versa. Similarly, $X$ is a friend of a friend of $Z$ if $X$ is a friend of $Y$ and $Y$ is a friend of $Z$; and so on for longer chains.</p>\n<p>The Prime Minister's phone number is 524287. After how many successful calls, not counting misdials, will 99% of the users (including the PM) be a friend, or a friend of a friend etc., of the Prime Minister?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-101-to-200",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 85,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}