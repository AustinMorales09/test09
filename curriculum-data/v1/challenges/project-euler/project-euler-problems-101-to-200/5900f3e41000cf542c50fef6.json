{
  "id": "5900f3e41000cf542c50fef6",
  "title": "Problem 119: Digit power sum",
  "challengeType": 1,
  "forumTopicId": 301745,
  "dashedName": "problem-119-digit-power-sum",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function digitPowerSum() {\n\n  return true;\n}\n\ndigitPowerSum();",
      "error": null,
      "seed": "function digitPowerSum() {\n\n  return true;\n}\n\ndigitPowerSum();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>digitPowerSum()</code> should return <code>248155780267521</code>.</p>",
      "testString": "assert.strictEqual(digitPowerSum(), 248155780267521);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The number 512 is interesting because it is equal to the sum of its digits raised to some power: $5 + 1 + 2 = 8$, and $8^3 = 512$. Another example of a number with this property is $614656 = 28^4$.</p>\n<p>We shall define $a_n$ to be the $n-th$ term of this sequence and insist that a number must contain at least two digits to have a sum.</p>\n<p>You are given that $a_2 = 512$ and $a_{10} = 614656$.</p>\n<p>Find $a_{30}$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-101-to-200",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 18,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}