{
  "id": "5900f3d61000cf542c50fee7",
  "title": "Problem 103: Special subset sums: optimum",
  "challengeType": 1,
  "forumTopicId": 301727,
  "dashedName": "problem-103-special-subset-sums-optimum",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function optimumSpecialSumSet() {\n\n  return true;\n}\n\noptimumSpecialSumSet();",
      "error": null,
      "seed": "function optimumSpecialSumSet() {\n\n  return true;\n}\n\noptimumSpecialSumSet();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>optimumSpecialSumSet()</code> should return the string <code>20313839404245</code>.</p>",
      "testString": "assert.strictEqual(optimumSpecialSumSet(), '20313839404245');"
    }
  ],
  "description": "<section id=\"description\">\n<p>Let $S(A)$ represent the sum of elements in set A of size n. We shall call it a special sum set if for any two non-empty disjoint subsets, B and C, the following properties are true:</p>\n<ol>\n<li>$S(B) â‰  S(C)$; that is, sums of subsets cannot be equal.</li>\n<li>If B contains more elements than C then $S(B) > S(C)$.</li>\n</ol>\n<p>If $S(A)$ is minimised for a given n, we shall call it an optimum special sum set. The first five optimum special sum sets are given below.</p>\n<p>$$\\begin{align}\n&#x26; n = 1: \\{1\\} \\\\\n&#x26; n = 2: \\{1, 2\\} \\\\\n&#x26; n = 3: \\{2, 3, 4\\} \\\\\n&#x26; n = 4: \\{3, 5, 6, 7\\} \\\\\n&#x26; n = 5: \\{6, 9, 11, 12, 13\\} \\\\\n\\end{align}$$</p>\n<p>It seems that for a given optimum set, $A = \\{a_1, a_2, \\ldots, a_n\\}$, the next optimum set is of the form $B = \\{b, a_1 + b, a_2 + b, \\ldots, a_n + b\\}$, where b is the \"middle\" element on the previous row.</p>\n<p>By applying this \"rule\" we would expect the optimum set for $n = 6$ to be $A = \\{11, 17, 20, 22, 23, 24\\}$, with $S(A) = 117$. However, this is not the optimum set, as we have merely applied an algorithm to provide a near optimum set. The optimum set for $n = 6$ is $A = \\{11, 18, 19, 20, 22, 25\\}$, with $S(A) = 115$ and corresponding set string: <code>111819202225</code>.</p>\n<p>Given that A is an optimum special sum set for $n = 7$, find its set string.</p>\n<p><strong>Note:</strong> This problem is related to Problem 105 and Problem 106.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-101-to-200",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 2,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}