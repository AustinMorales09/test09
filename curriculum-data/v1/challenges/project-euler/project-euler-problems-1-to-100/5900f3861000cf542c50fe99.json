{
  "id": "5900f3861000cf542c50fe99",
  "title": "Problem 26: Reciprocal cycles",
  "challengeType": 1,
  "forumTopicId": 301908,
  "dashedName": "problem-26-reciprocal-cycles",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function reciprocalCycles(n) {\n\n  return n;\n}\n\nreciprocalCycles(1000);",
      "error": null,
      "seed": "function reciprocalCycles(n) {\n\n  return n;\n}\n\nreciprocalCycles(1000);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>reciprocalCycles(700)</code> should return a number.</p>",
      "testString": "assert(typeof reciprocalCycles(700) === 'number');"
    },
    {
      "text": "<p><code>reciprocalCycles(700)</code> should return 659.</p>",
      "testString": "assert(reciprocalCycles(700) == 659);"
    },
    {
      "text": "<p><code>reciprocalCycles(800)</code> should return 743.</p>",
      "testString": "assert(reciprocalCycles(800) == 743);"
    },
    {
      "text": "<p><code>reciprocalCycles(900)</code> should return 887.</p>",
      "testString": "assert(reciprocalCycles(900) == 887);"
    },
    {
      "text": "<p><code>reciprocalCycles(1000)</code> should return 983.</p>",
      "testString": "assert(reciprocalCycles(1000) == 983);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:</p>\n<div style='padding-left: 4em; display: inline-grid; grid-template-rows: auto; row-gap: 7px;'><div><sup>1</sup>/<sub>2</sub> = 0.5</div><div><sup>1</sup>/<sub>3</sub> = 0.(3)</div><div><sup>1</sup>/<sub>4</sub> = 0.25</div><div><sup>1</sup>/<sub>5</sub> = 0.2</div><div><sup>1</sup>/<sub>6</sub> = 0.1(6)</div><div><sup>1</sup>/<sub>7</sub> = 0.(142857)</div><div><sup>1</sup>/<sub>8</sub> = 0.125</div><div><sup>1</sup>/<sub>9</sub> = 0.(1)</div><div><sup>1</sup>/<sub>10</sub> = 0.1</div></div>\n<p>Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that <sup>1</sup>/<sub>7</sub> has a 6-digit recurring cycle.</p>\n<p>Find the value of <code>d</code> &#x3C; <code>n</code> for which <sup>1</sup>/<sub>d</sub> contains the longest recurring cycle in its decimal fraction part.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 25,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}