{
  "id": "5900f3851000cf542c50fe98",
  "title": "Problem 25: 1000-digit Fibonacci number",
  "challengeType": 1,
  "forumTopicId": 301897,
  "dashedName": "problem-25-1000-digit-fibonacci-number",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function digitFibonacci(n) {\n\n  return n;\n}\n\ndigitFibonacci(20);",
      "error": null,
      "seed": "function digitFibonacci(n) {\n\n  return n;\n}\n\ndigitFibonacci(20);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const digitFibonacci = (n) => {\n  const digits = (num) => {\n    return num.toString().length;\n  };\n  let f1 = 1;\n  let f2 = 1;\n  let index = 3;\n  while (true) {\n    let fn = f1 + f2;\n    if (digits(fn) === n) return index;\n    [f1, f2] = [f2, fn];\n    index++;\n  }\n};",
        "error": null,
        "seed": "const digitFibonacci = (n) => {\n  const digits = (num) => {\n    return num.toString().length;\n  };\n  let f1 = 1;\n  let f2 = 1;\n  let index = 3;\n  while (true) {\n    let fn = f1 + f2;\n    if (digits(fn) === n) return index;\n    [f1, f2] = [f2, fn];\n    index++;\n  }\n};"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>digitFibonacci(5)</code> should return a number.</p>",
      "testString": "assert(typeof digitFibonacci(5) === 'number');"
    },
    {
      "text": "<p><code>digitFibonacci(5)</code> should return 21.</p>",
      "testString": "assert.strictEqual(digitFibonacci(5), 21);"
    },
    {
      "text": "<p><code>digitFibonacci(10)</code> should return 45.</p>",
      "testString": "assert.strictEqual(digitFibonacci(10), 45);"
    },
    {
      "text": "<p><code>digitFibonacci(15)</code> should return 69.</p>",
      "testString": "assert.strictEqual(digitFibonacci(15), 69);"
    },
    {
      "text": "<p><code>digitFibonacci(20)</code> should return 93.</p>",
      "testString": "assert.strictEqual(digitFibonacci(20), 93);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The Fibonacci sequence is defined by the recurrence relation:</p>\n<div style='padding-left: 4em;'>F<sub>n</sub> = F<sub>n−1</sub> + F<sub>n−2</sub>, where F<sub>1</sub> = 1 and F<sub>2</sub> = 1.</div>\n<p>Hence the first 12 terms will be:</p>\n<div style='padding-left: 4em; display: inline-grid; grid-template-rows: auto; row-gap: 7px;'><div>F<sub>1</sub> = 1</div><div>F<sub>2</sub> = 1</div><div>F<sub>3</sub> = 2</div><div>F<sub>4</sub> = 3</div><div>F<sub>5</sub> = 5</div><div>F<sub>6</sub> = 8</div><div>F<sub>7</sub> = 13</div><div>F<sub>8</sub> = 21</div><div>F<sub>9</sub> = 34</div><div>F<sub>10</sub> = 55</div><div>F<sub>11</sub> = 89</div><div>F<sub>12</sub> = 144</div></div>\n<p>The 12th term, F<sub>12</sub>, is the first term to contain three digits.</p>\n<p>What is the index of the first term in the Fibonacci sequence to contain <code>n</code> digits?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 24,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}