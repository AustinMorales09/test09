{
  "id": "5900f3a81000cf542c50febb",
  "title": "Problem 60: Prime pair sets",
  "challengeType": 1,
  "forumTopicId": 302172,
  "dashedName": "problem-60-prime-pair-sets",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function primePairSets() {\n\n  return true;\n}\n\nprimePairSets();",
      "error": null,
      "seed": "function primePairSets() {\n\n  return true;\n}\n\nprimePairSets();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>primePairSets()</code> should return a number.</p>",
      "testString": "assert(typeof primePairSets() === 'number');"
    },
    {
      "text": "<p><code>primePairSets()</code> should return 26033.</p>",
      "testString": "assert.strictEqual(primePairSets(), 26033);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The primes 3, 7, 109, and 673, are quite remarkable. By taking any two primes and concatenating them in any order the result will always be prime. For example, taking 7 and 109, both 7109 and 1097 are prime. The sum of these four primes, 792, represents the lowest sum for a set of four primes with this property.</p>\n<p>Find the lowest sum for a set of five primes for which any two primes concatenate to produce another prime.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 59,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}