{
  "id": "5900f3711000cf542c50fe84",
  "title": "Problem 5: Smallest multiple",
  "challengeType": 1,
  "forumTopicId": 302160,
  "dashedName": "problem-5-smallest-multiple",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function smallestMult(n) {\n\n  return true;\n}\n\nsmallestMult(20);",
      "error": null,
      "seed": "function smallestMult(n) {\n\n  return true;\n}\n\nsmallestMult(20);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function smallestMult(n){\n  function gcd(a, b) {\n    return b === 0 ? a : gcd(b, a%b); // Euclidean algorithm\n  }\n\n  function lcm(a, b) {\n    return a * b / gcd(a, b);\n  }\n  var result = 1;\n  for(var i = 2; i <= n; i++) {\n    result = lcm(result, i);\n  }\n  return result;\n}",
        "error": null,
        "seed": "function smallestMult(n){\n  function gcd(a, b) {\n    return b === 0 ? a : gcd(b, a%b); // Euclidean algorithm\n  }\n\n  function lcm(a, b) {\n    return a * b / gcd(a, b);\n  }\n  var result = 1;\n  for(var i = 2; i <= n; i++) {\n    result = lcm(result, i);\n  }\n  return result;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>smallestMult(5)</code> should return a number.</p>",
      "testString": "assert(typeof smallestMult(5) === 'number');"
    },
    {
      "text": "<p><code>smallestMult(5)</code> should return 60.</p>",
      "testString": "assert.strictEqual(smallestMult(5), 60);"
    },
    {
      "text": "<p><code>smallestMult(7)</code> should return 420.</p>",
      "testString": "assert.strictEqual(smallestMult(7), 420);"
    },
    {
      "text": "<p><code>smallestMult(10)</code> should return 2520.</p>",
      "testString": "assert.strictEqual(smallestMult(10), 2520);"
    },
    {
      "text": "<p><code>smallestMult(13)</code> should return 360360.</p>",
      "testString": "assert.strictEqual(smallestMult(13), 360360);"
    },
    {
      "text": "<p><code>smallestMult(20)</code> should return 232792560.</p>",
      "testString": "assert.strictEqual(smallestMult(20), 232792560);"
    }
  ],
  "description": "<section id=\"description\">\n<p>2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.</p>\n<p>What is the smallest positive number that is evenly divisible by all of the numbers from 1 to <code>n</code>?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 4,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}