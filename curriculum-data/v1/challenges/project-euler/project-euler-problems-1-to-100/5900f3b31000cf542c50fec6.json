{
  "id": "5900f3b31000cf542c50fec6",
  "title": "Problem 71: Ordered fractions",
  "challengeType": 1,
  "forumTopicId": 302184,
  "dashedName": "problem-71-ordered-fractions",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function orderedFractions(limit) {\n\n  return true;\n}\n\norderedFractions(8);",
      "error": null,
      "seed": "function orderedFractions(limit) {\n\n  return true;\n}\n\norderedFractions(8);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function orderedFractions(limit) {\n  const fractions = [];\n  const fractionValues = {};\n  const highBoundary = 3 / 7;\n  let lowBoundary = 2 / 7;\n\n  for (let denominator = limit; denominator > 2; denominator--) {\n    let numerator = Math.floor((3 * denominator - 1) / 7);\n    let value = numerator / denominator;\n    if (value > highBoundary || value < lowBoundary) {\n      continue;\n    }\n    fractionValues[value] = [numerator, denominator];\n    fractions.push(value);\n    lowBoundary = value;\n  }\n\n  fractions.sort();\n  return fractionValues[fractions[fractions.length - 1]][0];\n}",
        "error": null,
        "seed": "function orderedFractions(limit) {\n  const fractions = [];\n  const fractionValues = {};\n  const highBoundary = 3 / 7;\n  let lowBoundary = 2 / 7;\n\n  for (let denominator = limit; denominator > 2; denominator--) {\n    let numerator = Math.floor((3 * denominator - 1) / 7);\n    let value = numerator / denominator;\n    if (value > highBoundary || value < lowBoundary) {\n      continue;\n    }\n    fractionValues[value] = [numerator, denominator];\n    fractions.push(value);\n    lowBoundary = value;\n  }\n\n  fractions.sort();\n  return fractionValues[fractions[fractions.length - 1]][0];\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>orderedFractions(8)</code> should return a number.</p>",
      "testString": "assert(typeof orderedFractions(8) === 'number');"
    },
    {
      "text": "<p><code>orderedFractions(8)</code> should return <code>2</code>.</p>",
      "testString": "assert.strictEqual(orderedFractions(8), 2);"
    },
    {
      "text": "<p><code>orderedFractions(10)</code> should return <code>2</code>.</p>",
      "testString": "assert.strictEqual(orderedFractions(10), 2);"
    },
    {
      "text": "<p><code>orderedFractions(9994)</code> should return <code>4283</code>.</p>",
      "testString": "assert.strictEqual(orderedFractions(9994), 4283);"
    },
    {
      "text": "<p><code>orderedFractions(500000)</code> should return <code>214283</code>.</p>",
      "testString": "assert.strictEqual(orderedFractions(500000), 214283);"
    },
    {
      "text": "<p><code>orderedFractions(1000000)</code> should return <code>428570</code>.</p>",
      "testString": "assert.strictEqual(orderedFractions(1000000), 428570);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Consider the fraction, $\\frac{n}{d}$, where <code>n</code> and <code>d</code> are positive integers. If <code>n</code> &#x3C; <code>d</code> and highest common factor, ${{HCF}(n, d)} = 1$, it is called a reduced proper fraction.</p>\n<p>If we list the set of reduced proper fractions for <code>d</code> ≤ 8 in ascending order of size, we get:</p>\n<p>$$\\frac{1}{8}, \\frac{1}{7}, \\frac{1}{6}, \\frac{1}{5}, \\frac{1}{4}, \\frac{2}{7}, \\frac{1}{3}, \\frac{3}{8}, \\frac{\\textbf2}{\\textbf5}, \\frac{3}{7}, \\frac{1}{2}, \\frac{4}{7}, \\frac{3}{5}, \\frac{5}{8}, \\frac{2}{3}, \\frac{5}{7}, \\frac{3}{4}, \\frac{4}{5}, \\frac{5}{6}, \\frac{6}{7}, \\frac{7}{8}$$</p>\n<p>It can be seen that $\\frac{2}{5}$ is the fraction immediately to the left of $\\frac{3}{7}$.</p>\n<p>By listing the set of reduced proper fractions for <code>d</code> ≤ <code>limit</code> in ascending order of size, find the numerator of the fraction immediately to the left of $\\frac{3}{7}$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 70,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}