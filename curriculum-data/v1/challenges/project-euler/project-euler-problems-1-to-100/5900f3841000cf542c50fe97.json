{
  "id": "5900f3841000cf542c50fe97",
  "title": "Problem 24: Lexicographic permutations",
  "challengeType": 1,
  "forumTopicId": 301885,
  "dashedName": "problem-24-lexicographic-permutations",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function lexicographicPermutations(n) {\n\n  return n;\n}\n\nlexicographicPermutations(999999);",
      "error": null,
      "seed": "function lexicographicPermutations(n) {\n\n  return n;\n}\n\nlexicographicPermutations(999999);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>lexicographicPermutations(699999)</code> should return a number.</p>",
      "testString": "assert(typeof lexicographicPermutations(699999) === 'number');"
    },
    {
      "text": "<p><code>lexicographicPermutations(699999)</code> should return 1938246570.</p>",
      "testString": "assert(lexicographicPermutations(699999) == 1938246570);"
    },
    {
      "text": "<p><code>lexicographicPermutations(899999)</code> should return 2536987410.</p>",
      "testString": "assert(lexicographicPermutations(899999) == 2536987410);"
    },
    {
      "text": "<p><code>lexicographicPermutations(900000)</code> should return 2537014689.</p>",
      "testString": "assert(lexicographicPermutations(900000) == 2537014689);"
    },
    {
      "text": "<p><code>lexicographicPermutations(999999)</code> should return 2783915460.</p>",
      "testString": "assert(lexicographicPermutations(999999) == 2783915460);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:</p>\n<div style='text-align: center;'>012   021   102   120   201   210</div>\n<p>What is the <code>n</code>th lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 23,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}