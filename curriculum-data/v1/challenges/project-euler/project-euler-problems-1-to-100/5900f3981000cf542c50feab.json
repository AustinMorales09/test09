{
  "id": "5900f3981000cf542c50feab",
  "title": "Problem 44: Pentagon numbers",
  "challengeType": 1,
  "forumTopicId": 302111,
  "dashedName": "problem-44-pentagon-numbers",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function pentagonNumbers() {\n\n  return true;\n}\n\npentagonNumbers();",
      "error": null,
      "seed": "function pentagonNumbers() {\n\n  return true;\n}\n\npentagonNumbers();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function pentagonNumbers() {\n  function isPentagonal(num) {\n  // Formula found by solving pentagonal number\n  // equation for n.\n  const n = (Math.sqrt((24 * num) + 1) + 1) / 6;\n  return n % 1 === 0;\n  }\n\n  function pentagonal(num) {\n    return (num * ((3 * num) - 1)) / 2;\n  }\n  let result;\n  let i = 1;\n  while (!result) {\n  i++;\n  const num1 = (i * ((3 * i) - 1)) / 2; // Pentagonal num formula\n  const minDiff = num1 - (((i - 1) * ((3 * (i - 1)) - 1)) / 2);\n  let j = i - 1;\n  while (j > 0 && !result) {\n  const num2 = (j * ((3 * j) - 1)) / 2;\n  if (isPentagonal(num1 - num2) && isPentagonal(num1 + num2)) {\n        result = num1 - num2;\n      }\n      j--;\n    }\n  }\n  return result;\n  }",
        "error": null,
        "seed": "function pentagonNumbers() {\n  function isPentagonal(num) {\n  // Formula found by solving pentagonal number\n  // equation for n.\n  const n = (Math.sqrt((24 * num) + 1) + 1) / 6;\n  return n % 1 === 0;\n  }\n\n  function pentagonal(num) {\n    return (num * ((3 * num) - 1)) / 2;\n  }\n  let result;\n  let i = 1;\n  while (!result) {\n  i++;\n  const num1 = (i * ((3 * i) - 1)) / 2; // Pentagonal num formula\n  const minDiff = num1 - (((i - 1) * ((3 * (i - 1)) - 1)) / 2);\n  let j = i - 1;\n  while (j > 0 && !result) {\n  const num2 = (j * ((3 * j) - 1)) / 2;\n  if (isPentagonal(num1 - num2) && isPentagonal(num1 + num2)) {\n        result = num1 - num2;\n      }\n      j--;\n    }\n  }\n  return result;\n  }"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>pentagonNumbers()</code> should return a number.</p>",
      "testString": "assert(typeof pentagonNumbers() === 'number');"
    },
    {
      "text": "<p><code>pentagonNumbers()</code> should return 5482660.</p>",
      "testString": "assert.strictEqual(pentagonNumbers(), 5482660);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Pentagonal numbers are generated by the formula, P<sub>n</sub>=<code>n</code>(3<code>n</code>−1)/2. The first ten pentagonal numbers are:</p>\n<p>1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...</p>\n<p>It can be seen that P<sub>4</sub> + P<sub>7</sub> = 22 + 70 = 92 = P<sub>8</sub>. However, their difference, 70 − 22 = 48, is not pentagonal.</p>\n<p>Find the pair of pentagonal numbers, P<sub>j</sub> and P<sub>k</sub>, for which their sum and difference are pentagonal and D = |P<sub>k</sub> − P<sub>j</sub>| is minimized; what is the value of D?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 43,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}