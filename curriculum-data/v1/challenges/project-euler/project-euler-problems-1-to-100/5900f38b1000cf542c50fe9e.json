{
  "id": "5900f38b1000cf542c50fe9e",
  "title": "Problem 31: Coin sums",
  "challengeType": 1,
  "forumTopicId": 301965,
  "dashedName": "problem-31-coin-sums",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function coinSums(n) {\n\n  return n;\n}\n\ncoinSums(200);",
      "error": null,
      "seed": "function coinSums(n) {\n\n  return n;\n}\n\ncoinSums(200);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "const coinSums = (n) => {\n  const getWays = (n, m=8, c=[1, 2, 5, 10, 20, 50, 100, 200]) => {\n    if (n === 0) return 1;\n    if (m === 0 || n < 0) return 0;\n    return getWays(n - c[m - 1], m, c) + getWays(n, m - 1, c);\n  };\n  return getWays(n);\n};",
        "error": null,
        "seed": "const coinSums = (n) => {\n  const getWays = (n, m=8, c=[1, 2, 5, 10, 20, 50, 100, 200]) => {\n    if (n === 0) return 1;\n    if (m === 0 || n < 0) return 0;\n    return getWays(n - c[m - 1], m, c) + getWays(n, m - 1, c);\n  };\n  return getWays(n);\n};"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>coinSums(50)</code> should return a number.</p>",
      "testString": "assert(typeof coinSums(50) === 'number');"
    },
    {
      "text": "<p><code>coinSums(50)</code> should return 451.</p>",
      "testString": "assert(coinSums(50) == 451);"
    },
    {
      "text": "<p><code>coinSums(100)</code> should return 4563.</p>",
      "testString": "assert(coinSums(100) == 4563);"
    },
    {
      "text": "<p><code>coinSums(150)</code> should return 21873.</p>",
      "testString": "assert(coinSums(150) == 21873);"
    },
    {
      "text": "<p><code>coinSums(200)</code> should return 73682.</p>",
      "testString": "assert(coinSums(200) == 73682);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In England the currency is made up of pound, £, and pence, p, and there are eight coins in general circulation:</p>\n<div style='margin-left: 4em;'>1p, 2p, 5p, 10p, 20p, 50p, £1 (100p) and £2 (200p).</div>\n<p>It is possible to make £2 in the following way:</p>\n<div style='margin-left: 4em;'>1×£1 + 1×50p + 2×20p + 1×5p + 1×2p + 3×1p</div>\n<p>How many different ways can <code>n</code> pence be made using any number of coins?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 30,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}