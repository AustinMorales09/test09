{
  "id": "5900f3a61000cf542c50feb9",
  "title": "Problem 58: Spiral primes",
  "challengeType": 1,
  "forumTopicId": 302169,
  "dashedName": "problem-58-spiral-primes",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function spiralPrimes(percent) {\n\n  return true;\n}\n\nspiralPrimes(50);",
      "error": null,
      "seed": "function spiralPrimes(percent) {\n\n  return true;\n}\n\nspiralPrimes(50);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function spiralPrimes(percent) {\n  function isPrime(n) {\n    if (n <= 3) {\n      return n > 1;\n    } else if (n % 2 === 0 || n % 3 === 0) {\n      return false;\n    }\n\n    for (let i = 5; i * i <= n; i += 6) {\n      if (n % i === 0 || n % (i + 2) === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  let totalCount = 1;\n  let primesCount = 0;\n  let curNumber = 1;\n  let curSideLength = 1;\n  let ratio = 1;\n  const wantedRatio = percent / 100;\n\n  while (ratio >= wantedRatio) {\n    curSideLength += 2;\n    for (let i = 0; i < 4; i++) {\n      curNumber += curSideLength - 1;\n      totalCount++;\n      if (i !== 3 && isPrime(curNumber)) {\n        primesCount++;\n      }\n    }\n    ratio = primesCount / totalCount;\n  }\n  return curSideLength;\n}",
        "error": null,
        "seed": "function spiralPrimes(percent) {\n  function isPrime(n) {\n    if (n <= 3) {\n      return n > 1;\n    } else if (n % 2 === 0 || n % 3 === 0) {\n      return false;\n    }\n\n    for (let i = 5; i * i <= n; i += 6) {\n      if (n % i === 0 || n % (i + 2) === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  let totalCount = 1;\n  let primesCount = 0;\n  let curNumber = 1;\n  let curSideLength = 1;\n  let ratio = 1;\n  const wantedRatio = percent / 100;\n\n  while (ratio >= wantedRatio) {\n    curSideLength += 2;\n    for (let i = 0; i < 4; i++) {\n      curNumber += curSideLength - 1;\n      totalCount++;\n      if (i !== 3 && isPrime(curNumber)) {\n        primesCount++;\n      }\n    }\n    ratio = primesCount / totalCount;\n  }\n  return curSideLength;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>spiralPrimes(50)</code> should return a number.</p>",
      "testString": "assert(typeof spiralPrimes(50) === 'number');"
    },
    {
      "text": "<p><code>spiralPrimes(50)</code> should return <code>11</code>.</p>",
      "testString": "assert.strictEqual(spiralPrimes(50), 11);"
    },
    {
      "text": "<p><code>spiralPrimes(15)</code> should return <code>981</code>.</p>",
      "testString": "assert.strictEqual(spiralPrimes(15), 981);"
    },
    {
      "text": "<p><code>spiralPrimes(10)</code> should return <code>26241</code>.</p>",
      "testString": "assert.strictEqual(spiralPrimes(10), 26241);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Starting with 1 and spiralling anticlockwise in the following way, a square spiral with side length 7 is formed.</p>\n<div style='text-align: center;'>\n  <strong><span style='color: red;'>37</span></strong> 36 35 34 33 32 <strong><span style='color: red;'>31</span></strong><br>\n  38 <strong><span style='color: red;'>17</span></strong> 16 15 14 <strong><span style='color: red;'>13</span></strong> 30<br>\n  39 18  <strong><span style='color: red;'>5</span></strong>  4  <strong><span style='color: red;'>3</span></strong> 12 29<br>\n  40 19  6  1  2 11 28<br>\n  41 20  <strong><span style='color: red;'>7</span></strong>  8  9 10 27<br>\n  42 21 22 23 24 25 26<br>\n  <strong><span style='color: red;'>43</span></strong> 44 45 46 47 48 49<br>\n</div>\n<p>It is interesting to note that the odd squares lie along the bottom right diagonal, but what is more interesting is that 8 out of the 13 numbers lying along both diagonals are prime; that is, a ratio of 8/13 ≈ 62%.</p>\n<p>If one complete new layer is wrapped around the spiral above, a square spiral with side length 9 will be formed. If this process is continued, what is the side length of the square spiral for which the percent of primes along both diagonals first falls below <code>percent</code>?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-1-to-100",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 57,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}