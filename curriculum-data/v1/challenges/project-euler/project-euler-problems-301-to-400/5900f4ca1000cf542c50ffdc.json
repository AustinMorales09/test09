{
  "id": "5900f4ca1000cf542c50ffdc",
  "title": "Problem 349: Langton's ant",
  "challengeType": 1,
  "forumTopicId": 302008,
  "dashedName": "problem-349-langtons-ant",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function langtonsAnt() {\n\n  return true;\n}\n\nlangtonsAnt();",
      "error": null,
      "seed": "function langtonsAnt() {\n\n  return true;\n}\n\nlangtonsAnt();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>langtonsAnt()</code> should return <code>115384615384614940</code>.</p>",
      "testString": "assert.strictEqual(langtonsAnt(), 115384615384614940);"
    }
  ],
  "description": "<section id=\"description\">\n<p>An ant moves on a regular grid of squares that are coloured either black or white.</p>\n<p>The ant is always oriented in one of the cardinal directions (left, right, up or down) and moves from square to adjacent square according to the following rules:</p>\n<ul>\n<li>if it is on a black square, it flips the color of the square to white, rotates 90° counterclockwise and moves forward one square.</li>\n<li>if it is on a white square, it flips the color of the square to black, rotates 90° clockwise and moves forward one square.</li>\n</ul>\n<p>Starting with a grid that is entirely white, how many squares are black after ${10}^{18}$ moves of the ant?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-301-to-400",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 48,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}