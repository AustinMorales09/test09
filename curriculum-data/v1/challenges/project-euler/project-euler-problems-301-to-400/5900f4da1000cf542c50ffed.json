{
  "id": "5900f4da1000cf542c50ffed",
  "title": "Problem 366: Stone Game III",
  "challengeType": 1,
  "forumTopicId": 302027,
  "dashedName": "problem-366-stone-game-iii",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function stoneGameThree() {\n\n  return true;\n}\n\nstoneGameThree();",
      "error": null,
      "seed": "function stoneGameThree() {\n\n  return true;\n}\n\nstoneGameThree();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>stoneGameThree()</code> should return <code>88351299</code>.</p>",
      "testString": "assert.strictEqual(stoneGameThree(), 88351299);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Two players, Anton and Bernhard, are playing the following game.</p>\n<p>There is one pile of $n$ stones.</p>\n<p>The first player may remove any positive number of stones, but not the whole pile.</p>\n<p>Thereafter, each player may remove at most twice the number of stones his opponent took on the previous move.</p>\n<p>The player who removes the last stone wins.</p>\n<p>E.g. $n = 5$</p>\n<p>If the first player takes anything more than one stone the next player will be able to take all remaining stones.</p>\n<p>If the first player takes one stone, leaving four, his opponent will take also one stone, leaving three stones.</p>\n<p>The first player cannot take all three because he may take at most $2 \\times 1 = 2$ stones. So let's say he also takes one stone, leaving 2.</p>\n<p>The second player can take the two remaining stones and wins.</p>\n<p>So 5 is a losing position for the first player.</p>\n<p>For some winning positions there is more than one possible move for the first player.</p>\n<p>E.g. when $n = 17$ the first player can remove one or four stones.</p>\n<p>Let $M(n)$ be the maximum number of stones the first player can take from a winning position at his first turn and $M(n) = 0$ for any other position.</p>\n<p>$\\sum M(n)$ for $n ≤ 100$ is 728.</p>\n<p>Find $\\sum M(n)$ for $n ≤ {10}^{18}$. Give your answer modulo ${10}^8$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-301-to-400",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 65,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}