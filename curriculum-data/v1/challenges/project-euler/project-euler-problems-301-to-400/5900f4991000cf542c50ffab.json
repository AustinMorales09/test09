{
  "id": "5900f4991000cf542c50ffab",
  "title": "Problem 301: Nim",
  "challengeType": 1,
  "forumTopicId": 301955,
  "dashedName": "problem-301-nim",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function nim() {\n\n  return true;\n}\n\nnim();",
      "error": null,
      "seed": "function nim() {\n\n  return true;\n}\n\nnim();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>nim()</code> should return <code>2178309</code>.</p>",
      "testString": "assert.strictEqual(nim(), 2178309);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Nim is a game played with heaps of stones, where two players take it in turn to remove any number of stones from any heap until no stones remain.</p>\n<p>We'll consider the three-heap normal-play version of Nim, which works as follows:</p>\n<ul>\n<li>At the start of the game there are three heaps of stones.</li>\n<li>On his turn the player removes any positive number of stones from any single heap.</li>\n<li>The first player unable to move (because no stones remain) loses.</li>\n</ul>\n<p>If ($n_1$, $n_2$, $n_3$) indicates a Nim position consisting of heaps of size $n_1$, $n_2$ and $n_3$ then there is a simple function $X(n_1,n_2,n_3)$ — that you may look up or attempt to deduce for yourself — that returns:</p>\n<ul>\n<li>zero if, with perfect strategy, the player about to move will eventually lose; or</li>\n<li>non-zero if, with perfect strategy, the player about to move will eventually win.</li>\n</ul>\n<p>For example $X(1, 2, 3) = 0$ because, no matter what the current player does, his opponent can respond with a move that leaves two heaps of equal size, at which point every move by the current player can be mirrored by his opponent until no stones remain; so the current player loses. To illustrate:</p>\n<ul>\n<li>current player moves to (1,2,1)</li>\n<li>opponent moves to (1,0,1)</li>\n<li>current player moves to (0,0,1)</li>\n<li>opponent moves to (0,0,0), and so wins.</li>\n</ul>\n<p>For how many positive integers $n ≤ 2^{30}$ does $X(n, 2n, 3n) = 0$?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-301-to-400",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 0,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}