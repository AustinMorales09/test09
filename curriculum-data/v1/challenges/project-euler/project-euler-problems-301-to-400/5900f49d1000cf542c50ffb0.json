{
  "id": "5900f49d1000cf542c50ffb0",
  "title": "Problem 305: Reflexive Position",
  "challengeType": 1,
  "forumTopicId": 301959,
  "dashedName": "problem-305-reflexive-position",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function reflexivePosition() {\n\n  return true;\n}\n\nreflexivePosition();",
      "error": null,
      "seed": "function reflexivePosition() {\n\n  return true;\n}\n\nreflexivePosition();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>reflexivePosition()</code> should return <code>18174995535140</code>.</p>",
      "testString": "assert.strictEqual(reflexivePosition(), 18174995535140);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Let's call $S$ the (infinite) string that is made by concatenating the consecutive positive integers (starting from 1) written down in base 10.</p>\n<p>Thus, $S = 1234567891011121314151617181920212223242\\ldots$</p>\n<p>It's easy to see that any number will show up an infinite number of times in $S$.</p>\n<p>Let's call $f(n)$ the starting position of the $n^{\\text{th}}$ occurrence of $n$ in $S$. For example, $f(1) = 1$, $f(5) = 81$, $f(12) = 271$ and $f(7780) = 111\\,111\\,365$.</p>\n<p>Find $\\sum f(3^k) for 1 ≤ k ≤ 13$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-301-to-400",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 4,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}