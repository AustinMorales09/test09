{
  "id": "5900f4e41000cf542c50fff5",
  "title": "Problem 375: Minimum of subsequences",
  "challengeType": 1,
  "forumTopicId": 302037,
  "dashedName": "problem-375-minimum-of-subsequences",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function minimumOfSubsequences() {\n\n  return true;\n}\n\nminimumOfSubsequences();",
      "error": null,
      "seed": "function minimumOfSubsequences() {\n\n  return true;\n}\n\nminimumOfSubsequences();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>minimumOfSubsequences()</code> should return <code>7435327983715286000</code>.</p>",
      "testString": "assert.strictEqual(minimumOfSubsequences(), 7435327983715286000);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Let $S_n$ be an integer sequence produced with the following pseudo-random number generator:</p>\n<p>$$\\begin{align}\nS_0 &#x26; = 290\\,797 \\\\\nS_{n + 1} &#x26; = {S_n}^2\\bmod 50\\,515\\,093\n\\end{align}$$</p>\n<p>Let $A(i, j)$ be the minimum of the numbers $S_i, S_{i + 1}, \\ldots, S_j$ for $i ≤ j$. Let $M(N) = \\sum A(i, j)$ for $1 ≤ i ≤ j ≤ N$.</p>\n<p>We can verify that $M(10) = 432\\,256\\,955$ and $M(10\\,000) = 3\\,264\\,567\\,774\\,119$.</p>\n<p>Find $M(2\\,000\\,000\\,000)$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-301-to-400",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 74,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}