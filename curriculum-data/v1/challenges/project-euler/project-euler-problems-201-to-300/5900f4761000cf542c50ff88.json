{
  "id": "5900f4761000cf542c50ff88",
  "title": "Problem 265: Binary Circles",
  "challengeType": 1,
  "forumTopicId": 301914,
  "dashedName": "problem-265-binary-circles",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function binaryCircles() {\n\n  return true;\n}\n\nbinaryCircles();",
      "error": null,
      "seed": "function binaryCircles() {\n\n  return true;\n}\n\nbinaryCircles();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>binaryCircles()</code> should return <code>209110240768</code>.</p>",
      "testString": "assert.strictEqual(binaryCircles(), 209110240768);"
    }
  ],
  "description": "<section id=\"description\">\n<p>$2^N$ binary digits can be placed in a circle so that all the $N$-digit clockwise subsequences are distinct.</p>\n<p>For $N = 3$, two such circular arrangements are possible, ignoring rotations:</p>\n<img class=\"img-responsive center-block\" alt=\"two circular arrangements for N = 3\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/binary-circles.gif\" style=\"background-color: white; padding: 10px;\">\n<p>For the first arrangement, the 3-digit subsequences, in clockwise order, are: 000, 001, 010, 101, 011, 111, 110 and 100.</p>\n<p>Each circular arrangement can be encoded as a number by concatenating the binary digits starting with the subsequence of all zeros as the most significant bits and proceeding clockwise. The two arrangements for $N = 3$ are thus represented as 23 and 29:</p>\n<p>$${00010111}_2 = 23\\\\\n{00011101}_2 = 29$$</p>\n<p>Calling $S(N)$ the sum of the unique numeric representations, we can see that $S(3) = 23 + 29 = 52$.</p>\n<p>Find $S(5)$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-201-to-300",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 64,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}