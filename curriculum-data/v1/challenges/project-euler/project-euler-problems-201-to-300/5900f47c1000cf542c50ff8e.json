{
  "id": "5900f47c1000cf542c50ff8e",
  "title": "Problem 270: Cutting Squares",
  "challengeType": 1,
  "forumTopicId": 301920,
  "dashedName": "problem-270-cutting-squares",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function cuttingSquares() {\n\n  return true;\n}\n\ncuttingSquares();",
      "error": null,
      "seed": "function cuttingSquares() {\n\n  return true;\n}\n\ncuttingSquares();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>cuttingSquares()</code> should return <code>82282080</code>.</p>",
      "testString": "assert.strictEqual(cuttingSquares(), 82282080);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A square piece of paper with integer dimensions $N×N$ is placed with a corner at the origin and two of its sides along the $x$- and $y$-axes. Then, we cut it up respecting the following rules:</p>\n<ul>\n<li>We only make straight cuts between two points lying on different sides of the square, and having integer coordinates.</li>\n<li>Two cuts cannot cross, but several cuts can meet at the same border point.</li>\n<li>Proceed until no more legal cuts can be made.</li>\n</ul>\n<p>Counting any reflections or rotations as distinct, we call $C(N)$ the number of ways to cut an $N×N$ square. For example, $C(1) = 2$ and $C(2) = 30$ (shown below).</p>\n<img class=\"img-responsive center-block\" alt=\"ways to cut 2x2 square, counting reflections and rotations as distinct\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/cutting-squares.gif\" style=\"background-color: white; padding: 10px;\">\n<p>What is $C(30)\\bmod {10}^8$ ?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-201-to-300",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 69,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}