{
  "id": "5900f45b1000cf542c50ff6d",
  "title": "Problem 238: Infinite string tour",
  "challengeType": 1,
  "forumTopicId": 301883,
  "dashedName": "problem-238-infinite-string-tour",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function infiniteStringTour() {\n\n  return true;\n}\n\ninfiniteStringTour();",
      "error": null,
      "seed": "function infiniteStringTour() {\n\n  return true;\n}\n\ninfiniteStringTour();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>infiniteStringTour()</code> should return <code>9922545104535660</code>.</p>",
      "testString": "assert.strictEqual(infiniteStringTour(), 9922545104535660);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Create a sequence of numbers using the \"Blum Blum Shub\" pseudo-random number generator:</p>\n<p>$$\ns_0 = 14025256 \\\\\ns_{n + 1} = {s_n}^2 \\; mod \\; 20\\,300\\,713\n$$</p>\n<p>Concatenate these numbers $s_0s_1s_2\\ldots$ to create a string $w$ of infinite length. Then, $w = 14025256741014958470038053646\\ldots$</p>\n<p>For a positive integer $k$, if no substring of $w$ exists with a sum of digits equal to $k$, $p(k)$ is defined to be zero. If at least one substring of $w$ exists with a sum of digits equal to $k$, we define $p(k) = z$, where $z$ is the starting position of the earliest such substring.</p>\n<p>For instance:</p>\n<p>The substrings 1, 14, 1402, … with respective sums of digits equal to 1, 5, 7, … start at position 1, hence $p(1) = p(5) = p(7) = \\ldots = 1$.</p>\n<p>The substrings 4, 402, 4025, … with respective sums of digits equal to 4, 6, 11, … start at position 2, hence $p(4) = p(6) = p(11) = \\ldots = 2$.</p>\n<p>The substrings 02, 0252, … with respective sums of digits equal to 2, 9, … start at position 3, hence $p(2) = p(9) = \\ldots = 3$.</p>\n<p>Note that substring 025 starting at position 3, has a sum of digits equal to 7, but there was an earlier substring (starting at position 1) with a sum of digits equal to 7, so $p(7) = 1$, not 3.</p>\n<p>We can verify that, for $0 &#x3C; k ≤ {10}^3$, $\\sum p(k) = 4742$.</p>\n<p>Find $\\sum p(k)$, for $0 &#x3C; k ≤ 2 \\times {10}^{15}$.</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-201-to-300",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 37,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}