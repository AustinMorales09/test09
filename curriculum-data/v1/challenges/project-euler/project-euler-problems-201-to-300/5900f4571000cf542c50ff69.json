{
  "id": "5900f4571000cf542c50ff69",
  "title": "Problem 234: Semidivisible numbers",
  "challengeType": 1,
  "forumTopicId": 301878,
  "dashedName": "problem-234-semidivisible-numbers",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function semidivisibleNumbers() {\n\n  return true;\n}\n\nsemidivisibleNumbers();",
      "error": null,
      "seed": "function semidivisibleNumbers() {\n\n  return true;\n}\n\nsemidivisibleNumbers();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>semidivisibleNumbers()</code> should return <code>1259187438574927000</code>.</p>",
      "testString": "assert.strictEqual(semidivisibleNumbers(), 1259187438574927000);"
    }
  ],
  "description": "<section id=\"description\">\n<p>For an integer $n ≥ 4$, we define the lower prime square root of $n$, denoted by $lps(n)$, as the $\\text{largest prime} ≤ \\sqrt{n}$ and the upper prime square root of $n$, $ups(n)$, as the $\\text{smallest prime} ≥ \\sqrt{n}$.</p>\n<p>So, for example, $lps(4) = 2 = ups(4)$, $lps(1000) = 31$, $ups(1000) = 37$.</p>\n<p>Let us call an integer $n ≥ 4$ semidivisible, if one of $lps(n)$ and $ups(n)$ divides $n$, but not both.</p>\n<p>The sum of the semidivisible numbers not exceeding 15 is 30, the numbers are 8, 10 and 12. 15 is not semidivisible because it is a multiple of both $lps(15) = 3$ and $ups(15) = 5$. As a further example, the sum of the 92 semidivisible numbers up to 1000 is 34825.</p>\n<p>What is the sum of all semidivisible numbers not exceeding 999966663333?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-201-to-300",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 33,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}