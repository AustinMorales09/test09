{
  "id": "5900f48b1000cf542c50ff9e",
  "title": "Problem 287: Quadtree encoding (a simple compression algorithm)",
  "challengeType": 1,
  "forumTopicId": 301938,
  "dashedName": "problem-287-quadtree-encoding-a-simple-compression-algorithm",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function quadtreeEncoding() {\n\n  return true;\n}\n\nquadtreeEncoding();",
      "error": null,
      "seed": "function quadtreeEncoding() {\n\n  return true;\n}\n\nquadtreeEncoding();"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "// solution required",
        "error": null,
        "seed": "// solution required"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>quadtreeEncoding()</code> should return <code>313135496</code>.</p>",
      "testString": "assert.strictEqual(quadtreeEncoding(), 313135496);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The quadtree encoding allows us to describe a $2^N×2^N$ black and white image as a sequence of bits (0 and 1). Those sequences are to be read from left to right like this:</p>\n<ul>\n<li>the first bit deals with the complete $2^N×2^N$ region;</li>\n<li>\"0\" denotes a split:\n<ul>\n<li>the current $2^n×2^n$ region is divided into 4 sub-regions of dimension $2^{n - 1}×2^{n - 1}$,</li>\n<li>the next bits contains the description of the top left, top right, bottom left and bottom right sub-regions - in that order;</li>\n</ul>\n</li>\n<li>\"10\" indicates that the current region contains only black pixels;</li>\n<li>\"11\" indicates that the current region contains only white pixels.</li>\n</ul>\n<p>Consider the following 4×4 image (colored marks denote places where a split can occur):</p>\n<img class=\"img-responsive center-block\" alt=\"4x4 image with colored marks denoting place where split can occur\" src=\"https://cdn.freecodecamp.org/curriculum/project-euler/quadtree-encoding-a-simple-compression-algorithm.gif\" style=\"background-color: white; padding: 10px;\">\n<p>This image can be described by several sequences, for example : \"<strong><span style=\"color: red\">0</span></strong><strong><span style=\"color: blue\">0</span></strong>10101010<strong><span style=\"color: green\">0</span></strong>1011111011<strong><span style=\"color: orange\">0</span></strong>10101010\", of length 30, or \"<strong><span style=\"color: red\">0</span></strong>10<strong><span style=\"color: green\">0</span></strong>101111101110\", of length 16, which is the minimal sequence for this image.</p>\n<p>For a positive integer $N$, define $D_N$ as the $2^N×2^N$ image with the following coloring scheme:</p>\n<ul>\n<li>the pixel with coordinates $x = 0$, $y = 0$ corresponds to the bottom left pixel,</li>\n<li>if ${(x - 2^{N - 1})}^2 + {(y - 2^{N - 1})}^2 ≤ 2^{2N - 2}$ then the pixel is black,</li>\n<li>otherwise the pixel is white.</li>\n</ul>\n<p>What is the length of the minimal sequence describing $D_{24}$?</p>\n</section>",
  "translationPending": false,
  "block": "project-euler-problems-201-to-300",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 16,
  "certification": "project-euler",
  "superBlock": "project-euler",
  "challengeOrder": 86,
  "required": [],
  "helpCategory": "Euler",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}