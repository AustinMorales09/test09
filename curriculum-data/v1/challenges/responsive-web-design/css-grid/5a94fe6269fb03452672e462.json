{
  "id": "5a94fe6269fb03452672e462",
  "title": "Create Flexible Layouts Using auto-fit",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/p/pByETK/c3dPph8",
  "forumTopicId": 301127,
  "dashedName": "create-flexible-layouts-using-auto-fit",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  .item1{background:LightSkyBlue;}\n  .item2{background:LightSalmon;}\n  .item3{background:PaleTurquoise;}\n  .item4{background:LightPink;}\n  .item5{background:PaleGreen;}\n\n  .container {\n    font-size: 40px;\n    min-height: 100px;\n    width: 100%;\n    background: LightGray;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-gap: 10px;\n  }\n\n  .container2 {\n    font-size: 40px;\n    min-height: 100px;\n    width: 100%;\n    background: Silver;\n    display: grid;\n    /* Only change code below this line */\n\n    grid-template-columns: repeat(3, minmax(60px, 1fr));\n\n    /* Only change code above this line */\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-gap: 10px;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"item1\">1</div>\n  <div class=\"item2\">2</div>\n  <div class=\"item3\">3</div>\n  <div class=\"item4\">4</div>\n  <div class=\"item5\">5</div>\n</div>\n<div class=\"container2\">\n  <div class=\"item1\">1</div>\n  <div class=\"item2\">2</div>\n  <div class=\"item3\">3</div>\n  <div class=\"item4\">4</div>\n  <div class=\"item5\">5</div>\n</div>",
      "error": null,
      "seed": "<style>\n  .item1{background:LightSkyBlue;}\n  .item2{background:LightSalmon;}\n  .item3{background:PaleTurquoise;}\n  .item4{background:LightPink;}\n  .item5{background:PaleGreen;}\n\n  .container {\n    font-size: 40px;\n    min-height: 100px;\n    width: 100%;\n    background: LightGray;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-gap: 10px;\n  }\n\n  .container2 {\n    font-size: 40px;\n    min-height: 100px;\n    width: 100%;\n    background: Silver;\n    display: grid;\n    /* Only change code below this line */\n\n    grid-template-columns: repeat(3, minmax(60px, 1fr));\n\n    /* Only change code above this line */\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-gap: 10px;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"item1\">1</div>\n  <div class=\"item2\">2</div>\n  <div class=\"item3\">3</div>\n  <div class=\"item4\">4</div>\n  <div class=\"item5\">5</div>\n</div>\n<div class=\"container2\">\n  <div class=\"item1\">1</div>\n  <div class=\"item2\">2</div>\n  <div class=\"item3\">3</div>\n  <div class=\"item4\">4</div>\n  <div class=\"item5\">5</div>\n</div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>.container {grid-template-columns: repeat( auto-fill, minmax(60px, 1fr));} .container2 {grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));}</style>",
        "error": null,
        "seed": "<style>.container {grid-template-columns: repeat( auto-fill, minmax(60px, 1fr));} .container2 {grid-template-columns: repeat(auto-fit, minmax(60px, 1fr));}</style>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>container2</code> class should have a <code>grid-template-columns</code> property with <code>repeat</code> and <code>auto-fit</code> that will fill the grid with columns that have a minimum width of <code>60px</code> and a maximum of <code>1fr</code>.</p>",
      "testString": "assert(\n  code.match(\n    /.container2\\s*?{[\\s\\S]*grid-template-columns\\s*?:\\s*?repeat\\s*?\\(\\s*?auto-fit\\s*?,\\s*?minmax\\s*?\\(\\s*?60px\\s*?,\\s*?1fr\\s*?\\)\\s*?\\)\\s*?;[\\s\\S]*}/gi\n  )\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p><code>auto-fit</code> works almost identically to <code>auto-fill</code>. The only difference is that when the container's size exceeds the size of all the items combined, <code>auto-fill</code> keeps inserting empty rows or columns and pushes your items to the side, while <code>auto-fit</code> collapses those empty rows or columns and stretches your items to fit the size of the container.</p>\n<p><strong>Note:</strong> If your container can't fit all your items on one row, it will move them down to a new one.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>In the second grid, use <code>auto-fit</code> with <code>repeat</code> to fill the grid with columns that have a minimum width of <code>60px</code> and maximum of <code>1fr</code>. Then resize the preview to see the difference.</p>\n</section>",
  "translationPending": false,
  "block": "css-grid",
  "hasEditableBoundaries": false,
  "order": 6,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 19,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}