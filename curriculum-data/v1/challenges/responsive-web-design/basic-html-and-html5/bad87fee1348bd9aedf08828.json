{
  "id": "bad87fee1348bd9aedf08828",
  "title": "Create an Ordered List",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/p/pVMPUv/cQ3B8TM",
  "forumTopicId": 16824,
  "dashedName": "create-an-ordered-list",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<h2>CatPhotoApp</h2>\n<main>\n  <p>Click here to view more <a href=\"#\">cat photos</a>.</p>\n\n  <a href=\"#\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n\n  <p>Things cats love:</p>\n  <ul>\n    <li>catnip</li>\n    <li>laser pointers</li>\n    <li>lasagna</li>\n  </ul>\n  <p>Top 3 things cats hate:</p>\n\n</main>",
      "error": null,
      "seed": "<h2>CatPhotoApp</h2>\n<main>\n  <p>Click here to view more <a href=\"#\">cat photos</a>.</p>\n\n  <a href=\"#\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n\n  <p>Things cats love:</p>\n  <ul>\n    <li>catnip</li>\n    <li>laser pointers</li>\n    <li>lasagna</li>\n  </ul>\n  <p>Top 3 things cats hate:</p>\n\n</main>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<h2>CatPhotoApp</h2>\n<main>\n  <p>Click here to view more <a href=\"#\">cat photos</a>.</p>\n\n  <a href=\"#\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n\n  <p>Things cats love:</p>\n  <ul>\n    <li>catnip</li>\n    <li>laser pointers</li>\n    <li>lasagna</li>\n  </ul>\n  <p>Top 3 things cats hate:</p>\n  <ol>\n    <li>hate 1</li>\n    <li>hate 2</li>\n    <li>hate 3</li>\n  </ol>\n</main>",
        "error": null,
        "seed": "<h2>CatPhotoApp</h2>\n<main>\n  <p>Click here to view more <a href=\"#\">cat photos</a>.</p>\n\n  <a href=\"#\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n\n  <p>Things cats love:</p>\n  <ul>\n    <li>catnip</li>\n    <li>laser pointers</li>\n    <li>lasagna</li>\n  </ul>\n  <p>Top 3 things cats hate:</p>\n  <ol>\n    <li>hate 1</li>\n    <li>hate 2</li>\n    <li>hate 3</li>\n  </ol>\n</main>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should have an ordered list for <code>Top 3 things cats hate:</code></p>",
      "testString": "assert(/Top 3 things cats hate:/i.test($('ol').prev().text()));"
    },
    {
      "text": "<p>You should have an unordered list for <code>Things cats love:</code></p>",
      "testString": "assert(/Things cats love:/i.test($('ul').prev().text()));"
    },
    {
      "text": "<p>You should have only one <code>ul</code> element.</p>",
      "testString": "assert.equal($('ul').length, 1);"
    },
    {
      "text": "<p>You should have only one <code>ol</code> element.</p>",
      "testString": "assert.equal($('ol').length, 1);"
    },
    {
      "text": "<p>You should have three <code>li</code> elements within your <code>ul</code> element.</p>",
      "testString": "assert.equal($('ul li').length, 3);"
    },
    {
      "text": "<p>You should have three <code>li</code> elements within your <code>ol</code> element.</p>",
      "testString": "assert.equal($('ol li').length, 3);"
    },
    {
      "text": "<p>Your <code>ul</code> element should have a closing tag.</p>",
      "testString": "assert(\n  code.match(/<\\/ul>/g) &&\n    code.match(/<\\/ul>/g).length === code.match(/<ul>/g).length\n);"
    },
    {
      "text": "<p>Your <code>ol</code> element should have a closing tag.</p>",
      "testString": "assert(\n  code.match(/<\\/ol>/g) &&\n    code.match(/<\\/ol>/g).length === code.match(/<ol>/g).length\n);"
    },
    {
      "text": "<p>Your <code>li</code> element should have a closing tag.</p>",
      "testString": "assert(\n  code.match(/<\\/li>/g) &&\n    code.match(/<li>/g) &&\n    code.match(/<\\/li>/g).length === code.match(/<li>/g).length\n);"
    },
    {
      "text": "<p>The <code>li</code> elements in your unordered list should not be empty.</p>",
      "testString": "$('ul li').each((i, val) =>\n  assert(__helpers.removeWhiteSpace(val.textContent))\n);"
    },
    {
      "text": "<p>The <code>li</code> elements in your ordered list should not be empty.</p>",
      "testString": "$('ol li').each((i, val) =>\n  assert(!!__helpers.removeWhiteSpace(val.textContent))\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>HTML has another special element for creating <dfn>ordered lists</dfn>, or numbered lists.</p>\n<p>Ordered lists start with an opening <code>&#x3C;ol></code> element, followed by any number of <code>&#x3C;li></code> elements. Finally, ordered lists are closed with the <code>&#x3C;/ol></code> tag.</p>\n<p>For example:</p>\n<pre><code class=\"language-html\">&#x3C;ol>\n  &#x3C;li>Garfield&#x3C;/li>\n  &#x3C;li>Sylvester&#x3C;/li>\n&#x3C;/ol>\n</code></pre>\n<p>would create a numbered list of <code>Garfield</code> and <code>Sylvester</code>.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Create an ordered list of the top 3 things cats hate the most.</p>\n</section>",
  "translationPending": false,
  "block": "basic-html-and-html5",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 15,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}