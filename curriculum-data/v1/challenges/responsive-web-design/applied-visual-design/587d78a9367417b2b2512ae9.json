{
  "id": "587d78a9367417b2b2512ae9",
  "title": "Use a Bezier Curve to Move a Graphic",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/c/c6bnRCK",
  "forumTopicId": 301071,
  "dashedName": "use-a-bezier-curve-to-move-a-graphic",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  .balls{\n    border-radius: 50%;\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #red {\n    background: red;\n    left: 27%;\n    animation-timing-function: linear;\n  }\n  #blue {\n    background: blue;\n    left: 56%;\n    animation-timing-function: ease-out;\n  }\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id= \"red\"></div>\n<div class=\"balls\" id= \"blue\"></div>",
      "error": null,
      "seed": "<style>\n  .balls{\n    border-radius: 50%;\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #red {\n    background: red;\n    left: 27%;\n    animation-timing-function: linear;\n  }\n  #blue {\n    background: blue;\n    left: 56%;\n    animation-timing-function: ease-out;\n  }\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id= \"red\"></div>\n<div class=\"balls\" id= \"blue\"></div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  .balls{\n    border-radius: 50%;\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #red {\n    background: red;\n    left: 27%;\n    animation-timing-function: cubic-bezier(0, 0, 0.58, 1);\n  }\n  #blue {\n    background: blue;\n    left: 56%;\n    animation-timing-function: ease-out;\n  }\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id= \"red\"></div>\n<div class=\"balls\" id= \"blue\"></div>",
        "error": null,
        "seed": "<style>\n  .balls{\n    border-radius: 50%;\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #red {\n    background: red;\n    left: 27%;\n    animation-timing-function: cubic-bezier(0, 0, 0.58, 1);\n  }\n  #blue {\n    background: blue;\n    left: 56%;\n    animation-timing-function: ease-out;\n  }\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id= \"red\"></div>\n<div class=\"balls\" id= \"blue\"></div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The value of the <code>animation-timing-function</code> property of the element with the id <code>red</code> should be a <code>cubic-bezier</code> function with x1, y1, x2, y2 values set respectively to 0, 0, 0.58, 1 .</p>",
      "testString": "assert(\n  $('#red').css('animation-timing-function') == 'cubic-bezier(0, 0, 0.58, 1)'\n);"
    },
    {
      "text": "<p>The element with the id <code>red</code> should no longer have the <code>animation-timing-function</code> property of <code>linear</code>.</p>",
      "testString": "assert($('#red').css('animation-timing-function') !== 'linear');"
    },
    {
      "text": "<p>The value of the <code>animation-timing-function</code> property for the element with the id <code>blue</code> should not change.</p>",
      "testString": "const blueBallAnimation = __helpers.removeWhiteSpace(\n  $('#blue').css('animation-timing-function')\n);\nassert(\n  blueBallAnimation == 'ease-out' ||\n    blueBallAnimation == 'cubic-bezier(0,0,0.58,1)'\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>A previous challenge discussed the <code>ease-out</code> keyword that describes an animation change that speeds up first and then slows down at the end of the animation. On the right, the difference between the <code>ease-out</code> keyword (for the blue element) and <code>linear</code> keyword (for the red element) is demonstrated. Similar animation progressions to the <code>ease-out</code> keyword can be achieved by using a custom cubic Bezier curve function.</p>\n<p>In general, changing the <code>p1</code> and <code>p2</code> anchor points drives the creation of different Bezier curves, which controls how the animation progresses through time. Here's an example of a Bezier curve using values to mimic the <code>ease-out</code> style:</p>\n<pre><code class=\"language-css\">animation-timing-function: cubic-bezier(0, 0, 0.58, 1);\n</code></pre>\n<p>Remember that all <code>cubic-bezier</code> functions start with <code>p0</code> at (0, 0) and end with <code>p3</code> at (1, 1). In this example, the curve moves faster through the Y-axis (starts at 0, goes to <code>p1</code> y value of 0, then goes to <code>p2</code> y value of 1) than it moves through the X-axis (0 to start, then 0 for <code>p1</code>, up to 0.58 for <code>p2</code>). As a result, the change in the animated element progresses faster than the time of the animation for that segment. Towards the end of the curve, the relationship between the change in x and y values reverses - the y value moves from 1 to 1 (no change), and the x values move from 0.58 to 1, making the animation changes progress slower compared to the animation duration.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>To see the effect of this Bezier curve in action, change the <code>animation-timing-function</code> of the element with id of <code>red</code> to a <code>cubic-bezier</code> function with x1, y1, x2, y2 set respectively to <code>0, 0, 0.58, 1</code> as the values. This will make both elements progress through the animation similarly.</p>\n</section>",
  "translationPending": false,
  "block": "applied-visual-design",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 50,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}