{
  "id": "587d78a7367417b2b2512ae1",
  "title": "Create Movement Using CSS Animation",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/c/c7amZfW",
  "forumTopicId": 301051,
  "dashedName": "create-movement-using-css-animation",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  div {\n    height: 40px;\n    width: 70%;\n    background: black;\n    margin: 50px auto;\n    border-radius: 5px;\n    position: relative;\n  }\n\n  #rect {\n    animation-name: rainbow;\n    animation-duration: 4s;\n  }\n\n  @keyframes rainbow {\n    0% {\n      background-color: blue;\n      top: 0px;\n\n    }\n    50% {\n      background-color: green;\n      top: 50px;\n\n    }\n    100% {\n      background-color: yellow;\n      top: 0px;\n\n    }\n  }\n</style>\n\n<div id=\"rect\"></div>",
      "error": null,
      "seed": "<style>\n  div {\n    height: 40px;\n    width: 70%;\n    background: black;\n    margin: 50px auto;\n    border-radius: 5px;\n    position: relative;\n  }\n\n  #rect {\n    animation-name: rainbow;\n    animation-duration: 4s;\n  }\n\n  @keyframes rainbow {\n    0% {\n      background-color: blue;\n      top: 0px;\n\n    }\n    50% {\n      background-color: green;\n      top: 50px;\n\n    }\n    100% {\n      background-color: yellow;\n      top: 0px;\n\n    }\n  }\n</style>\n\n<div id=\"rect\"></div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  div {\n    height: 40px;\n    width: 70%;\n    background: black;\n    margin: 50px auto;\n    border-radius: 5px;\n    position: relative;\n  }\n\n  #rect {\n    animation-name: rainbow;\n    animation-duration: 4s;\n  }\n\n  @keyframes rainbow {\n    0% {\n      background-color: blue;\n      top: 0px;\n      left: 0px;\n    }\n    50% {\n      background-color: green;\n      top: 50px;\n      left: 25px;\n    }\n    100% {\n      background-color: yellow;\n      top: 0px;\n      left: -25px;\n    }\n  }\n</style>\n<div id=\"rect\"></div>",
        "error": null,
        "seed": "<style>\n  div {\n    height: 40px;\n    width: 70%;\n    background: black;\n    margin: 50px auto;\n    border-radius: 5px;\n    position: relative;\n  }\n\n  #rect {\n    animation-name: rainbow;\n    animation-duration: 4s;\n  }\n\n  @keyframes rainbow {\n    0% {\n      background-color: blue;\n      top: 0px;\n      left: 0px;\n    }\n    50% {\n      background-color: green;\n      top: 50px;\n      left: 25px;\n    }\n    100% {\n      background-color: yellow;\n      top: 0px;\n      left: -25px;\n    }\n  }\n</style>\n<div id=\"rect\"></div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The <code>@keyframes</code> rule for <code>0%</code> should use the <code>left</code> offset of 0px.</p>",
      "testString": "assert(code.match(/[^50]0%\\s*?{[\\s\\S]*?left:\\s*?0px(;[\\s\\S]*?|\\s*?)}/gi));"
    },
    {
      "text": "<p>The <code>@keyframes</code> rule for <code>50%</code> should use the <code>left</code> offset of 25px.</p>",
      "testString": "assert(code.match(/50%\\s*?{[\\s\\S]*?left:\\s*?25px(;[\\s\\S]*?|\\s*?)}/gi));"
    },
    {
      "text": "<p>The <code>@keyframes</code> rule for <code>100%</code> should use the <code>left</code> offset of -25px.</p>",
      "testString": "assert(code.match(/100%\\s*?{[\\s\\S]*?left:\\s*?-25px(;[\\s\\S]*?|\\s*?)}/gi));"
    }
  ],
  "description": "<section id=\"description\">\n<p>When elements have a specified <code>position</code>, such as <code>fixed</code> or <code>relative</code>, the CSS offset properties <code>right</code>, <code>left</code>, <code>top</code>, and <code>bottom</code> can be used in animation rules to create movement.</p>\n<p>As shown in the example below, you can push the item downwards then upwards by setting the <code>top</code> property of the <code>50%</code> keyframe to 50px, but having it set to 0px for the first (<code>0%</code>) and the last (<code>100%</code>) keyframe.</p>\n<pre><code class=\"language-css\">@keyframes rainbow {\n  0% {\n    background-color: blue;\n    top: 0px;\n  }\n  50% {\n    background-color: green;\n    top: 50px;\n  }\n  100% {\n    background-color: yellow;\n    top: 0px;\n  }\n}\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add a horizontal motion to the <code>div</code> animation. Using the <code>left</code> offset property, add to the <code>@keyframes</code> rule so rainbow starts at 0 pixels at <code>0%</code>, moves to 25 pixels at <code>50%</code>, and ends at -25 pixels at <code>100%</code>. Don't replace the <code>top</code> property in the editor - the animation should have both vertical and horizontal motion.</p>\n</section>",
  "translationPending": false,
  "block": "applied-visual-design",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 42,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}