{
  "id": "587d78a6367417b2b2512ade",
  "title": "Create a More Complex Shape Using CSS and HTML",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/c/cPpz4fr",
  "forumTopicId": 301050,
  "dashedName": "create-a-more-complex-shape-using-css-and-html",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  .heart {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: pink;\n    height: 50px;\n    width: 50px;\n    transform: ;\n  }\n  .heart::after {\n    background-color: blue;\n    content: \"\";\n    border-radius: 25%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: 0px;\n    left: 25px;\n  }\n  .heart::before {\n    content: ;\n    background-color: pink;\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: -25px;\n    left: 0px;\n  }\n</style>\n<div class=\"heart\"></div>",
      "error": null,
      "seed": "<style>\n  .heart {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: pink;\n    height: 50px;\n    width: 50px;\n    transform: ;\n  }\n  .heart::after {\n    background-color: blue;\n    content: \"\";\n    border-radius: 25%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: 0px;\n    left: 25px;\n  }\n  .heart::before {\n    content: ;\n    background-color: pink;\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: -25px;\n    left: 0px;\n  }\n</style>\n<div class=\"heart\"></div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  .heart {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: pink;\n    height: 50px;\n    width: 50px;\n    transform: rotate(-45deg);\n  }\n  .heart::after {\n    background-color: pink;\n    content: \"\";\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: 0px;\n    left: 25px;\n  }\n  .heart::before {\n    content: \"\";\n    background-color: pink;\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: -25px;\n    left: 0px;\n  }\n</style>\n<div class=\"heart\"></div>",
        "error": null,
        "seed": "<style>\n  .heart {\n    position: absolute;\n    margin: auto;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: pink;\n    height: 50px;\n    width: 50px;\n    transform: rotate(-45deg);\n  }\n  .heart::after {\n    background-color: pink;\n    content: \"\";\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: 0px;\n    left: 25px;\n  }\n  .heart::before {\n    content: \"\";\n    background-color: pink;\n    border-radius: 50%;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    top: -25px;\n    left: 0px;\n  }\n</style>\n<div class=\"heart\"></div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The <code>background-color</code> property of the <code>.heart::after</code> selector should be <code>pink</code>.</p>",
      "testString": "const heartAfter = code.match(/\\.heart::after\\s*{[\\s\\S]+?[^\\}]}/g)[0];\nassert(\n  /({|;)\\s*background-color\\s*:\\s*pink\\s*(;|})/g.test(heartAfter)\n);"
    },
    {
      "text": "<p>The <code>border-radius</code> of the <code>.heart::after</code> selector should be 50%.</p>",
      "testString": "assert(code.match(/border-radius\\s*?:\\s*?50%/gi).length == 2);"
    },
    {
      "text": "<p>The <code>transform</code> property for the <code>heart</code> class should use a <code>rotate()</code> function set to -45 degrees.</p>",
      "testString": "assert(code.match(/transform\\s*?:\\s*?rotate\\(\\s*?-45deg\\s*?\\)/gi));"
    },
    {
      "text": "<p>The <code>content</code> of the <code>.heart::before</code> selector should be an empty string.</p>",
      "testString": "assert(code.match(/\\.heart::before\\s*?{\\s*?content\\s*?:\\s*?(\"|')\\1\\s*?;/gi));"
    }
  ],
  "description": "<section id=\"description\">\n<p>One of the most popular shapes in the world is the heart shape, and in this challenge you'll create one using pure CSS. But first, you need to understand the <code>::before</code> and <code>::after</code> pseudo-elements. <code>::before</code> creates a pseudo-element that is the first child of the selected element; <code>::after</code> creates a pseudo-element that is the last child of the selected element. In the following example, a <code>::before</code> pseudo-element is used to add a rectangle to an element with the class <code>heart</code>:</p>\n<pre><code class=\"language-css\">.heart::before {\n  content: \"\";\n  background-color: yellow;\n  border-radius: 25%;\n  position: absolute;\n  height: 50px;\n  width: 70px;\n  top: -50px;\n  left: 5px;\n}\n</code></pre>\n<p>For the <code>::before</code> and <code>::after</code> pseudo-elements to function properly, they must have a defined <code>content</code> property. This property is usually used to add things like a photo or text to the selected element. When the <code>::before</code> and <code>::after</code> pseudo-elements are used to make shapes, the <code>content</code> property is still required, but it's set to an empty string. In the above example, the element with the class of <code>heart</code> has a <code>::before</code> pseudo-element that produces a yellow rectangle with height and width of <code>50px</code> and <code>70px</code>, respectively. This rectangle has round corners due to its 25% <code>border-radius</code> and is positioned absolutely at <code>5px</code> from the left and <code>50px</code> above the top of the element.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Transform the element on the screen to a heart. In the <code>.heart::after</code> selector, change the <code>background-color</code> to <code>pink</code> and the <code>border-radius</code> to 50%.</p>\n<p>Next, target the element with the class <code>heart</code> (just <code>heart</code>) and fill in the <code>transform</code> property. Use the <code>rotate()</code> function with -45 degrees.</p>\n<p>Finally, in the <code>.heart::before</code> selector, set its <code>content</code> property to an empty string.</p>\n</section>",
  "translationPending": false,
  "block": "applied-visual-design",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 38,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}