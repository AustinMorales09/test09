{
  "id": "587d78a8367417b2b2512ae7",
  "title": "Change Animation Timing with Keywords",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/c/cJKvwCM",
  "forumTopicId": 301045,
  "dashedName": "change-animation-timing-with-keywords",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n\n  .balls {\n    border-radius: 50%;\n    background: linear-gradient(\n      35deg,\n      #ccffff,\n      #ffcccc\n    );\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #ball1 {\n    left:27%;\n\n  }\n  #ball2 {\n    left:56%;\n\n  }\n\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n\n</style>\n\n<div class=\"balls\" id=\"ball1\"></div>\n<div class=\"balls\" id=\"ball2\"></div>",
      "error": null,
      "seed": "<style>\n\n  .balls {\n    border-radius: 50%;\n    background: linear-gradient(\n      35deg,\n      #ccffff,\n      #ffcccc\n    );\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #ball1 {\n    left:27%;\n\n  }\n  #ball2 {\n    left:56%;\n\n  }\n\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n\n</style>\n\n<div class=\"balls\" id=\"ball1\"></div>\n<div class=\"balls\" id=\"ball2\"></div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  .balls {\n    border-radius: 50%;\n    background: linear-gradient(\n      35deg,\n      #ccffff,\n      #ffcccc\n    );\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #ball1 {\n    left:27%;\n    animation-timing-function: linear;\n  }\n  #ball2 {\n    left:56%;\n    animation-timing-function: ease-out;\n  }\n\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id=\"ball1\"></div>\n<div class=\"balls\" id=\"ball2\"></div>",
        "error": null,
        "seed": "<style>\n  .balls {\n    border-radius: 50%;\n    background: linear-gradient(\n      35deg,\n      #ccffff,\n      #ffcccc\n    );\n    position: fixed;\n    width: 50px;\n    height: 50px;\n    margin-top: 50px;\n    animation-name: bounce;\n    animation-duration: 2s;\n    animation-iteration-count: infinite;\n  }\n  #ball1 {\n    left:27%;\n    animation-timing-function: linear;\n  }\n  #ball2 {\n    left:56%;\n    animation-timing-function: ease-out;\n  }\n\n  @keyframes bounce {\n    0% {\n      top: 0px;\n    }\n    100% {\n      top: 249px;\n    }\n  }\n</style>\n<div class=\"balls\" id=\"ball1\"></div>\n<div class=\"balls\" id=\"ball2\"></div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The value of the <code>animation-timing-function</code> property for the element with the id <code>ball1</code> should be <code>linear</code>.</p>",
      "testString": "const ball1Animation = __helpers.removeWhiteSpace(\n  $('#ball1').css('animation-timing-function')\n);\nassert(ball1Animation == 'linear' || ball1Animation == 'cubic-bezier(0,0,1,1)');"
    },
    {
      "text": "<p>The value of the <code>animation-timing-function</code> property for the element with the id <code>ball2</code> should be <code>ease-out</code>.</p>",
      "testString": "const ball2Animation = __helpers.removeWhiteSpace(\n  $('#ball2').css('animation-timing-function')\n);\nassert(\n  ball2Animation == 'ease-out' || ball2Animation == 'cubic-bezier(0,0,0.58,1)'\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>In CSS animations, the <code>animation-timing-function</code> property controls how quickly an animated element changes over the duration of the animation. If the animation is a car moving from point A to point B in a given time (your <code>animation-duration</code>), the <code>animation-timing-function</code> says how the car accelerates and decelerates over the course of the drive.</p>\n<p>There are a number of predefined keywords available for popular options. For example, the default value is <code>ease</code>, which starts slow, speeds up in the middle, and then slows down again in the end. Other options include <code>ease-out</code>, which is quick in the beginning then slows down, <code>ease-in</code>, which is slow in the beginning, then speeds up at the end, or <code>linear</code>, which applies a constant animation speed throughout.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>For the elements with id of <code>ball1</code> and <code>ball2</code>, add an <code>animation-timing-function</code> property to each, and set <code>#ball1</code> to <code>linear</code>, and <code>#ball2</code> to <code>ease-out</code>. Notice the difference between how the elements move during the animation but end together, since they share the same <code>animation-duration</code> of 2 seconds.</p>\n</section>",
  "translationPending": false,
  "block": "applied-visual-design",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 48,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}