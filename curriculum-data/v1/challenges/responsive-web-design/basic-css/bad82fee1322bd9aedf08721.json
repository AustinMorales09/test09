{
  "id": "bad82fee1322bd9aedf08721",
  "title": "Understand Absolute versus Relative Units",
  "challengeType": 0,
  "videoUrl": "https://scrimba.com/c/cN66JSL",
  "forumTopicId": 301089,
  "dashedName": "understand-absolute-versus-relative-units",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  .injected-text {\n    margin-bottom: -25px;\n    text-align: center;\n  }\n\n  .box {\n    border-style: solid;\n    border-color: black;\n    border-width: 5px;\n    text-align: center;\n  }\n\n  .yellow-box {\n    background-color: yellow;\n    padding: 20px 40px 20px 40px;\n  }\n\n  .red-box {\n    background-color: red;\n    margin: 20px 40px 20px 40px;\n\n  }\n\n  .green-box {\n    background-color: green;\n    margin: 20px 40px 20px 40px;\n  }\n</style>\n<h5 class=\"injected-text\">margin</h5>\n\n<div class=\"box yellow-box\">\n  <h5 class=\"box red-box\">padding</h5>\n  <h5 class=\"box green-box\">padding</h5>\n</div>",
      "error": null,
      "seed": "<style>\n  .injected-text {\n    margin-bottom: -25px;\n    text-align: center;\n  }\n\n  .box {\n    border-style: solid;\n    border-color: black;\n    border-width: 5px;\n    text-align: center;\n  }\n\n  .yellow-box {\n    background-color: yellow;\n    padding: 20px 40px 20px 40px;\n  }\n\n  .red-box {\n    background-color: red;\n    margin: 20px 40px 20px 40px;\n\n  }\n\n  .green-box {\n    background-color: green;\n    margin: 20px 40px 20px 40px;\n  }\n</style>\n<h5 class=\"injected-text\">margin</h5>\n\n<div class=\"box yellow-box\">\n  <h5 class=\"box red-box\">padding</h5>\n  <h5 class=\"box green-box\">padding</h5>\n</div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  .injected-text {\n    margin-bottom: -25px;\n    text-align: center;\n  }\n\n  .box {\n    border-style: solid;\n    border-color: black;\n    border-width: 5px;\n    text-align: center;\n  }\n\n  .yellow-box {\n    background-color: yellow;\n    padding: 20px 40px 20px 40px;\n  }\n\n  .red-box {\n    background-color: red;\n    margin: 20px 40px 20px 40px;\n    padding: 1.5em;\n  }\n\n  .green-box {\n    background-color: green;\n    margin: 20px 40px 20px 40px;\n  }\n</style>\n<h5 class=\"injected-text\">margin</h5>\n\n<div class=\"box yellow-box\">\n  <h5 class=\"box red-box\">padding</h5>\n  <h5 class=\"box green-box\">padding</h5>\n</div>",
        "error": null,
        "seed": "<style>\n  .injected-text {\n    margin-bottom: -25px;\n    text-align: center;\n  }\n\n  .box {\n    border-style: solid;\n    border-color: black;\n    border-width: 5px;\n    text-align: center;\n  }\n\n  .yellow-box {\n    background-color: yellow;\n    padding: 20px 40px 20px 40px;\n  }\n\n  .red-box {\n    background-color: red;\n    margin: 20px 40px 20px 40px;\n    padding: 1.5em;\n  }\n\n  .green-box {\n    background-color: green;\n    margin: 20px 40px 20px 40px;\n  }\n</style>\n<h5 class=\"injected-text\">margin</h5>\n\n<div class=\"box yellow-box\">\n  <h5 class=\"box red-box\">padding</h5>\n  <h5 class=\"box green-box\">padding</h5>\n</div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>red-box</code> class should have a <code>padding</code> property.</p>",
      "testString": "assert(\n  $('.red-box').css('padding-top') != '0px' &&\n    $('.red-box').css('padding-right') != '0px' &&\n    $('.red-box').css('padding-bottom') != '0px' &&\n    $('.red-box').css('padding-left') != '0px'\n);"
    },
    {
      "text": "<p>Your <code>red-box</code> class should give elements 1.5em of <code>padding</code>.</p>",
      "testString": "assert(code.match(/\\.red-box\\s*?{[\\s\\S]*padding\\s*:\\s*?1\\.5em/gi));"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last several challenges all set an element's margin or padding with pixels (<code>px</code>). Pixels are a type of length unit, which is what tells the browser how to size or space an item. In addition to <code>px</code>, CSS has a number of different length unit options that you can use.</p>\n<p>The two main types of length units are absolute and relative. Absolute units tie to physical units of length. For example, <code>in</code> and <code>mm</code> refer to inches and millimeters, respectively. Absolute length units approximate the actual measurement on a screen, but there are some differences depending on a screen's resolution.</p>\n<p>Relative units, such as <code>em</code> or <code>rem</code>, are relative to another length value. For example, <code>em</code> is based on the size of an element's font. If you use it to set the <code>font-size</code> property itself, it's relative to the parent's <code>font-size</code>.</p>\n<p><strong>Note:</strong> There are several relative unit options that are tied to the size of the viewport. They are covered in the Responsive Web Design Principles section.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add a <code>padding</code> property to the element with class <code>red-box</code> and set it to <code>1.5em</code>.</p>\n</section>",
  "translationPending": false,
  "block": "basic-css",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 18,
  "certification": "responsive-web-design",
  "superBlock": "responsive-web-design",
  "challengeOrder": 23,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}