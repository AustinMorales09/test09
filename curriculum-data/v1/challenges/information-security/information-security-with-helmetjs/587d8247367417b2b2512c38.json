{
  "id": "587d8247367417b2b2512c38",
  "title": "Mitigate the Risk of Clickjacking with helmet.frameguard()",
  "challengeType": 2,
  "forumTopicId": 301582,
  "dashedName": "mitigate-the-risk-of-clickjacking-with-helmet-frameguard",
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>helmet.frameguard() middleware should be mounted correctly</p>",
      "testString": "(getUserInput) =>\n  $.get(getUserInput('url') + '/_api/app-info').then(\n    (data) => {\n      assert.include(\n        data.appStack,\n        'frameguard',\n        'helmet.frameguard() middleware is not mounted correctly'\n      );\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"
    },
    {
      "text": "<p>helmet.frameguard() 'action' should be set to 'DENY'</p>",
      "testString": "(getUserInput) =>\n  $.get(getUserInput('url') + '/_api/app-info').then(\n    (data) => {\n      assert.property(data.headers, 'x-frame-options');\n      assert.equal(data.headers['x-frame-options'], 'DENY');\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"
    }
  ],
  "description": "<section id=\"description\">\n<p>As a reminder, this project is being built upon the following starter project on <a href=\"https://gitpod.io/?autostart=true#https://github.com/freeCodeCamp/boilerplate-infosec/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Gitpod</a>, or cloned from <a href=\"https://github.com/freeCodeCamp/boilerplate-infosec/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">GitHub</a>.</p>\n<p>Your page could be put in a <code>&#x3C;frame></code> or <code>&#x3C;iframe></code> without your consent. This can result in clickjacking attacks, among other things. Clickjacking is a technique of tricking a user into interacting with a page different from what the user thinks it is. This can be obtained by executing your page in a malicious context, by means of iframing. In that context, a hacker can put a hidden layer over your page. Hidden buttons can be used to run bad scripts. This middleware sets the X-Frame-Options header. It restricts who can put your site in a frame. It has three modes: DENY, SAMEORIGIN, and ALLOW-FROM.</p>\n<p>We donâ€™t need our app to be framed.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use <code>helmet.frameguard()</code> passing with the configuration object <code>{action: 'deny'}</code>.</p>\n</section>",
  "translationPending": false,
  "block": "information-security-with-helmetjs",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 9,
  "certification": "information-security",
  "superBlock": "information-security",
  "challengeOrder": 2,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}