{
  "id": "65ef1a1fcb527bba0ca82ccf",
  "title": "Step 6",
  "challengeType": 20,
  "dashedName": "step-6",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        7
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "def square_root_bisection(square_target, tolerance=1e-7, max_iterations=100):\n    if square_target < 0:\n        raise ValueError('Square root of negative number is not defined in real numbers')\n    if square_target == 1:\n        pass\n",
      "error": null,
      "seed": "def square_root_bisection(square_target, tolerance=1e-7, max_iterations=100):\n    if square_target < 0:\n        raise ValueError('Square root of negative number is not defined in real numbers')\n    if square_target == 1:\n        pass\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should remove the <code>pass</code> keyword.</p>",
      "testString": "({\n     test: () => \n     {\n        assert.isFalse(runPython(`_Node(_code).find_function(\"square_root_bisection\").find_ifs()[1].find_bodies()[0].has_pass()`))\n    }\n})"
    },
    {
      "text": "<p>You should assign the value <code>1</code> to the <code>root</code> variable and print the message <code>'The square root of {square_target} is 1'</code> inside the <code>if</code> body.</p>",
      "testString": "\n({\n    test: () => \n    {        \n        assert(runPython(`_Node(_code).find_function(\"square_root_bisection\").find_ifs()[1].find_bodies()[0].is_equivalent(\"root = 1\\\\nprint(f'The square root of {square_target} is 1')\")`));\n    }\n})\n"
    }
  ],
  "description": "<section id=\"description\">\n<p>If the <code>square_target</code> is equal to  <code>1</code>, declare a variable <code>root</code> and assign it the value <code>1</code> . Also, print the message <code>'The square root of {square_target} is 1'</code>. Remember to format the message using an f-string.</p>\n</section>",
  "translationPending": false,
  "block": "learn-the-bisection-method-by-finding-the-square-root-of-a-number",
  "hasEditableBoundaries": true,
  "order": 4,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 5,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}