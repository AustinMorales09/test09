{
  "id": "65ef181dad3d96b14a21a03e",
  "title": "Step 1",
  "challengeType": 20,
  "dashedName": "step-1",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        2
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should define the function <code>square_root_bisection</code> with no parameters.</p>",
      "testString": "({\n    test: () => {\n        assert(runPython(`\n        import inspect        \n        inspect.isfunction(square_root_bisection)\n        `))\n    }\n})"
    }
  ],
  "description": "<section id=\"description\">\n<p>In this project, you will find the approximate square root of a given number using the bisection method.</p>\n<p>The bisection method is a technique for finding the roots of a real-valued function. It works by narrowing down an interval where the square root lies until it converges to a value within a specified tolerance.</p>\n<p>Begin by creating a function named <code>square_root_bisection</code>. Leave the parameters empty for now.</p>\n</section>",
  "translationPending": false,
  "block": "learn-the-bisection-method-by-finding-the-square-root-of-a-number",
  "hasEditableBoundaries": true,
  "order": 4,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 0,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}