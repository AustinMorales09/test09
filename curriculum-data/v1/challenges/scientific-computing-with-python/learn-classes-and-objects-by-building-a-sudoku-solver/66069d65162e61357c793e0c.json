{
  "id": "66069d65162e61357c793e0c",
  "title": "Step 9",
  "challengeType": 20,
  "dashedName": "step-9",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        4,
        6
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "\nclass Board:\n    def __init__(self):\n        pass\n\ngameboard = Board()",
      "error": null,
      "seed": "\nclass Board:\n    def __init__(self):\n        pass\n\ngameboard = Board()"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a variable <code>puzzle</code> and assign it the provided 2D-list.</p>",
      "testString": "({ test: () => assert(runPython(`_Node(_code).find_variable(\"puzzle\").is_equivalent(\"puzzle = [[0, 0, 2, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 3, 7, 6, 2], [4, 3, 0, 0, 0, 0, 8, 0, 0], [0, 5, 0, 0, 3, 0, 0, 9, 0], [0, 4, 0, 0, 0, 0, 0, 2, 6], [0, 0, 0, 4, 6, 7, 0, 0, 0], [0, 8, 6, 7, 0, 4, 0, 0, 0], [0, 0, 0, 5, 1, 9, 0, 0, 8], [1, 7, 0, 0, 0, 6, 0, 0, 5]]\")`)) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>The sudoku puzzle to solve will be a list of lists, as the following:</p>\n<pre><code class=\"language-py\">[\n  [0, 0, 2, 0, 0, 8, 0, 0, 0],\n  [0, 0, 0, 0, 0, 3, 7, 6, 2],\n  [4, 3, 0, 0, 0, 0, 8, 0, 0],\n  [0, 5, 0, 0, 3, 0, 0, 9, 0],\n  [0, 4, 0, 0, 0, 0, 0, 2, 6],\n  [0, 0, 0, 4, 6, 7, 0, 0, 0],\n  [0, 8, 6, 7, 0, 4, 0, 0, 0],\n  [0, 0, 0, 5, 1, 9, 0, 0, 8],\n  [1, 7, 0, 0, 0, 6, 0, 0, 5]\n]\n</code></pre>\n<p>Note that the empty cells are filled with a zero.</p>\n<p>Declare a <code>puzzle</code> variable and assign it the list of lists in the example above.</p>\n</section>",
  "translationPending": false,
  "block": "learn-classes-and-objects-by-building-a-sudoku-solver",
  "hasEditableBoundaries": true,
  "order": 11,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 8,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}