{
  "id": "656877c202f44995ed952608",
  "title": "Step 2",
  "challengeType": 20,
  "dashedName": "step-2",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        4
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "def main():\n    pass\n",
      "error": null,
      "seed": "def main():\n    pass\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should have <code>card_number = '4111-1111-4555-1142'</code> within the <code>main</code> function.</p>",
      "testString": "({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const main = __helpers.python.getDef(\"\\n\" + transformedCode, \"main\");\n        const { function_body } = main;\n\n        assert.match(function_body, / +card_number\\s*=\\s*('|\")4111-1111-4555-1142\\1/);\n    }\n})"
    },
    {
      "text": "<p>You should not have a <code>pass</code> in your code.</p>",
      "testString": "({\n    test: () => {\n        const transformedCode = code.replace(/\\r/g, \"\");\n        const no_comments = __helpers.python.removeComments(transformedCode);\n        assert.notInclude(no_comments, \"pass\");\n    }\n})"
    }
  ],
  "description": "<section id=\"description\">\n<p>Replace the <code>pass</code> statement with a variable named <code>card_number</code> and a value of <code>'4111-1111-4555-1142'</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-how-to-work-with-numbers-and-strings-by-implementing-the-luhn-algorithm",
  "hasEditableBoundaries": true,
  "order": 1,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 1,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}