{
  "id": "65520f8282faf57a0db4f7fe",
  "title": "Step 21",
  "challengeType": 20,
  "dashedName": "step-21",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        8
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\nindex = alphabet.find(text[0].lower())\nprint(index)\nshifted = alphabet[index]\nprint(shifted)",
      "error": null,
      "seed": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\nindex = alphabet.find(text[0].lower())\nprint(index)\nshifted = alphabet[index]\nprint(shifted)"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should assign <code>alphabet[index + shift]</code> to your <code>shifted</code> variable.</p>",
      "testString": "assert.match(code, /^shifted\\s*=\\s*alphabet\\s*\\[\\s*(index|shift)\\s*\\+\\s*(?!\\1)(index|shift)\\s*\\]\\s*(#.*)?$/m)"
    },
    {
      "text": "<p>Your code contains invalid syntax and/or invalid indentation.</p>",
      "testString": "({test: () => assert(true) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>As you can see from the output, <code>'h'</code> is at index <code>7</code> in the <code>alphabet</code> string. Now you need to find the letter at index <code>7</code> plus the value of <code>shift</code>. For that, you can use the addition operator, <code>+</code>, in the same way you would use it for a mathematical addition.</p>\n<p>Modify your <code>shifted</code> variable so that it stores the value of <code>alphabet</code> at index <code>index + shift</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-string-manipulation-by-building-a-cipher",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 20,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}