{
  "id": "6568b7a40c7ba0ccbc4b4425",
  "title": "Step 32",
  "challengeType": 20,
  "dashedName": "step-32",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        3
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "text = 'Hello World'\ntext = 'Albatross'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\nfor char in text.lower():\n    index = alphabet.find(char)\n    print(char, index)\n    new_index = index + shift\n",
      "error": null,
      "seed": "text = 'Hello World'\ntext = 'Albatross'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\nfor char in text.lower():\n    index = alphabet.find(char)\n    print(char, index)\n    new_index = index + shift\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should not have <code>text = 'Albatross'</code> in your code.</p>",
      "testString": "const commentless_code = __helpers.python.removeComments(code);\nassert.isFalse( /text\\s*=\\s*(\"|')Albatross\\1/.test(commentless_code))"
    },
    {
      "text": "<p>You should still have a <code>text</code> variable with the value <code>'Hello World'</code>.</p>",
      "testString": "({test: () => {\n    const commentless_code = __helpers.python.removeComments(code);\n    assert.match(commentless_code, /text\\s*=\\s*(\"|')Hello World\\1/)\n  }\n})"
    }
  ],
  "description": "<section id=\"description\">\n<p>As you can see, each character of the reassigned string gets printed inside the loop.</p>\n<p>Go back to the original string by deleting the <code>text</code> reassignment.</p>\n</section>",
  "translationPending": false,
  "block": "learn-string-manipulation-by-building-a-cipher",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 31,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}