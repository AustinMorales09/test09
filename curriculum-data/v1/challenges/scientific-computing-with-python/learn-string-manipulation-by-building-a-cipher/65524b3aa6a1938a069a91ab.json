{
  "id": "65524b3aa6a1938a069a91ab",
  "title": "Step 34",
  "challengeType": 20,
  "dashedName": "step-34",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        10
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\nfor char in text.lower():\n    index = alphabet.find(char)\n    print(char, index)\n    new_index = index + shift\n    new_char = alphabet[new_index]",
      "error": null,
      "seed": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\nfor char in text.lower():\n    index = alphabet.find(char)\n    print(char, index)\n    new_index = index + shift\n    new_char = alphabet[new_index]"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should print your <code>new_char</code> variable.</p>",
      "testString": "assert.match(code, /print\\s*\\(\\s*new_char\\s*\\)/)"
    },
    {
      "text": "<p>You should print your <code>new_char</code> variable at the end of your loop body.</p>",
      "testString": "({test: () => {\n    const commentless_code = __helpers.python.removeComments(code);\n    const {block_body} = __helpers.python.getBlock(commentless_code, /for\\s+char\\s+in\\s+text\\.lower\\s*\\(\\s*\\)\\s*/);\n    assert(block_body.match(/print\\s*\\(\\s*new_char\\s*\\)\\s*$/));\n  }\n})"
    }
  ],
  "description": "<section id=\"description\">\n<p>Next, print <code>new_char</code> and see the output.</p>\n</section>",
  "translationPending": false,
  "block": "learn-string-manipulation-by-building-a-cipher",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 33,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}