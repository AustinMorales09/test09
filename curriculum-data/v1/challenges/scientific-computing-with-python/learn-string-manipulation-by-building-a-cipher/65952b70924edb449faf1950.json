{
  "id": "65952b70924edb449faf1950",
  "title": "Step 19",
  "challengeType": 20,
  "dashedName": "step-19",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        6
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\nindex = alphabet.find(text[0].lower())\nprint(index)",
      "error": null,
      "seed": "text = 'Hello World'\nshift = 3\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\nindex = alphabet.find(text[0].lower())\nprint(index)"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a variable named <code>shifted</code>. Pay attention to place the variable name at the beginning of the line.</p>",
      "testString": "assert.match(code, /^shifted\\s*=/m)"
    },
    {
      "text": "<p>You should assign <code>alphabet[index]</code> to your <code>shifted</code> variable.</p>",
      "testString": "assert.match(code, /^shifted\\s*=\\s*alphabet\\s*\\[\\s*index\\s*\\]\\s*(#.*)?$/m)"
    },
    {
      "text": "<p>Your code contains invalid syntax and/or invalid indentation.</p>",
      "testString": "({test: () => assert(true) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>Declare a new variable named <code>shifted</code>. Use the bracket notation to access the value of <code>alphabet</code> at index <code>index</code> and assign it to your new variable.</p>\n</section>",
  "translationPending": false,
  "block": "learn-string-manipulation-by-building-a-cipher",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 18,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}