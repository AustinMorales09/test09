{
  "id": "65782342850feb3b8d62f936",
  "title": "Step 18",
  "challengeType": 20,
  "dashedName": "step-18",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        8,
        16
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "NUMBER_OF_DISKS = 3\nnumber_of_moves = 2**NUMBER_OF_DISKS - 1\nrods = {\n    'A': list(range(NUMBER_OF_DISKS, 0, -1)),\n    'B': [],\n    'C': []\n}\n\ndef move(n, source, auxiliary, target):\n    # display starting configuration\n    print(rods)\n    for i in range(number_of_moves):\n        \n        if (i + 1) % 3 == 1:\n            print(f'Move {i + 1} allowed between {source} and {target}')\n\n# initiate call from source A to target C with auxiliary B\nmove(NUMBER_OF_DISKS, 'A', 'B', 'C')",
      "error": null,
      "seed": "NUMBER_OF_DISKS = 3\nnumber_of_moves = 2**NUMBER_OF_DISKS - 1\nrods = {\n    'A': list(range(NUMBER_OF_DISKS, 0, -1)),\n    'B': [],\n    'C': []\n}\n\ndef move(n, source, auxiliary, target):\n    # display starting configuration\n    print(rods)\n    for i in range(number_of_moves):\n        \n        if (i + 1) % 3 == 1:\n            print(f'Move {i + 1} allowed between {source} and {target}')\n\n# initiate call from source A to target C with auxiliary B\nmove(NUMBER_OF_DISKS, 'A', 'B', 'C')"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a <code>remainder</code> variable just above the <code>if</code> block.</p>",
      "testString": "({ test: () => assert.match(code, /^\\s{8}remainder\\s*=/m) })"
    },
    {
      "text": "<p>The value of your <code>remainder</code> variable should be the expression <code>(i + 1) % 3</code>.</p>",
      "testString": "({ test: () => assert.match(code, /^\\s{8}remainder\\s*=\\s*\\(\\s*i\\s*\\+\\s*1\\s*\\)\\s*%\\s*3/m) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>Since you are going to use the expression <code>(i + 1) % 3</code> multiple times, it is convenient to store it in a variable.</p>\n<p>Just above your <code>if</code> statement, declare a <code>remainder</code> variable and assign the value <code>(i + 1) % 3</code> to this variable.</p>\n</section>",
  "translationPending": false,
  "block": "learn-recursion-by-solving-the-tower-of-hanoi-puzzle",
  "hasEditableBoundaries": true,
  "order": 8,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 17,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}