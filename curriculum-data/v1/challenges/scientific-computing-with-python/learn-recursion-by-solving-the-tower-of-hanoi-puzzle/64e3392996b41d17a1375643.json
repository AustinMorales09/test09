{
  "id": "64e3392996b41d17a1375643",
  "title": "Step 47",
  "challengeType": 20,
  "dashedName": "step-47",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        7,
        18
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "NUMBER_OF_DISKS = 4\nrods = {\n    'A': list(range(NUMBER_OF_DISKS, 0, -1)),\n    'B': [],\n    'C': []\n}\n\ndef move(n, source, auxiliary, target):\n    if n > 0:\n        # move n - 1 disks from source to auxiliary, so they are out of the way\n        move(n - 1, source, auxiliary, target)\n        \n        rods[target].append(rods[source].pop())\n        \n        # display starting configuration\n        print(rods, '\\n')\n              \n# initiate call from source A to target C with auxiliary B\nmove(NUMBER_OF_DISKS, 'A', 'B', 'C')",
      "error": null,
      "seed": "NUMBER_OF_DISKS = 4\nrods = {\n    'A': list(range(NUMBER_OF_DISKS, 0, -1)),\n    'B': [],\n    'C': []\n}\n\ndef move(n, source, auxiliary, target):\n    if n > 0:\n        # move n - 1 disks from source to auxiliary, so they are out of the way\n        move(n - 1, source, auxiliary, target)\n        \n        rods[target].append(rods[source].pop())\n        \n        # display starting configuration\n        print(rods, '\\n')\n              \n# initiate call from source A to target C with auxiliary B\nmove(NUMBER_OF_DISKS, 'A', 'B', 'C')"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should add a comment with the provided text before <code>rods[target].append(rods[source].pop())</code>.</p>",
      "testString": "({ test: () => assert.match(code, /move\\(\\s*n\\s*-\\s*1\\s*,\\s*source\\s*,\\s*auxiliary\\s*,\\s*target\\s*\\)\\s+#\\s*move\\sthe\\snth\\sdisk\\sfrom\\ssource\\sto\\starget\\s+(?=rods\\s*\\[\\s*target\\s*\\]\\s*\\.append\\(\\s*rods\\s*\\[\\s*source\\s*\\]\\s*\\.pop\\(\\s*\\)\\s*\\))/) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>Before appending the last element to the target, add a comment saying <code>move the nth disk from source to target</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-recursion-by-solving-the-tower-of-hanoi-puzzle",
  "hasEditableBoundaries": true,
  "order": 8,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 46,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}