{
  "id": "65796fac81f983127558f3f4",
  "title": "Step 5",
  "challengeType": 20,
  "dashedName": "step-5",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        6
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "copper = {\n    'species': 'guinea pig',\n    'age': 2\n}\nprint(copper['species'])",
      "error": null,
      "seed": "copper = {\n    'species': 'guinea pig',\n    'age': 2\n}\nprint(copper['species'])"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should use <code>copper['age']</code> to access the value of the <code>age</code> key.</p>",
      "testString": "({ test: () => assert.match(code, /copper\\s*\\[\\s*(\"|')age\\1\\s*\\]/) })"
    },
    {
      "text": "<p>You should call <code>print()</code> passing <code>copper['age']</code> as argument.</p>",
      "testString": "({ test: () => assert.match(code, /^print\\(\\s*copper\\s*\\[\\s*(\"|')age\\1\\s*\\]\\s*\\)/m) })"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now, modify your existing <code>print()</code> call to print the value of the <code>age</code> key.</p>\n</section>",
  "translationPending": false,
  "block": "learn-algorithm-design-by-building-a-shortest-path-algorithm",
  "hasEditableBoundaries": true,
  "order": 7,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 4,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}