{
  "id": "65646ab6bced52360f44670f",
  "title": "Step 5",
  "challengeType": 20,
  "dashedName": "step-5",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        7,
        9
      ],
      "history": [
        "main.py"
      ],
      "name": "main",
      "ext": "py",
      "path": "main.py",
      "fileKey": "mainpy",
      "contents": "import string\n\n\n# Define the possible characters for the password\nletters = string.ascii_letters\ndigits = string.digits\nsymbols = string.punctuation\n",
      "error": null,
      "seed": "import string\n\n\n# Define the possible characters for the password\nletters = string.ascii_letters\ndigits = string.digits\nsymbols = string.punctuation\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should declare a variable named <code>all_characters</code>.</p>",
      "testString": "({ test: () => assert(__userGlobals.has(\"all_characters\")) })"
    },
    {
      "text": "<p>You should concatenate <code>letters</code>, <code>digits</code>, and <code>symbols</code> and assign the result to your <code>all_characters</code> variable.</p>",
      "testString": "({ test: () => assert(runPython(`\n    import string\n    from itertools import permutations\n    perms = permutations([string.ascii_letters, string.digits, string.punctuation])\n    any(\"\".join(perm) == all_characters for perm in perms)\n  `))\n})"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now declare a variable named <code>all_characters</code> and assign it the result of concatenating your existing variables.</p>\n</section>",
  "translationPending": false,
  "block": "learn-regular-expressions-by-building-a-password-generator",
  "hasEditableBoundaries": true,
  "order": 6,
  "superOrder": 7,
  "certification": "scientific-computing-with-python",
  "superBlock": "scientific-computing-with-python",
  "challengeOrder": 4,
  "required": [],
  "helpCategory": "Python",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}