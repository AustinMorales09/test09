{
  "id": "648acb0745e79f79650fa2ac",
  "title": "The Cascade of CSS Question H",
  "challengeType": 15,
  "dashedName": "the-cascade-of-css-question-h",
  "solutions": [],
  "question": {
    "text": "<p>What determines which CSS rule is applied when there are conflicting rules targeting the same element?</p>",
    "answers": [
      {
        "answer": "<p>The specificity of the CSS rule.</p>",
        "feedback": null
      },
      {
        "answer": "<p>The inheritance hierarchy of the element.</p>",
        "feedback": null
      },
      {
        "answer": "<p>The presence of classes or IDs on the element.</p>",
        "feedback": null
      },
      {
        "answer": "<p>The order in which the rules were defined.</p>",
        "feedback": null
      }
    ],
    "solution": 4
  },
  "assignments": [],
  "tests": [],
  "description": "<section id=\"description\">\n<p>The final factor, the end of the line, the tie-breaker of the tie-breaker. Let’s say that after every other factor has been taken into account, there are still multiple conflicting rules targeting an element. How does the cascade determine which rule to apply?</p>\n<p>Really simply, actually. Whichever rule was the last defined is the winner.</p>\n<pre><code class=\"language-css\">/* styles.css */\n\n.alert {\n  color: red;\n}\n\n.warning {\n  color: yellow;\n}\n</code></pre>\n<p>For an element that has both the <code>alert</code> and <code>warning</code> classes, the cascade would run through every other factor, including inheritance (none here) and specificity (neither rule is more specific than the other). Since the <code>.warning</code> rule was the last one defined, and no other factor was able to determine which rule to apply, it’s the one that gets applied to the element.</p>\n</section>",
  "translationPending": false,
  "block": "top-learn-css-specificity",
  "hasEditableBoundaries": false,
  "order": 6,
  "superOrder": 14,
  "certification": "the-odin-project",
  "superBlock": "the-odin-project",
  "challengeOrder": 7,
  "required": [],
  "helpCategory": "Odin",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}