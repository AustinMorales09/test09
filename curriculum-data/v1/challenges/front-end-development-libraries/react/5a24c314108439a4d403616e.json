{
  "id": "5a24c314108439a4d403616e",
  "title": "Access Props Using this.props",
  "challengeType": 6,
  "forumTopicId": 301375,
  "dashedName": "access-props-using-this-props",
  "challengeFiles": [
    {
      "head": "",
      "tail": "ReactDOM.render(<App />, document.getElementById('root'))",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.jsx"
      ],
      "name": "index",
      "ext": "jsx",
      "path": "index.jsx",
      "fileKey": "indexjsx",
      "contents": "class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n            { /* Change code below this line */ }\n            <Welcome />\n            { /* Change code above this line */ }\n        </div>\n    );\n  }\n};\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n          { /* Change code below this line */ }\n          <p>Hello, <strong></strong>!</p>\n          { /* Change code above this line */ }\n        </div>\n    );\n  }\n};",
      "error": null,
      "seed": "class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n            { /* Change code below this line */ }\n            <Welcome />\n            { /* Change code above this line */ }\n        </div>\n    );\n  }\n};\n\nclass Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n          { /* Change code below this line */ }\n          <p>Hello, <strong></strong>!</p>\n          { /* Change code above this line */ }\n        </div>\n    );\n  }\n};"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.jsx"
        ],
        "name": "index",
        "ext": "jsx",
        "path": "index.jsx",
        "fileKey": "indexjsx",
        "contents": "class Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n          { /* Change code below this line */ }\n          <p>Hello, <strong>{this.props.name}</strong>!</p>\n          { /* Change code above this line */ }\n        </div>\n    );\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n            { /* Change code below this line */ }\n            <Welcome name=\"Quincy\"/>\n            { /* Change code above this line */ }\n        </div>\n    );\n  }\n};",
        "error": null,
        "seed": "class Welcome extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n          { /* Change code below this line */ }\n          <p>Hello, <strong>{this.props.name}</strong>!</p>\n          { /* Change code above this line */ }\n        </div>\n    );\n  }\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n        <div>\n            { /* Change code below this line */ }\n            <Welcome name=\"Quincy\"/>\n            { /* Change code above this line */ }\n        </div>\n    );\n  }\n};"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The <code>App</code> component should return a single <code>div</code> element.</p>",
      "testString": "assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return mockedComponent.children().type() === 'div';\n  })()\n);"
    },
    {
      "text": "<p>The child of <code>App</code> should be the <code>Welcome</code> component.</p>",
      "testString": "assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return (\n      mockedComponent.children().childAt(0).name() === 'Welcome'\n    );\n  })()\n);"
    },
    {
      "text": "<p>The <code>Welcome</code> component should have a prop called <code>name</code>.</p>",
      "testString": "assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return mockedComponent.find('Welcome').props().name;\n  })()\n);"
    },
    {
      "text": "<p>The <code>Welcome</code> component should display the string you pass as the <code>name</code> prop within <code>strong</code> tags.</p>",
      "testString": "assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(App));\n    return (\n      mockedComponent.find('strong').text() ===\n      mockedComponent.find('Welcome').props().name\n    );\n  })()\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last several challenges covered the basic ways to pass props to child components. But what if the child component that you're passing a prop to is an ES6 class component, rather than a stateless functional component? The ES6 class component uses a slightly different convention to access props.</p>\n<p>Anytime you refer to a class component within itself, you use the <code>this</code> keyword. To access props within a class component, you preface the code that you use to access it with <code>this</code>. For example, if an ES6 class component has a prop called <code>data</code>, you write <code>{this.props.data}</code> in JSX.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Render an instance of the <code>Welcome</code> component in the parent component <code>App</code>. Here, give <code>Welcome</code> a prop of <code>name</code> and assign it a value of a string. Within the child, <code>Welcome</code>, access the <code>name</code> prop within the <code>strong</code> tags.</p>\n</section>",
  "translationPending": false,
  "block": "react",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 18,
  "required": [
    {
      "src": "https://unpkg.com/react@16.4.0/umd/react.production.min.js"
    },
    {
      "src": "https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"
    }
  ],
  "template": "<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>",
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}