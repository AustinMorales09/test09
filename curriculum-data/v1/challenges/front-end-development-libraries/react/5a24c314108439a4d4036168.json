{
  "id": "5a24c314108439a4d4036168",
  "title": "Write a React Component from Scratch",
  "challengeType": 6,
  "forumTopicId": 301424,
  "dashedName": "write-a-react-component-from-scratch",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.jsx"
      ],
      "name": "index",
      "ext": "jsx",
      "path": "index.jsx",
      "fileKey": "indexjsx",
      "contents": "// Change code below this line",
      "error": null,
      "seed": "// Change code below this line"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.jsx"
        ],
        "name": "index",
        "ext": "jsx",
        "path": "index.jsx",
        "fileKey": "indexjsx",
        "contents": "// Change code below this line\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h1>My First React Component!</h1>\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<MyComponent />, document.getElementById('challenge-node'));",
        "error": null,
        "seed": "// Change code below this line\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <h1>My First React Component!</h1>\n      </div>\n    );\n  }\n};\n\nReactDOM.render(<MyComponent />, document.getElementById('challenge-node'));"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>There should be a React component called <code>MyComponent</code>.</p>",
      "testString": "(getUserInput) =>\n  assert(\n    __helpers\n      .removeWhiteSpace(getUserInput('index'))\n      .includes('classMyComponentextendsReact.Component{')\n  );"
    },
    {
      "text": "<p><code>MyComponent</code> should contain an <code>h1</code> tag with text <code>My First React Component!</code> Case and punctuation matter.</p>",
      "testString": "assert(\n  (function () {\n    const mockedComponent = Enzyme.mount(React.createElement(MyComponent));\n    return mockedComponent.find('h1').text() === 'My First React Component!';\n  })()\n);"
    },
    {
      "text": "<p><code>MyComponent</code> should render to the DOM.</p>",
      "testString": "assert(document.getElementById('challenge-node').childNodes.length === 1);"
    },
    {
      "text": "<p><code>MyComponent</code> should have a constructor calling <code>super</code> with <code>props</code>.</p>",
      "testString": "assert(\n  MyComponent.toString().includes('MyComponent(props)') &&\n    MyComponent.toString().includes('_super.call(this, props)')\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Now that you've learned the basics of JSX and React components, it's time to write a component on your own. React components are the core building blocks of React applications so it's important to become very familiar with writing them. Remember, a typical React component is an ES6 <code>class</code> which extends <code>React.Component</code>. It has a render method that returns HTML (from JSX) or <code>null</code>. This is the basic form of a React component. Once you understand this well, you will be prepared to start building more complex React projects.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Define a class <code>MyComponent</code> that extends <code>React.Component</code>. Its render method should return a <code>div</code> that contains an <code>h1</code> tag with the text: <code>My First React Component!</code> in it. Use this text exactly, the case and punctuation matter. Make sure to call the constructor for your component, too.</p>\n<p>Render this component to the DOM using <code>ReactDOM.render()</code>. There is a <code>div</code> with <code>id='challenge-node'</code> available for you to use.</p>\n</section>",
  "translationPending": false,
  "block": "react",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 12,
  "required": [
    {
      "src": "https://unpkg.com/react@16.4.0/umd/react.production.min.js"
    },
    {
      "src": "https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"
    }
  ],
  "template": "<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>",
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}