{
  "id": "5a24c314108439a4d4036161",
  "title": "Learn About Self-Closing JSX Tags",
  "challengeType": 6,
  "forumTopicId": 301396,
  "dashedName": "learn-about-self-closing-jsx-tags",
  "challengeFiles": [
    {
      "head": "",
      "tail": "ReactDOM.render(JSX, document.getElementById('root'))",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.jsx"
      ],
      "name": "index",
      "ext": "jsx",
      "path": "index.jsx",
      "fileKey": "indexjsx",
      "contents": "const JSX = (\n  <div>\n    <h2>Welcome to React!</h2> <br >\n    <p>Be sure to close all tags!</p>\n    <hr >\n  </div>\n);",
      "error": null,
      "seed": "const JSX = (\n  <div>\n    <h2>Welcome to React!</h2> <br >\n    <p>Be sure to close all tags!</p>\n    <hr >\n  </div>\n);"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.jsx"
        ],
        "name": "index",
        "ext": "jsx",
        "path": "index.jsx",
        "fileKey": "indexjsx",
        "contents": "const JSX = (\n<div>\n  <h2>Welcome to React!</h2> <br />\n  <p>Be sure to close all tags!</p>\n  <hr />\n</div>\n);",
        "error": null,
        "seed": "const JSX = (\n<div>\n  <h2>Welcome to React!</h2> <br />\n  <p>Be sure to close all tags!</p>\n  <hr />\n</div>\n);"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The constant <code>JSX</code> should return a <code>div</code> element.</p>",
      "testString": "assert.strictEqual(JSX.type, 'div');"
    },
    {
      "text": "<p>The <code>div</code> should contain a <code>br</code> tag.</p>",
      "testString": "assert(Enzyme.shallow(JSX).find('br').length === 1);"
    },
    {
      "text": "<p>The <code>div</code> should contain an <code>hr</code> tag.</p>",
      "testString": "assert(Enzyme.shallow(JSX).find('hr').length === 1);"
    }
  ],
  "description": "<section id=\"description\">\n<p>So far, you’ve seen how JSX differs from HTML in a key way with the use of <code>className</code> vs. <code>class</code> for defining HTML classes.</p>\n<p>Another important way in which JSX differs from HTML is in the idea of the self-closing tag.</p>\n<p>In HTML, almost all tags have both an opening and closing tag: <code>&#x3C;div>&#x3C;/div></code>; the closing tag always has a forward slash before the tag name that you are closing. However, there are special instances in HTML called “self-closing tags”, or tags that don’t require both an opening and closing tag before another tag can start.</p>\n<p>For example the line-break tag can be written as <code>&#x3C;br></code> or as <code>&#x3C;br /></code>, but should never be written as <code>&#x3C;br>&#x3C;/br></code>, since it doesn't contain any content.</p>\n<p>In JSX, the rules are a little different. Any JSX element can be written with a self-closing tag, and every element must be closed. The line-break tag, for example, must always be written as <code>&#x3C;br /></code> in order to be valid JSX that can be transpiled. A <code>&#x3C;div></code>, on the other hand, can be written as <code>&#x3C;div /></code> or <code>&#x3C;div>&#x3C;/div></code>. The difference is that in the first syntax version there is no way to include anything in the <code>&#x3C;div /></code>. You will see in later challenges that this syntax is useful when rendering React components.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Fix the errors in the code editor so that it is valid JSX and successfully transpiles. Make sure you don't change any of the content - you only need to close tags where they are needed.</p>\n</section>",
  "translationPending": false,
  "block": "react",
  "hasEditableBoundaries": false,
  "order": 3,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 5,
  "required": [
    {
      "src": "https://unpkg.com/react@16.4.0/umd/react.production.min.js"
    },
    {
      "src": "https://unpkg.com/react-dom@16.4.0/umd/react-dom.production.min.js"
    }
  ],
  "template": "<body><div id='root'></div><div id='challenge-node'></div>${ source || '' }</body>",
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}