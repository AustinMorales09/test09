{
  "id": "587d7dbf367417b2b2512bbc",
  "title": "Split Your Styles into Smaller Chunks with Partials",
  "challengeType": 0,
  "forumTopicId": 301459,
  "dashedName": "split-your-styles-into-smaller-chunks-with-partials",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!-- The main.scss file -->",
      "error": null,
      "seed": "<!-- The main.scss file -->"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "@import 'variables'",
        "error": null,
        "seed": "@import 'variables'"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use the <code>@import</code> directive, and should not include the underscore in the file name.</p>",
      "testString": "assert(code.match(/@import\\s+?('|\")variables\\1/gi));"
    }
  ],
  "description": "<section id=\"description\">\n<p><dfn>Partials</dfn> in Sass are separate files that hold segments of CSS code. These are imported and used in other Sass files. This is a great way to group similar code into a module to keep it organized.</p>\n<p>Names for partials start with the underscore (<code>_</code>) character, which tells Sass it is a small segment of CSS and not to convert it into a CSS file. Also, Sass files end with the <code>.scss</code> file extension. To bring the code in the partial into another Sass file, use the <code>@import</code> directive.</p>\n<p>For example, if all your mixins are saved in a partial named \"_mixins.scss\", and they are needed in the \"main.scss\" file, this is how to use them in the main file:</p>\n<pre><code class=\"language-scss\">@import 'mixins'\n</code></pre>\n<p>Note that the underscore and file extension are not needed in the <code>import</code> statement - Sass understands it is a partial. Once a partial is imported into a file, all variables, mixins, and other code are available to use.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Write an <code>@import</code> statement to import a partial named <code>_variables.scss</code> into the main.scss file.</p>\n</section>",
  "translationPending": false,
  "block": "sass",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 7,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}