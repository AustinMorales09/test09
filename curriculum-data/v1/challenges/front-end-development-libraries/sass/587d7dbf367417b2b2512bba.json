{
  "id": "587d7dbf367417b2b2512bba",
  "title": "Use @each to Map Over Items in a List",
  "challengeType": 0,
  "forumTopicId": 301461,
  "dashedName": "use-each-to-map-over-items-in-a-list",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style type='text/scss'>\n\n\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>",
      "error": null,
      "seed": "<style type='text/scss'>\n\n\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style type='text/scss'>\n\n  @each $color in blue, black, red {\n    .#{$color}-bg {background-color: $color;}\n  }\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>",
        "error": null,
        "seed": "<style type='text/scss'>\n\n  @each $color in blue, black, red {\n    .#{$color}-bg {background-color: $color;}\n  }\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>"
      }
    ],
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style type='text/scss'>\n\n  $colors: (color1: blue, color2: black, color3: red);\n\n  @each $key, $color in $colors {\n    .#{$color}-bg {background-color: $color;}\n  }\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>",
        "error": null,
        "seed": "<style type='text/scss'>\n\n  $colors: (color1: blue, color2: black, color3: red);\n\n  @each $key, $color in $colors {\n    .#{$color}-bg {background-color: $color;}\n  }\n\n  div {\n    height: 200px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"blue-bg\"></div>\n<div class=\"black-bg\"></div>\n<div class=\"red-bg\"></div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use the <code>@each</code> directive.</p>",
      "testString": "assert(code.match(/@each /g));"
    },
    {
      "text": "<p>Your <code>.blue-bg</code> class should have a <code>background-color</code> of blue.</p>",
      "testString": "assert($('.blue-bg').css('background-color') == 'rgb(0, 0, 255)');"
    },
    {
      "text": "<p>Your <code>.black-bg</code> class should have a <code>background-color</code> of black.</p>",
      "testString": "assert($('.black-bg').css('background-color') == 'rgb(0, 0, 0)');"
    },
    {
      "text": "<p>Your <code>.red-bg</code> class should have a <code>background-color</code> of red.</p>",
      "testString": "assert($('.red-bg').css('background-color') == 'rgb(255, 0, 0)');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last challenge showed how the <code>@for</code> directive uses a starting and ending value to loop a certain number of times. Sass also offers the <code>@each</code> directive which loops over each item in a list or map. On each iteration, the variable gets assigned to the current value from the list or map.</p>\n<pre><code class=\"language-scss\">@each $color in blue, red, green {\n  .#{$color}-text {color: $color;}\n}\n</code></pre>\n<p>A map has slightly different syntax. Here's an example:</p>\n<pre><code class=\"language-scss\">$colors: (color1: blue, color2: red, color3: green);\n\n@each $key, $color in $colors {\n  .#{$color}-text {color: $color;}\n}\n</code></pre>\n<p>Note that the <code>$key</code> variable is needed to reference the keys in the map. Otherwise, the compiled CSS would have <code>color1</code>, <code>color2</code>... in it. Both of the above code examples are converted into the following CSS:</p>\n<pre><code class=\"language-scss\">.blue-text {\n  color: blue;\n}\n\n.red-text {\n  color: red;\n}\n\n.green-text {\n  color: green;\n}\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Write an <code>@each</code> directive that goes through a list: <code>blue, black, red</code> and assigns each variable to a <code>.color-bg</code> class, where the <code>color</code> part changes for each item to the respective color. Each class should set the <code>background-color</code> to the respective color as well.</p>\n</section>",
  "translationPending": false,
  "block": "sass",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 5,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}