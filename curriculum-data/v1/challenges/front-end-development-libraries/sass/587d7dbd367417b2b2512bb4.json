{
  "id": "587d7dbd367417b2b2512bb4",
  "title": "Store Data with Sass Variables",
  "challengeType": 0,
  "forumTopicId": 301460,
  "dashedName": "store-data-with-sass-variables",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style type='text/scss'>\n\n\n  .header{\n    text-align: center;\n  }\n  .blog-post, h2 {\n    color: red;\n  }\n</style>\n\n<h1 class=\"header\">Learn Sass</h1>\n<div class=\"blog-post\">\n  <h2>Some random title</h2>\n  <p>This is a paragraph with some random text in it</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Header #2</h2>\n  <p>Here is some more random text.</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Here is another header</h2>\n  <p>Even more random text within a paragraph</p>\n</div>",
      "error": null,
      "seed": "<style type='text/scss'>\n\n\n  .header{\n    text-align: center;\n  }\n  .blog-post, h2 {\n    color: red;\n  }\n</style>\n\n<h1 class=\"header\">Learn Sass</h1>\n<div class=\"blog-post\">\n  <h2>Some random title</h2>\n  <p>This is a paragraph with some random text in it</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Header #2</h2>\n  <p>Here is some more random text.</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Here is another header</h2>\n  <p>Even more random text within a paragraph</p>\n</div>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style type='text/scss'>\n  $text-color: red;\n\n  .header{\n    text-align: center;\n  }\n  .blog-post, h2 {\n    color: $text-color;\n  }\n</style>\n\n<h1 class=\"header\">Learn Sass</h1>\n<div class=\"blog-post\">\n  <h2>Some random title</h2>\n  <p>This is a paragraph with some random text in it</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Header #2</h2>\n  <p>Here is some more random text.</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Here is another header</h2>\n  <p>Even more random text within a paragraph</p>\n</div>",
        "error": null,
        "seed": "<style type='text/scss'>\n  $text-color: red;\n\n  .header{\n    text-align: center;\n  }\n  .blog-post, h2 {\n    color: $text-color;\n  }\n</style>\n\n<h1 class=\"header\">Learn Sass</h1>\n<div class=\"blog-post\">\n  <h2>Some random title</h2>\n  <p>This is a paragraph with some random text in it</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Header #2</h2>\n  <p>Here is some more random text.</p>\n</div>\n<div class=\"blog-post\">\n  <h2>Here is another header</h2>\n  <p>Even more random text within a paragraph</p>\n</div>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should have a Sass variable declared for <code>$text-color</code> with a value of <code>red</code>.</p>",
      "testString": "assert(code.match(/\\$text-color\\s*:\\s*?red\\s*;/g));"
    },
    {
      "text": "<p>Your code should use the <code>$text-color</code> variable to change the <code>color</code> for the <code>.blog-post</code> and <code>h2</code> items.</p>",
      "testString": "assert(code.match(/color\\s*:\\s*\\$text-color\\s*;?/g));"
    },
    {
      "text": "<p>Your <code>.blog-post</code> element should have a <code>color</code> of red.</p>",
      "testString": "assert($('.blog-post').css('color') == 'rgb(255, 0, 0)');"
    },
    {
      "text": "<p>Your <code>h2</code> elements should have a <code>color</code> of red.</p>",
      "testString": "assert($('h2').css('color') == 'rgb(255, 0, 0)');"
    }
  ],
  "description": "<section id=\"description\">\n<p>One feature of Sass that's different than CSS is it uses variables. They are declared and set to store data, similar to JavaScript.</p>\n<p>In JavaScript, variables are defined using the <code>let</code> and <code>const</code> keywords. In Sass, variables start with a <code>$</code> followed by the variable name.</p>\n<p>Here are a couple examples:</p>\n<pre><code class=\"language-scss\">$main-fonts: Arial, sans-serif;\n$headings-color: green;\n</code></pre>\n<p>And to use the variables:</p>\n<pre><code class=\"language-scss\">h1 {\n  font-family: $main-fonts;\n  color: $headings-color;\n}\n</code></pre>\n<p>One example where variables are useful is when a number of elements need to be the same color. If that color is changed, the only place to edit the code is the variable value.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Create a variable <code>$text-color</code> and set it to <code>red</code>. Then change the value of the <code>color</code> property for the <code>.blog-post</code> and <code>h2</code> to the <code>$text-color</code> variable.</p>\n</section>",
  "translationPending": false,
  "block": "sass",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 0,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}