{
  "id": "587d7dbf367417b2b2512bbb",
  "title": "Apply a Style Until a Condition is Met with @while",
  "challengeType": 0,
  "forumTopicId": 301454,
  "dashedName": "apply-a-style-until-a-condition-is-met-with-while",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style type='text/scss'>\n\n\n\n</style>\n\n<p class=\"text-1\">Hello</p>\n<p class=\"text-2\">Hello</p>\n<p class=\"text-3\">Hello</p>\n<p class=\"text-4\">Hello</p>\n<p class=\"text-5\">Hello</p>",
      "error": null,
      "seed": "<style type='text/scss'>\n\n\n\n</style>\n\n<p class=\"text-1\">Hello</p>\n<p class=\"text-2\">Hello</p>\n<p class=\"text-3\">Hello</p>\n<p class=\"text-4\">Hello</p>\n<p class=\"text-5\">Hello</p>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style type='text/scss'>\n  $x: 1;\n  @while $x < 6 {\n    .text-#{$x}{\n      font-size: 15px * $x;\n    }\n    $x: $x + 1;\n  }\n</style>\n\n<p class=\"text-1\">Hello</p>\n<p class=\"text-2\">Hello</p>\n<p class=\"text-3\">Hello</p>\n<p class=\"text-4\">Hello</p>\n<p class=\"text-5\">Hello</p>",
        "error": null,
        "seed": "<style type='text/scss'>\n  $x: 1;\n  @while $x < 6 {\n    .text-#{$x}{\n      font-size: 15px * $x;\n    }\n    $x: $x + 1;\n  }\n</style>\n\n<p class=\"text-1\">Hello</p>\n<p class=\"text-2\">Hello</p>\n<p class=\"text-3\">Hello</p>\n<p class=\"text-4\">Hello</p>\n<p class=\"text-5\">Hello</p>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should use the <code>@while</code> directive.</p>",
      "testString": "assert(code.match(/@while /g));"
    },
    {
      "text": "<p>Your code should use an index variable which starts at an index of 1.</p>",
      "testString": "assert(code.match(/\\$.*:\\s*?1;/gi));"
    },
    {
      "text": "<p>Your code should increment the counter variable.</p>",
      "testString": "assert(code.match(/\\$(.*)\\s*?:\\s*\\$\\1\\s*\\+\\s*1\\s*;/gi));"
    },
    {
      "text": "<p>Your <code>.text-1</code> class should have a <code>font-size</code> of <code>15px</code>.</p>",
      "testString": "assert($('.text-1').css('font-size') == '15px');"
    },
    {
      "text": "<p>Your <code>.text-2</code> class should have a <code>font-size</code> of <code>30px</code>.</p>",
      "testString": "assert($('.text-2').css('font-size') == '30px');"
    },
    {
      "text": "<p>Your <code>.text-3</code> class should have a <code>font-size</code> of <code>45px</code>.</p>",
      "testString": "assert($('.text-3').css('font-size') == '45px');"
    },
    {
      "text": "<p>Your <code>.text-4</code> class should have a <code>font-size</code> of <code>60px</code>.</p>",
      "testString": "assert($('.text-4').css('font-size') == '60px');"
    },
    {
      "text": "<p>Your <code>.text-5</code> class should have a <code>font-size</code> of <code>75px</code>.</p>",
      "testString": "assert($('.text-5').css('font-size') == '75px');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <code>@while</code> directive is an option with similar functionality to the JavaScript <code>while</code> loop. It creates CSS rules until a condition is met.</p>\n<p>The <code>@for</code> challenge gave an example to create a simple grid system. This can also work with <code>@while</code>.</p>\n<pre><code class=\"language-scss\">$x: 1;\n@while $x &#x3C; 13 {\n  .col-#{$x} { width: 100%/12 * $x;}\n  $x: $x + 1;\n}\n</code></pre>\n<p>First, define a variable <code>$x</code> and set it to 1. Next, use the <code>@while</code> directive to create the grid system <em>while</em> <code>$x</code> is less than 13. After setting the CSS rule for <code>width</code>, <code>$x</code> is incremented by 1 to avoid an infinite loop.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Use <code>@while</code> to create a series of classes with different <code>font-sizes</code>.</p>\n<p>There should be 5 different classes from <code>text-1</code> to <code>text-5</code>. Then set <code>font-size</code> to <code>15px</code> multiplied by the current index number. Make sure to avoid an infinite loop!</p>\n</section>",
  "translationPending": false,
  "block": "sass",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 2,
  "certification": "front-end-development-libraries",
  "superBlock": "front-end-development-libraries",
  "challengeOrder": 6,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}