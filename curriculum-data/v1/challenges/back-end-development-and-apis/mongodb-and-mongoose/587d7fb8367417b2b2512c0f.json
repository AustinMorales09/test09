{
  "id": "587d7fb8367417b2b2512c0f",
  "title": "Perform New Updates on a Document Using model.findOneAndUpdate()",
  "challengeType": 2,
  "forumTopicId": 301542,
  "dashedName": "perform-new-updates-on-a-document-using-model-findoneandupdate",
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>findOneAndUpdate an item should succeed</p>",
      "testString": "(getUserInput) =>\n  $.post(getUserInput('url') + '/_api/find-one-update', {\n    name: 'Dorian Gray',\n    age: 35,\n    favoriteFoods: ['unknown']\n  }).then(\n    (data) => {\n      assert.equal(data.name, 'Dorian Gray', 'item.name is not what expected');\n      assert.equal(data.age, 20, 'item.age is not what expected');\n      assert.deepEqual(\n        data.favoriteFoods,\n        ['unknown'],\n        'item.favoriteFoods is not what expected'\n      );\n      assert.equal(\n        data.__v,\n        0,\n        'findOneAndUpdate does not increment version by design!'\n      );\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"
    }
  ],
  "description": "<section id=\"description\">\n<p>Recent versions of Mongoose have methods to simplify documents updating. Some more advanced features (i.e. pre/post hooks, validation) behave differently with this approach, so the classic method is still useful in many situations. <code>findByIdAndUpdate()</code> can be used when searching by id.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify the <code>findAndUpdate</code> function to find a person by <code>Name</code> and set the person's age to <code>20</code>. Use the function parameter <code>personName</code> as the search key.</p>\n<p><strong>Note:</strong> You should return the updated document. To do that, you need to pass the options document <code>{ new: true }</code> as the 3rd argument to <code>findOneAndUpdate()</code>. By default, these methods return the unmodified object.</p>\n</section>",
  "translationPending": false,
  "block": "mongodb-and-mongoose",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 5,
  "certification": "back-end-development-and-apis",
  "superBlock": "back-end-development-and-apis",
  "challengeOrder": 8,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}