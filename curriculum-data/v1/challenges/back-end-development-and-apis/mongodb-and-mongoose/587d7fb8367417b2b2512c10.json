{
  "id": "587d7fb8367417b2b2512c10",
  "title": "Delete One Document Using model.findByIdAndRemove",
  "challengeType": 2,
  "forumTopicId": 301539,
  "dashedName": "delete-one-document-using-model-findbyidandremove",
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Deleting an item should succeed</p>",
      "testString": "(getUserInput) =>\n  $.post(getUserInput('url') + '/_api/remove-one-person', {\n    name: 'Jason Bourne',\n    age: 36,\n    favoriteFoods: ['apples']\n  }).then(\n    (data) => {\n      assert.equal(data.name, 'Jason Bourne', 'item.name is not what expected');\n      assert.equal(data.age, 36, 'item.age is not what expected');\n      assert.deepEqual(\n        data.favoriteFoods,\n        ['apples'],\n        'item.favoriteFoods is not what expected'\n      );\n      assert.equal(data.__v, 0);\n      assert.equal(data.count, 0, 'the db items count is not what expected');\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"
    }
  ],
  "description": "<section id=\"description\">\n<p><code>findByIdAndRemove</code> and <code>findOneAndRemove</code> are like the previous update methods. They pass the removed document to the db. As usual, use the function argument <code>personId</code> as the search key.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Modify the <code>removeById</code> function to delete one person by the person's <code>_id</code>. You should use one of the methods <code>findByIdAndRemove()</code> or <code>findOneAndRemove()</code>.</p>\n</section>",
  "translationPending": false,
  "block": "mongodb-and-mongoose",
  "hasEditableBoundaries": false,
  "order": 2,
  "superOrder": 5,
  "certification": "back-end-development-and-apis",
  "superBlock": "back-end-development-and-apis",
  "challengeOrder": 9,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}