{
  "id": "587d7fb0367417b2b2512bf0",
  "title": "Serve Static Assets",
  "challengeType": 2,
  "forumTopicId": 301518,
  "dashedName": "serve-static-assets",
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your app should serve asset files from the <code>/public</code> directory to the <code>/public</code> path</p>",
      "testString": "(getUserInput) =>\n  $.get(getUserInput('url') + '/public/style.css').then(\n    (data) => {\n      assert.match(\n        data,\n        /body\\s*\\{[^\\}]*\\}/,\n        'Your app does not serve static assets'\n      );\n    },\n    (xhr) => {\n      throw new Error(xhr.responseText);\n    }\n  );"
    },
    {
      "text": "<p>Your app should not serve files from any other folders except from <code>/public</code> directory</p>",
      "testString": "(getUserInput) =>\n  $.get(getUserInput('url') + '/server.js').then(\n    (data) => {\n       assert.equal(\n        data?.status + '',\n        404 + '',\n        'Your app must serve files only from \"public\" directory'\n      );\n    },\n    (xhr) => {\n      assert.equal(\n        xhr?.status + '',\n        404 + '',\n        'Your app must serve files only from \"public\" directory'\n      );\n    }\n  );"
    }
  ],
  "description": "<section id=\"description\">\n<p>An HTML server usually has one or more directories that are accessible by the user. You can place there the static assets needed by your application (stylesheets, scripts, images).</p>\n<p>In Express, you can put in place this functionality using the middleware <code>express.static(path)</code>, where the <code>path</code> parameter is the absolute path of the folder containing the assets.</p>\n<p>If you don’t know what middleware is... don’t worry, we will discuss in detail later. Basically, middleware are functions that intercept route handlers, adding some kind of information. A middleware needs to be mounted using the method <code>app.use(path, middlewareFunction)</code>. The first <code>path</code> argument is optional. If you don’t pass it, the middleware will be executed for all requests.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Mount the <code>express.static()</code> middleware to the path <code>/public</code> with <code>app.use()</code>. The absolute path to the assets folder is <code>__dirname + /public</code>.</p>\n<p>Now your app should be able to serve a CSS stylesheet. Note that the <code>/public/style.css</code> file is referenced in the <code>/views/index.html</code> in the project boilerplate. Your front-page should look a little better now!</p>\n</section>",
  "translationPending": false,
  "block": "basic-node-and-express",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 5,
  "certification": "back-end-development-and-apis",
  "superBlock": "back-end-development-and-apis",
  "challengeOrder": 3,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}