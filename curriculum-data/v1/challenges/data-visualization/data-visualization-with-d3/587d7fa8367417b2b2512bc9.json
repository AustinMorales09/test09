{
  "id": "587d7fa8367417b2b2512bc9",
  "title": "Update the Height of an Element Dynamically",
  "challengeType": 6,
  "forumTopicId": 301493,
  "dashedName": "update-the-height-of-an-element-dynamically",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"div\")\n      .data(dataset)\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"bar\")\n      // Add your code below this line\n\n\n\n      // Add your code above this line\n  </script>\n</body>",
      "error": null,
      "seed": "<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"div\")\n      .data(dataset)\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"bar\")\n      // Add your code below this line\n\n\n\n      // Add your code above this line\n  </script>\n</body>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"div\")\n      .data(dataset)\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"bar\")\n      .style('height', d => `${d}px`)\n  </script>\n</body>",
        "error": null,
        "seed": "<style>\n  .bar {\n    width: 25px;\n    height: 100px;\n    display: inline-block;\n    background-color: blue;\n  }\n</style>\n<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    d3.select(\"body\").selectAll(\"div\")\n      .data(dataset)\n      .enter()\n      .append(\"div\")\n      .attr(\"class\", \"bar\")\n      .style('height', d => `${d}px`)\n  </script>\n</body>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The first <code>div</code> should have a <code>height</code> of <code>12</code> pixels.</p>",
      "testString": "assert($('div').eq(0)[0].style.height === '12px');"
    },
    {
      "text": "<p>The second <code>div</code> should have a <code>height</code> of <code>31</code> pixels.</p>",
      "testString": "assert($('div').eq(1)[0].style.height === '31px');"
    },
    {
      "text": "<p>The third <code>div</code> should have a <code>height</code> of <code>22</code> pixels.</p>",
      "testString": "assert($('div').eq(2)[0].style.height === '22px');"
    },
    {
      "text": "<p>The fourth <code>div</code> should have a <code>height</code> of <code>17</code> pixels.</p>",
      "testString": "assert($('div').eq(3)[0].style.height === '17px');"
    },
    {
      "text": "<p>The fifth <code>div</code> should have a <code>height</code> of <code>25</code> pixels.</p>",
      "testString": "assert($('div').eq(4)[0].style.height === '25px');"
    },
    {
      "text": "<p>The sixth <code>div</code> should have a <code>height</code> of <code>18</code> pixels.</p>",
      "testString": "assert($('div').eq(5)[0].style.height === '18px');"
    },
    {
      "text": "<p>The seventh <code>div</code> should have a <code>height</code> of <code>29</code> pixels.</p>",
      "testString": "assert($('div').eq(6)[0].style.height === '29px');"
    },
    {
      "text": "<p>The eighth <code>div</code> should have a <code>height</code> of <code>14</code> pixels.</p>",
      "testString": "assert($('div').eq(7)[0].style.height === '14px');"
    },
    {
      "text": "<p>The ninth <code>div</code> should have a <code>height</code> of <code>9</code> pixels.</p>",
      "testString": "assert($('div').eq(8)[0].style.height === '9px');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The previous challenges covered how to display data from an array and how to add CSS classes. You can combine these lessons to create a simple bar chart. There are two steps to this:</p>\n<ol>\n<li>\n<p>Create a <code>div</code> for each data point in the array</p>\n</li>\n<li>\n<p>Give each <code>div</code> a dynamic height, using a callback function in the <code>style()</code> method that sets height equal to the data value</p>\n</li>\n</ol>\n<p>Recall the format to set a style using a callback function:</p>\n<pre><code class=\"language-js\">selection.style(\"cssProperty\", (d) => d)\n</code></pre>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add the <code>style()</code> method to the code in the editor to set the <code>height</code> property for each element. Use a callback function to return the value of the data point with the string <code>px</code> added to it.</p>\n</section>",
  "translationPending": false,
  "block": "data-visualization-with-d3",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 3,
  "certification": "data-visualization",
  "superBlock": "data-visualization",
  "challengeOrder": 7,
  "required": [
    {
      "src": "https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"
    }
  ],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}