{
  "id": "587d7fab367417b2b2512bda",
  "title": "Create a Linear Scale with D3",
  "challengeType": 6,
  "forumTopicId": 301483,
  "dashedName": "create-a-linear-scale-with-d3",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<body>\n  <script>\n    // Add your code below this line\n\n    const scale = undefined; // Create the scale here\n    const output = scale(); // Call scale with an argument here\n\n    // Add your code above this line\n\n    d3.select(\"body\")\n      .append(\"h2\")\n      .text(output);\n\n  </script>\n</body>",
      "error": null,
      "seed": "<body>\n  <script>\n    // Add your code below this line\n\n    const scale = undefined; // Create the scale here\n    const output = scale(); // Call scale with an argument here\n\n    // Add your code above this line\n\n    d3.select(\"body\")\n      .append(\"h2\")\n      .text(output);\n\n  </script>\n</body>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<body>\n  <script>\n\n    const scale = d3.scaleLinear();\n    const output = scale(50); \n\n    d3.select(\"body\")\n      .append(\"h2\")\n      .text(output);\n\n  </script>\n</body>",
        "error": null,
        "seed": "<body>\n  <script>\n\n    const scale = d3.scaleLinear();\n    const output = scale(50); \n\n    d3.select(\"body\")\n      .append(\"h2\")\n      .text(output);\n\n  </script>\n</body>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The text in the <code>h2</code> should be <code>50</code>.</p>",
      "testString": "assert($('h2').text() == '50');"
    },
    {
      "text": "<p>Your code should use the <code>scaleLinear()</code> method.</p>",
      "testString": "assert(code.match(/\\.scaleLinear/g));"
    },
    {
      "text": "<p>The <code>output</code> variable should call <code>scale</code> with an argument of <code>50</code>.</p>",
      "testString": "assert(output == 50 && code.match(/scale\\(\\s*?50\\s*?\\)/g));"
    }
  ],
  "description": "<section id=\"description\">\n<p>The bar and scatter plot charts both plotted data directly onto the SVG. However, if the height of a bar or one of the data points were larger than the SVG height or width values, it would go outside the SVG area.</p>\n<p>In D3, there are scales to help plot data. <code>scales</code> are functions that tell the program how to map a set of raw data points onto the pixels of the SVG.</p>\n<p>For example, say you have a 100x500-sized SVG and you want to plot Gross Domestic Product (GDP) for a number of countries. The set of numbers would be in the billion or trillion-dollar range. You provide D3 a type of scale to tell it how to place the large GDP values into that 100x500-sized area.</p>\n<p>It's unlikely you would plot raw data as-is. Before plotting it, you set the scale for your entire data set, so that the <code>x</code> and <code>y</code> values fit your SVG width and height.</p>\n<p>D3 has several scale types. For a linear scale (usually used with quantitative data), there is the D3 method <code>scaleLinear()</code>:</p>\n<pre><code class=\"language-js\">const scale = d3.scaleLinear()\n</code></pre>\n<p>By default, a scale uses the identity relationship. The value of the input is the same as the value of the output. A separate challenge covers how to change this.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Change the <code>scale</code> variable to create a linear scale. Then set the <code>output</code> variable to the scale called with an input argument of <code>50</code>.</p>\n</section>",
  "translationPending": false,
  "block": "data-visualization-with-d3",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 3,
  "certification": "data-visualization",
  "superBlock": "data-visualization",
  "challengeOrder": 23,
  "required": [
    {
      "src": "https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"
    }
  ],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}