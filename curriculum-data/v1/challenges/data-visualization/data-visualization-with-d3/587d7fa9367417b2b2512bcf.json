{
  "id": "587d7fa9367417b2b2512bcf",
  "title": "Dynamically Change the Height of Each Bar",
  "challengeType": 6,
  "forumTopicId": 301486,
  "dashedName": "dynamically-change-the-height-of-each-bar",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => i * 30)\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", (d, i) => {\n         // Add your code below this line\n\n\n\n         // Add your code above this line\n       });\n  </script>\n</body>",
      "error": null,
      "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => i * 30)\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", (d, i) => {\n         // Add your code below this line\n\n\n\n         // Add your code above this line\n       });\n  </script>\n</body>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => i * 30)\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", (d, i) => {\n         return d * 3\n       });\n  </script>\n</body>",
        "error": null,
        "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => i * 30)\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", (d, i) => {\n         return d * 3\n       });\n  </script>\n</body>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The first <code>rect</code> should have a <code>height</code> of <code>36</code>.</p>",
      "testString": "assert($('rect').eq(0).attr('height') == '36');"
    },
    {
      "text": "<p>The second <code>rect</code> should have a <code>height</code> of <code>93</code>.</p>",
      "testString": "assert($('rect').eq(1).attr('height') == '93');"
    },
    {
      "text": "<p>The third <code>rect</code> should have a <code>height</code> of <code>66</code>.</p>",
      "testString": "assert($('rect').eq(2).attr('height') == '66');"
    },
    {
      "text": "<p>The fourth <code>rect</code> should have a <code>height</code> of <code>51</code>.</p>",
      "testString": "assert($('rect').eq(3).attr('height') == '51');"
    },
    {
      "text": "<p>The fifth <code>rect</code> should have a <code>height</code> of <code>75</code>.</p>",
      "testString": "assert($('rect').eq(4).attr('height') == '75');"
    },
    {
      "text": "<p>The sixth <code>rect</code> should have a <code>height</code> of <code>54</code>.</p>",
      "testString": "assert($('rect').eq(5).attr('height') == '54');"
    },
    {
      "text": "<p>The seventh <code>rect</code> should have a <code>height</code> of <code>87</code>.</p>",
      "testString": "assert($('rect').eq(6).attr('height') == '87');"
    },
    {
      "text": "<p>The eighth <code>rect</code> should have a <code>height</code> of <code>42</code>.</p>",
      "testString": "assert($('rect').eq(7).attr('height') == '42');"
    },
    {
      "text": "<p>The ninth <code>rect</code> should have a <code>height</code> of <code>27</code>.</p>",
      "testString": "assert($('rect').eq(8).attr('height') == '27');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The height of each bar can be set to the value of the data point in the array, similar to how the <code>x</code> value was set dynamically.</p>\n<pre><code class=\"language-js\">selection.attr(\"property\", (d, i) => {\n\n})\n</code></pre>\n<p>Here <code>d</code> would be the data point value, and <code>i</code> would be the index of the data point in the array.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Change the callback function for the <code>height</code> attribute to return the data value times 3.</p>\n<p><strong>Note:</strong> Remember that multiplying all data points by the same constant scales the data (like zooming in). It helps to see the differences between bar values in this example.</p>\n</section>",
  "translationPending": false,
  "block": "data-visualization-with-d3",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 3,
  "certification": "data-visualization",
  "superBlock": "data-visualization",
  "challengeOrder": 13,
  "required": [
    {
      "src": "https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"
    }
  ],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}