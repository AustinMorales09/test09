{
  "id": "587d7fa8367417b2b2512bcc",
  "title": "Display Shapes with SVG",
  "challengeType": 6,
  "forumTopicId": 301485,
  "dashedName": "display-shapes-with-svg",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h)\n                  // Add your code below this line\n\n\n\n                  // Add your code above this line\n  </script>\n</body>",
      "error": null,
      "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h)\n                  // Add your code below this line\n\n\n\n                  // Add your code above this line\n  </script>\n</body>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h)\n                  .append(\"rect\")\n                  .attr(\"width\", 25)\n                  .attr(\"height\", 100)\n                  .attr(\"x\", 0)\n                  .attr(\"y\", 0);\n  </script>\n</body>",
        "error": null,
        "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h)\n                  .append(\"rect\")\n                  .attr(\"width\", 25)\n                  .attr(\"height\", 100)\n                  .attr(\"x\", 0)\n                  .attr(\"y\", 0);\n  </script>\n</body>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your document should have 1 <code>rect</code> element.</p>",
      "testString": "assert($('rect').length == 1);"
    },
    {
      "text": "<p>The <code>rect</code> element should have a <code>width</code> attribute set to <code>25</code>.</p>",
      "testString": "assert($('rect').attr('width') == '25');"
    },
    {
      "text": "<p>The <code>rect</code> element should have a <code>height</code> attribute set to <code>100</code>.</p>",
      "testString": "assert($('rect').attr('height') == '100');"
    },
    {
      "text": "<p>The <code>rect</code> element should have an <code>x</code> attribute set to <code>0</code>.</p>",
      "testString": "assert($('rect').attr('x') == '0');"
    },
    {
      "text": "<p>The <code>rect</code> element should have a <code>y</code> attribute set to <code>0</code>.</p>",
      "testString": "assert($('rect').attr('y') == '0');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last challenge created an <code>svg</code> element with a given width and height, which was visible because it had a <code>background-color</code> applied to it in the <code>style</code> tag. The code made space for the given width and height.</p>\n<p>The next step is to create a shape to put in the <code>svg</code> area. There are a number of supported shapes in SVG, such as rectangles and circles. They are used to display data. For example, a rectangle (<code>&#x3C;rect></code>) SVG shape could create a bar in a bar chart.</p>\n<p>When you place a shape into the <code>svg</code> area, you can specify where it goes with <code>x</code> and <code>y</code> coordinates. The origin point of (0, 0) is in the upper-left corner. Positive values for <code>x</code> push the shape to the right, and positive values for <code>y</code> push the shape down from the origin point.</p>\n<p>To place a shape in the middle of the 500 (width) x 100 (height) <code>svg</code> from last challenge, the <code>x</code> coordinate would be 250 and the <code>y</code> coordinate would be 50.</p>\n<p>An SVG <code>rect</code> has four attributes. There are the <code>x</code> and <code>y</code> coordinates for where it is placed in the <code>svg</code> area. It also has a <code>height</code> and <code>width</code> to specify the size.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Add a <code>rect</code> shape to the <code>svg</code> using <code>append()</code>, and give it a <code>width</code> attribute of <code>25</code> and <code>height</code> attribute of <code>100</code>. Also, give the <code>rect</code> <code>x</code> and <code>y</code> attributes each set to <code>0</code>.</p>\n</section>",
  "translationPending": false,
  "block": "data-visualization-with-d3",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 3,
  "certification": "data-visualization",
  "superBlock": "data-visualization",
  "challengeOrder": 10,
  "required": [
    {
      "src": "https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"
    }
  ],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}