{
  "id": "587d7fa9367417b2b2512bce",
  "title": "Dynamically Set the Coordinates for Each Bar",
  "challengeType": 6,
  "forumTopicId": 301487,
  "dashedName": "dynamically-set-the-coordinates-for-each-bar",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => {\n         // Add your code below this line\n\n\n\n         // Add your code above this line\n       })\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", 100);\n  </script>\n</body>",
      "error": null,
      "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => {\n         // Add your code below this line\n\n\n\n         // Add your code above this line\n       })\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", 100);\n  </script>\n</body>"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "index.html"
        ],
        "name": "index",
        "ext": "html",
        "path": "index.html",
        "fileKey": "indexhtml",
        "contents": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => {\n         return i * 30\n       })\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", 100);\n  </script>\n</body>",
        "error": null,
        "seed": "<body>\n  <script>\n    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n\n    const w = 500;\n    const h = 100;\n\n    const svg = d3.select(\"body\")\n                  .append(\"svg\")\n                  .attr(\"width\", w)\n                  .attr(\"height\", h);\n\n    svg.selectAll(\"rect\")\n       .data(dataset)\n       .enter()\n       .append(\"rect\")\n       .attr(\"x\", (d, i) => {\n         return i * 30\n       })\n       .attr(\"y\", 0)\n       .attr(\"width\", 25)\n       .attr(\"height\", 100);\n  </script>\n</body>"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p>The first <code>rect</code> should have an <code>x</code> value of <code>0</code>.</p>",
      "testString": "assert($('rect').eq(0).attr('x') == '0');"
    },
    {
      "text": "<p>The second <code>rect</code> should have an <code>x</code> value of <code>30</code>.</p>",
      "testString": "assert($('rect').eq(1).attr('x') == '30');"
    },
    {
      "text": "<p>The third <code>rect</code> should have an <code>x</code> value of <code>60</code>.</p>",
      "testString": "assert($('rect').eq(2).attr('x') == '60');"
    },
    {
      "text": "<p>The fourth <code>rect</code> should have an <code>x</code> value of <code>90</code>.</p>",
      "testString": "assert($('rect').eq(3).attr('x') == '90');"
    },
    {
      "text": "<p>The fifth <code>rect</code> should have an <code>x</code> value of <code>120</code>.</p>",
      "testString": "assert($('rect').eq(4).attr('x') == '120');"
    },
    {
      "text": "<p>The sixth <code>rect</code> should have an <code>x</code> value of <code>150</code>.</p>",
      "testString": "assert($('rect').eq(5).attr('x') == '150');"
    },
    {
      "text": "<p>The seventh <code>rect</code> should have an <code>x</code> value of <code>180</code>.</p>",
      "testString": "assert($('rect').eq(6).attr('x') == '180');"
    },
    {
      "text": "<p>The eighth <code>rect</code> should have an <code>x</code> value of <code>210</code>.</p>",
      "testString": "assert($('rect').eq(7).attr('x') == '210');"
    },
    {
      "text": "<p>The ninth <code>rect</code> should have an <code>x</code> value of <code>240</code>.</p>",
      "testString": "assert($('rect').eq(8).attr('x') == '240');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The last challenge created and appended a rectangle to the <code>svg</code> element for each point in <code>dataset</code> to represent a bar. Unfortunately, they were all stacked on top of each other.</p>\n<p>The placement of a rectangle is handled by the <code>x</code> and <code>y</code> attributes. They tell D3 where to start drawing the shape in the <code>svg</code> area. The last challenge set them each to 0, so every bar was placed in the upper-left corner.</p>\n<p>For a bar chart, all of the bars should sit on the same vertical level, which means the <code>y</code> value stays the same (at 0) for all bars. The <code>x</code> value, however, needs to change as you add new bars. Remember that larger <code>x</code> values push items farther to the right. As you go through the array elements in <code>dataset</code>, the <code>x</code> value should increase.</p>\n<p>The <code>attr()</code> method in D3 accepts a callback function to dynamically set that attribute. The callback function takes two arguments, one for the data point itself (usually <code>d</code>) and one for the index of the data point in the array. The second argument for the index is optional. Here's the format:</p>\n<pre><code class=\"language-js\">selection.attr(\"property\", (d, i) => {\n\n})\n</code></pre>\n<p>It's important to note that you do NOT need to write a <code>for</code> loop or use <code>forEach()</code> to iterate over the items in the data set. Recall that the <code>data()</code> method parses the data set, and any method that's chained after <code>data()</code> is run once for each item in the data set.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Change the <code>x</code> attribute callback function so it returns the index times 30.</p>\n<p><strong>Note:</strong> Each bar has a width of 25, so increasing each <code>x</code> value by 30 adds some space between the bars. Any value greater than 25 would work in this example.</p>\n</section>",
  "translationPending": false,
  "block": "data-visualization-with-d3",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 3,
  "certification": "data-visualization",
  "superBlock": "data-visualization",
  "challengeOrder": 12,
  "required": [
    {
      "src": "https://cdnjs.cloudflare.com/ajax/libs/d3/5.7.0/d3.min.js"
    }
  ],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}