{
  "id": "5a23c84252665b21eecc7e1e",
  "title": "Dot product",
  "challengeType": 1,
  "forumTopicId": 302251,
  "dashedName": "dot-product",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function dotProduct(ary1, ary2) {\n\n}",
      "error": null,
      "seed": "function dotProduct(ary1, ary2) {\n\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function dotProduct(ary1, ary2) {\n  var dotprod = 0;\n  for (var i = 0; i < ary1.length; i++) dotprod += ary1[i] * ary2[i];\n  return dotprod;\n}",
        "error": null,
        "seed": "function dotProduct(ary1, ary2) {\n  var dotprod = 0;\n  for (var i = 0; i < ary1.length; i++) dotprod += ary1[i] * ary2[i];\n  return dotprod;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>dotProduct</code> should be a function.</p>",
      "testString": "assert(typeof dotProduct == 'function');"
    },
    {
      "text": "<p><code>dotProduct([1, 3, -5], [4, -2, -1])</code> should return a number.</p>",
      "testString": "assert(typeof dotProduct([1, 3, -5], [4, -2, -1]) == 'number');"
    },
    {
      "text": "<p><code>dotProduct([1, 3, -5], [4, -2, -1])</code> should return <code>3</code>.</p>",
      "testString": "assert.equal(dotProduct([1, 3, -5], [4, -2, -1]), 3);"
    },
    {
      "text": "<p><code>dotProduct([1, 2, 3, 4, 5], [6, 7, 8, 9, 10])</code> should return <code>130</code>.</p>",
      "testString": "assert.equal(dotProduct([1, 2, 3, 4, 5], [6, 7, 8, 9, 10]), 130);"
    },
    {
      "text": "<p><code>dotProduct([5, 4, 3, 2], [7, 8, 9, 6])</code> should return <code>106</code>.</p>",
      "testString": "assert.equal(dotProduct([5, 4, 3, 2], [7, 8, 9, 6]), 106);"
    },
    {
      "text": "<p><code>dotProduct([-5, 4, -3, 2], [-7, -8, 9, -6])</code> should return <code>-36</code>.</p>",
      "testString": "assert.equal(dotProduct([-5, 4, -3, 2], [-7, -8, 9, -6]), -36);"
    },
    {
      "text": "<p><code>dotProduct([17, 27, 34, 43, 15], [62, 73, 48, 95, 110])</code> should return <code>10392</code>.</p>",
      "testString": "assert.equal(dotProduct([17, 27, 34, 43, 15], [62, 73, 48, 95, 110]), 10392);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Create a function, to compute the <strong>dot product</strong>, also known as the <strong>scalar product</strong> of two vectors.</p>\n</section>",
  "translationPending": false,
  "block": "rosetta-code-challenges",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 17,
  "certification": "rosetta-code",
  "superBlock": "rosetta-code",
  "challengeOrder": 34,
  "required": [],
  "helpCategory": "Rosetta",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}