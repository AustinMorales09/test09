{
  "id": "5987fd532b954e0f21b5d3f6",
  "title": "Equilibrium index",
  "challengeType": 1,
  "forumTopicId": 302255,
  "dashedName": "equilibrium-index",
  "challengeFiles": [
    {
      "head": "",
      "tail": "const equilibriumTests =\n  [[-7, 1, 5, 2, -4, 3, 0], // 3, 6\n  [2, 4, 6], // empty\n  [2, 9, 2], // 1\n  [1, -1, 1, -1, 1, -1, 1], // 0,1,2,3,4,5,6\n  [1], // 0\n  [] // empty\n  ];\nconst ans = [[3, 6], [], [1], [0, 1, 2, 3, 4, 5, 6], [0], []];",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function equilibrium(a) {\n\n}",
      "error": null,
      "seed": "function equilibrium(a) {\n\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function equilibrium(a) {\n  let N = a.length,\n    i,\n    l = [],\n    r = [],\n    e = [];\n  for (l[0] = a[0], r[N - 1] = a[N - 1], i = 1; i < N; i++)\n    { l[i] = l[i - 1] + a[i], r[N - i - 1] = r[N - i] + a[N - i - 1]; }\n  for (i = 0; i < N; i++)\n    { if (l[i] === r[i]) e.push(i); }\n  return e;\n}",
        "error": null,
        "seed": "function equilibrium(a) {\n  let N = a.length,\n    i,\n    l = [],\n    r = [],\n    e = [];\n  for (l[0] = a[0], r[N - 1] = a[N - 1], i = 1; i < N; i++)\n    { l[i] = l[i - 1] + a[i], r[N - i - 1] = r[N - i] + a[N - i - 1]; }\n  for (i = 0; i < N; i++)\n    { if (l[i] === r[i]) e.push(i); }\n  return e;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>equilibrium</code> should be a function.</p>",
      "testString": "assert(typeof equilibrium === 'function');"
    },
    {
      "text": "<p><code>equilibrium([-7, 1, 5, 2, -4, 3, 0])</code> should return <code>[3,6]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[0]), ans[0]);"
    },
    {
      "text": "<p><code>equilibrium([2, 4, 6])</code> should return <code>[]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[1]), ans[1]);"
    },
    {
      "text": "<p><code>equilibrium([2, 9, 2])</code> should return <code>[1]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[2]), ans[2]);"
    },
    {
      "text": "<p><code>equilibrium([1, -1, 1, -1, 1, -1, 1])</code> should return <code>[0,1,2,3,4,5,6]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[3]), ans[3]);"
    },
    {
      "text": "<p><code>equilibrium([1])</code> should return <code>[0]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[4]), ans[4]);"
    },
    {
      "text": "<p><code>equilibrium([])</code> should return <code>[]</code>.</p>",
      "testString": "assert.deepEqual(equilibrium(equilibriumTests[5]), ans[5]);"
    }
  ],
  "description": "<section id=\"description\">\n<p>An equilibrium index of a sequence is an index into the sequence such that the sum of elements at lower indices is equal to the sum of elements at higher indices.</p>\n<p>For example, in a sequence $A$:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 = -7$</big></li>\n  <li><big>$A_1 =  1$</big></li>\n  <li><big>$A_2 =  5$</big></li>\n  <li><big>$A_3 =  2$</big></li>\n  <li><big>$A_4 = -4$</big></li>\n  <li><big>$A_5 =  3$</big></li>\n  <li><big>$A_6 =  0$</big></li>\n</ul>\n<p><code>3</code> is an equilibrium index, because:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 + A_1 + A_2 = A_4 + A_5 + A_6$</big></li>\n</ul>\n<p><code>6</code> is also an equilibrium index, because:</p>\n<ul style='list-style: none;'>\n  <li><big>$A_0 + A_1 + A_2 + A_3 + A_4 + A_5 = 0$</big></li>\n</ul>\n<p>(sum of zero elements is zero)</p>\n<p><code>7</code> is not an equilibrium index, because it is not a valid index of sequence $A$.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Write a function that, given a sequence, returns its equilibrium indices (if any).</p>\n<p>Assume that the sequence may be very long.</p>\n</section>",
  "translationPending": false,
  "block": "rosetta-code-challenges",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 17,
  "certification": "rosetta-code",
  "superBlock": "rosetta-code",
  "challengeOrder": 38,
  "required": [],
  "helpCategory": "Rosetta",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}