{
  "id": "5e6dee7749a0b85a3f1fc7d5",
  "title": "Lucas-Lehmer test",
  "challengeType": 1,
  "forumTopicId": 385281,
  "dashedName": "lucas-lehmer-test",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function lucasLehmer(p) {\n\n}",
      "error": null,
      "seed": "function lucasLehmer(p) {\n\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function lucasLehmer(p) {\n    function isPrime(p) {\n        if (p == 2)\n            return true;\n        else if (p <= 1 || p % 2 == 0)\n            return false;\n        else {\n            var to = Math.sqrt(p);\n            for (var i = 3; i <= to; i += 2)\n                if (p % i == 0)\n                    return false;\n            return true;\n        }\n    }\n\n    function isMersennePrime(p) {\n        if (p == 2)\n            return true;\n        else {\n            var m_p = Math.pow(2, p) - 1\n            var s = 4;\n            for (var i = 3; i <= p; i++)\n                s = (s * s - 2) % m_p\n            return s == 0;\n        }\n    }\n\n    return isPrime(p) && isMersennePrime(p)\n}",
        "error": null,
        "seed": "function lucasLehmer(p) {\n    function isPrime(p) {\n        if (p == 2)\n            return true;\n        else if (p <= 1 || p % 2 == 0)\n            return false;\n        else {\n            var to = Math.sqrt(p);\n            for (var i = 3; i <= to; i += 2)\n                if (p % i == 0)\n                    return false;\n            return true;\n        }\n    }\n\n    function isMersennePrime(p) {\n        if (p == 2)\n            return true;\n        else {\n            var m_p = Math.pow(2, p) - 1\n            var s = 4;\n            for (var i = 3; i <= p; i++)\n                s = (s * s - 2) % m_p\n            return s == 0;\n        }\n    }\n\n    return isPrime(p) && isMersennePrime(p)\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>lucasLehmer</code> should be a function.</p>",
      "testString": "assert(typeof lucasLehmer == 'function');"
    },
    {
      "text": "<p><code>lucasLehmer(11)</code> should return a boolean.</p>",
      "testString": "assert(typeof lucasLehmer(11) == 'boolean');"
    },
    {
      "text": "<p><code>lucasLehmer(11)</code> should return <code>false</code>.</p>",
      "testString": "assert.equal(lucasLehmer(11), false);"
    },
    {
      "text": "<p><code>lucasLehmer(15)</code> should return <code>false</code>.</p>",
      "testString": "assert.equal(lucasLehmer(15), false);"
    },
    {
      "text": "<p><code>lucasLehmer(13)</code> should return <code>true</code>.</p>",
      "testString": "assert.equal(lucasLehmer(13), true);"
    },
    {
      "text": "<p><code>lucasLehmer(17)</code> should return <code>true</code>.</p>",
      "testString": "assert.equal(lucasLehmer(17), true);"
    },
    {
      "text": "<p><code>lucasLehmer(19)</code> should return <code>true</code>.</p>",
      "testString": "assert.equal(lucasLehmer(19), true);"
    },
    {
      "text": "<p><code>lucasLehmer(21)</code> should return <code>false</code>.</p>",
      "testString": "assert.equal(lucasLehmer(21), false);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Lucas-Lehmer Test: for $p$ an odd prime, the Mersenne number $2^p-1$ is prime if and only if $2^p-1$ divides $S(p-1)$ where $S(n+1)=(S(n))^2-2$, and $S(1)=4$.</p>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Write a function that returns whether the given Mersenne number is prime or not.</p>\n</section>",
  "translationPending": false,
  "block": "rosetta-code-challenges",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 17,
  "certification": "rosetta-code",
  "superBlock": "rosetta-code",
  "challengeOrder": 100,
  "required": [],
  "helpCategory": "Rosetta",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}