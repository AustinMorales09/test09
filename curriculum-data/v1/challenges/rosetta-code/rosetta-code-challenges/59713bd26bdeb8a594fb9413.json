{
  "id": "59713bd26bdeb8a594fb9413",
  "title": "Count the coins",
  "challengeType": 1,
  "forumTopicId": 302238,
  "dashedName": "count-the-coins",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function countCoins(cents) {\n\n  return true;\n}",
      "error": null,
      "seed": "function countCoins(cents) {\n\n  return true;\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function countCoins(cents) {\n  const operands = [1, 5, 10, 25];\n  const targetsLength = cents + 1;\n  const operandsLength = operands.length;\n  const t = [1];\n\n  for (let a = 0; a < operandsLength; a++) {\n    for (let b = 1; b < targetsLength; b++) {\n      // initialise undefined target\n      t[b] = t[b] ? t[b] : 0;\n\n      // accumulate target + operand ways\n      t[b] += (b < operands[a]) ? 0 : t[b - operands[a]];\n    }\n  }\n\n  return t[targetsLength - 1];\n}",
        "error": null,
        "seed": "function countCoins(cents) {\n  const operands = [1, 5, 10, 25];\n  const targetsLength = cents + 1;\n  const operandsLength = operands.length;\n  const t = [1];\n\n  for (let a = 0; a < operandsLength; a++) {\n    for (let b = 1; b < targetsLength; b++) {\n      // initialise undefined target\n      t[b] = t[b] ? t[b] : 0;\n\n      // accumulate target + operand ways\n      t[b] += (b < operands[a]) ? 0 : t[b - operands[a]];\n    }\n  }\n\n  return t[targetsLength - 1];\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>countCoins</code> should be a function.</p>",
      "testString": "assert(typeof countCoins === 'function');"
    },
    {
      "text": "<p><code>countCoins(15)</code> should return <code>6</code>.</p>",
      "testString": "assert.equal(countCoins(15), 6);"
    },
    {
      "text": "<p><code>countCoins(85)</code> should return <code>163</code>.</p>",
      "testString": "assert.equal(countCoins(85), 163);"
    },
    {
      "text": "<p><code>countCoins(100)</code> should return <code>242</code>.</p>",
      "testString": "assert.equal(countCoins(100), 242);"
    }
  ],
  "description": "<section id=\"description\">\n<p>There are four types of common coins in US currency:</p>\n<ul>\n  <li>quarters (25 cents)</li>\n  <li>dimes (10 cents)</li>\n  <li>nickels (5 cents), and</li>\n  <li>pennies (1 cent)</li>\n</ul>\n<p>There are six ways to make change for 15 cents:</p>\n<ul>\n  <li>A dime and a nickel</li>\n  <li>A dime and 5 pennies</li>\n  <li>3 nickels</li>\n  <li>2 nickels and 5 pennies</li>\n  <li>A nickel and 10 pennies</li>\n  <li>15 pennies</li>\n</ul>\n</section>",
  "instructions": "<section id=\"instructions\">\n<p>Implement a function to determine how many ways there are to make change for a given input, <code>cents</code>, that represents an amount of US pennies using these common coins.</p>\n</section>",
  "translationPending": false,
  "block": "rosetta-code-challenges",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 17,
  "certification": "rosetta-code",
  "superBlock": "rosetta-code",
  "challengeOrder": 21,
  "required": [],
  "helpCategory": "Rosetta",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}