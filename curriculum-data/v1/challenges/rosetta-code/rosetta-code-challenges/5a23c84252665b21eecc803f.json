{
  "id": "5a23c84252665b21eecc803f",
  "title": "Sum digits of an integer",
  "challengeType": 1,
  "forumTopicId": 302331,
  "dashedName": "sum-digits-of-an-integer",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "script.js"
      ],
      "name": "script",
      "ext": "js",
      "path": "script.js",
      "fileKey": "scriptjs",
      "contents": "function sumDigits(n) {\n\n}",
      "error": null,
      "seed": "function sumDigits(n) {\n\n}"
    }
  ],
  "solutions": [
    [
      {
        "head": "",
        "tail": "",
        "id": "",
        "history": [
          "script.js"
        ],
        "name": "script",
        "ext": "js",
        "path": "script.js",
        "fileKey": "scriptjs",
        "contents": "function sumDigits(n) {\n  n += '';\n  for (var s = 0, i = 0, e = n.length; i < e; i += 1)\n    s += parseInt(n.charAt(i), 36);\n  return s;\n}",
        "error": null,
        "seed": "function sumDigits(n) {\n  n += '';\n  for (var s = 0, i = 0, e = n.length; i < e; i += 1)\n    s += parseInt(n.charAt(i), 36);\n  return s;\n}"
      }
    ]
  ],
  "assignments": [],
  "tests": [
    {
      "text": "<p><code>sumDigits</code> should be a function.</p>",
      "testString": "assert(typeof sumDigits == 'function');"
    },
    {
      "text": "<p><code>sumDigits(\"1\")</code> should return a number.</p>",
      "testString": "assert(typeof sumDigits('1') == 'number');"
    },
    {
      "text": "<p><code>sumDigits(\"1\")</code> should return <code>1</code>.</p>",
      "testString": "assert.equal(sumDigits('1'), 1);"
    },
    {
      "text": "<p><code>sumDigits(\"12345\")</code> should return <code>15</code>.</p>",
      "testString": "assert.equal(sumDigits('12345'), 15);"
    },
    {
      "text": "<p><code>sumDigits(\"254\")</code> should return <code>11</code>.</p>",
      "testString": "assert.equal(sumDigits('254'), 11);"
    },
    {
      "text": "<p><code>sumDigits(\"fe\")</code> should return <code>29</code>.</p>",
      "testString": "assert.equal(sumDigits('fe'), 29);"
    },
    {
      "text": "<p><code>sumDigits(\"f0e\")</code> should return <code>29</code>.</p>",
      "testString": "assert.equal(sumDigits('f0e'), 29);"
    },
    {
      "text": "<p><code>sumDigits(\"999ABCXYZ\")</code> should return <code>162</code>.</p>",
      "testString": "assert.equal(sumDigits('999ABCXYZ'), 162);"
    }
  ],
  "description": "<section id=\"description\">\n<p>Write a function that takes a string as a parameter. This string represents a number that can be in any base (less than 37) and return the sum of its digits.</p>\n<ul>\n  <li><b>1</b><sub>10</sub> sums to <b>1</b></li>\n  <li><b>1234</b><sub>10</sub> sums to <b>10</b></li>\n  <li><b>fe</b><sub>16</sub> sums to <b>29</b></li>\n  <li><b>f0e</b><sub>16</sub> sums to <b>29</b></li>\n</ul>\n</section>",
  "translationPending": false,
  "block": "rosetta-code-challenges",
  "hasEditableBoundaries": false,
  "order": 0,
  "superOrder": 17,
  "certification": "rosetta-code",
  "superBlock": "rosetta-code",
  "challengeOrder": 140,
  "required": [],
  "helpCategory": "Rosetta",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": true,
  "disableLoopProtectPreview": false
}