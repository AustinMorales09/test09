{
  "id": "6140f4b5c1555a2960de1e5f",
  "title": "Step 22",
  "challengeType": 0,
  "dashedName": "step-22",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Ferris Wheel</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div class=\"wheel\">\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n    </div>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Ferris Wheel</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div class=\"wheel\">\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n    </div>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        84,
        86
      ],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": ".wheel {\n  border: 2px solid black;\n  border-radius: 50%;\n  margin-left: 50px;\n  position: absolute;\n  height: 55vw;\n  width: 55vw;\n  max-width: 500px;\n  max-height: 500px;\n  animation-name: wheel;\n  animation-duration: 10s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n}\n\n.line {\n  background-color: black;\n  width: 50%;\n  height: 2px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform-origin: 0% 0%;\n}\n\n.line:nth-of-type(2) {\n  transform: rotate(60deg);\n}\n.line:nth-of-type(3) {\n  transform: rotate(120deg);\n}\n.line:nth-of-type(4) {\n  transform: rotate(180deg);\n}\n.line:nth-of-type(5) {\n  transform: rotate(240deg);\n}\n.line:nth-of-type(6) {\n  transform: rotate(300deg);\n}\n\n.cabin {\n  background-color: red;\n  width: 20%;\n  height: 20%;\n  position: absolute;\n  border: 2px solid;\n  transform-origin: 50% 0%;\n}\n\n.cabin:nth-of-type(1) {\n  right: -8.5%;\n  top: 50%;\n}\n.cabin:nth-of-type(2) {\n  right: 17%;\n  top: 93.5%;\n}\n.cabin:nth-of-type(3) {\n  right: 67%;\n  top: 93.5%;\n}\n.cabin:nth-of-type(4) {\n  left: -8.5%;\n  top: 50%;\n}\n.cabin:nth-of-type(5) {\n  left: 17%;\n  top: 7%;\n}\n.cabin:nth-of-type(6) {\n  right: 17%;\n  top: 7%;\n}\n\n@keyframes wheel {\n   0% {\n     transform: rotate(0deg);\n   }\n   100% {\n     transform: rotate(360deg);\n   }\n}\n\n",
      "error": null,
      "seed": ".wheel {\n  border: 2px solid black;\n  border-radius: 50%;\n  margin-left: 50px;\n  position: absolute;\n  height: 55vw;\n  width: 55vw;\n  max-width: 500px;\n  max-height: 500px;\n  animation-name: wheel;\n  animation-duration: 10s;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n}\n\n.line {\n  background-color: black;\n  width: 50%;\n  height: 2px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform-origin: 0% 0%;\n}\n\n.line:nth-of-type(2) {\n  transform: rotate(60deg);\n}\n.line:nth-of-type(3) {\n  transform: rotate(120deg);\n}\n.line:nth-of-type(4) {\n  transform: rotate(180deg);\n}\n.line:nth-of-type(5) {\n  transform: rotate(240deg);\n}\n.line:nth-of-type(6) {\n  transform: rotate(300deg);\n}\n\n.cabin {\n  background-color: red;\n  width: 20%;\n  height: 20%;\n  position: absolute;\n  border: 2px solid;\n  transform-origin: 50% 0%;\n}\n\n.cabin:nth-of-type(1) {\n  right: -8.5%;\n  top: 50%;\n}\n.cabin:nth-of-type(2) {\n  right: 17%;\n  top: 93.5%;\n}\n.cabin:nth-of-type(3) {\n  right: 67%;\n  top: 93.5%;\n}\n.cabin:nth-of-type(4) {\n  left: -8.5%;\n  top: 50%;\n}\n.cabin:nth-of-type(5) {\n  left: 17%;\n  top: 7%;\n}\n.cabin:nth-of-type(6) {\n  right: 17%;\n  top: 7%;\n}\n\n@keyframes wheel {\n   0% {\n     transform: rotate(0deg);\n   }\n   100% {\n     transform: rotate(360deg);\n   }\n}\n\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should have a <code>@keyframes</code> rule.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.length === 2);"
    },
    {
      "text": "<p>Your new <code>@keyframes</code> rule should be named <code>cabins</code>.</p>",
      "testString": "const rules = new __helpers.CSSHelp(document).getCSSRules('keyframes');\nassert(rules?.[0]?.name === 'cabins' || rules?.[1]?.name === 'cabins');"
    },
    {
      "text": "<p>Your new <code>@keyframes</code> rule should come after your <code>@keyframes wheel</code> rule.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.name === 'cabins');"
    },
    {
      "text": "<p>You should not change the name of your <code>@keyframes wheel</code> rule.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[0]?.name === 'wheel');"
    },
    {
      "text": "<p>Your <code>@keyframes cabins</code> rule should have a <code>0%</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.cssRules?.[0]?.keyText === '0%');"
    },
    {
      "text": "<p>Your <code>0%</code> selector should have a <code>transform</code> property set to <code>rotate(0deg)</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.cssRules?.[0]?.style?.transform === 'rotate(0deg)');"
    },
    {
      "text": "<p>Your <code>@keyframes cabins</code> rule should have a <code>100%</code> selector.</p>",
      "testString": "const rules = new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.cssRules\nassert(rules?.[0]?.keyText === '100%' || rules?.[1]?.keyText === '100%');"
    },
    {
      "text": "<p>Your <code>100%</code> selector should come after your <code>0%</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.cssRules?.[1]?.keyText === '100%')"
    },
    {
      "text": "<p>Your <code>100%</code> selector should have a <code>transform</code> property set to <code>rotate(-360deg)</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getCSSRules('keyframes')?.[1]?.cssRules?.[1]?.style?.transform === 'rotate(-360deg)')"
    }
  ],
  "description": "<section id=\"description\">\n<p>Create another <code>@keyframes</code> rule with the name <code>cabins</code>. Use the same properties as your <code>@keyframes wheel</code>, copying both the <code>0%</code> and <code>100%</code> rules, but set the <code>transform</code> property of the <code>100%</code> selector to <code>rotate(-360deg)</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-animation-by-building-a-ferris-wheel",
  "hasEditableBoundaries": true,
  "order": 17,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 21,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}