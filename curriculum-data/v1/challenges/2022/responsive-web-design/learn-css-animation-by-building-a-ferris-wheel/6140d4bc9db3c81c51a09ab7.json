{
  "id": "6140d4bc9db3c81c51a09ab7",
  "title": "Step 15",
  "challengeType": 0,
  "dashedName": "step-15",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Ferris Wheel</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div class=\"wheel\">\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n    </div>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Ferris Wheel</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div class=\"wheel\">\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n      <span class=\"line\"></span>\n\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n      <div class=\"cabin\"></div>\n    </div>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        50,
        52
      ],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": ".wheel {\n  border: 2px solid black;\n  border-radius: 50%;\n  margin-left: 50px;\n  position: absolute;\n  height: 55vw;\n  width: 55vw;\n  max-width: 500px;\n  max-height: 500px;\n}\n\n.line {\n  background-color: black;\n  width: 50%;\n  height: 2px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform-origin: 0% 0%;\n}\n\n.line:nth-of-type(2) {\n  transform: rotate(60deg);\n}\n.line:nth-of-type(3) {\n  transform: rotate(120deg);\n}\n.line:nth-of-type(4) {\n  transform: rotate(180deg);\n}\n.line:nth-of-type(5) {\n  transform: rotate(240deg);\n}\n.line:nth-of-type(6) {\n  transform: rotate(300deg);\n}\n\n.cabin {\n  background-color: red;\n  width: 20%;\n  height: 20%;\n  position: absolute;\n  border: 2px solid;\n  transform-origin: 50% 0%;\n}\n\n.cabin:nth-of-type(1) {\n  right: -8.5%;\n  top: 50%;\n}\n",
      "error": null,
      "seed": ".wheel {\n  border: 2px solid black;\n  border-radius: 50%;\n  margin-left: 50px;\n  position: absolute;\n  height: 55vw;\n  width: 55vw;\n  max-width: 500px;\n  max-height: 500px;\n}\n\n.line {\n  background-color: black;\n  width: 50%;\n  height: 2px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform-origin: 0% 0%;\n}\n\n.line:nth-of-type(2) {\n  transform: rotate(60deg);\n}\n.line:nth-of-type(3) {\n  transform: rotate(120deg);\n}\n.line:nth-of-type(4) {\n  transform: rotate(180deg);\n}\n.line:nth-of-type(5) {\n  transform: rotate(240deg);\n}\n.line:nth-of-type(6) {\n  transform: rotate(300deg);\n}\n\n.cabin {\n  background-color: red;\n  width: 20%;\n  height: 20%;\n  position: absolute;\n  border: 2px solid;\n  transform-origin: 50% 0%;\n}\n\n.cabin:nth-of-type(1) {\n  right: -8.5%;\n  top: 50%;\n}\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should have a <code>.cabin:nth-of-type(2)</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(2)'));"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(2)</code> selector should have a <code>right</code> property set to <code>17%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(2)')?.right === '17%');"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(2)</code> selector should have a <code>top</code> property set to <code>93.5%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(2)')?.top === '93.5%');"
    },
    {
      "text": "<p>You should have a <code>.cabin:nth-of-type(3)</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(3)'));"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(3)</code> selector should have a <code>right</code> property set to <code>67%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(3)')?.right === '67%');"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(3)</code> selector should have a <code>top</code> property set to <code>93.5%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(3)')?.top === '93.5%');"
    },
    {
      "text": "<p>You should have a <code>.cabin:nth-of-type(4)</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(4)'));"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(4)</code> selector should have a <code>left</code> property set to <code>-8.5%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(4)')?.left === '-8.5%');"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(4)</code> selector should have a <code>top</code> property set to <code>50%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(4)')?.top === '50%');"
    },
    {
      "text": "<p>You should have a <code>.cabin:nth-of-type(5)</code> selector.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(5)'));"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(5)</code> selector should have a <code>left</code> property set to <code>17%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(5)')?.left === '17%');"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(5)</code> selector should have a <code>top</code> property set to <code>7%</code>.</p>",
      "testString": "assert(new __helpers.CSSHelp(document).getStyle('.cabin:nth-of-type(5)')?.top === '7%');"
    },
    {
      "text": "<p>You should have a <code>.cabin:nth-of-type(6)</code> selector.</p>",
      "testString": "const def = (s) => new __helpers.CSSHelp(document).getStyle(s)\nassert(def('.cabin:nth-of-type(6)') || def('.cabin:last-of-type'));"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(6)</code> selector should have a <code>right</code> property set to <code>17%</code>.</p>",
      "testString": "const right = (s) => new __helpers.CSSHelp(document).getStyle(s)?.right\nassert.equal(right('.cabin:nth-of-type(6)') || right('.cabin:last-of-type'),'17%');"
    },
    {
      "text": "<p>Your <code>.cabin:nth-of-type(6)</code> selector should have a <code>top</code> property set to <code>7%</code>.</p>",
      "testString": "const top = (s) => new __helpers.CSSHelp(document).getStyle(s)?.top\nassert.equal(top('.cabin:nth-of-type(6)') || top('.cabin:last-of-type'),'7%');"
    }
  ],
  "description": "<section id=\"description\">\n<p>Continuing the pattern, select the following <code>.cabin</code> elements and apply the specific rules to them:</p>\n<ul>\n<li>The second <code>.cabin</code> should have the <code>right</code> property set to <code>17%</code> and the <code>top</code> property set to <code>93.5%</code>.</li>\n<li>The third <code>.cabin</code> should have the <code>right</code> property set to <code>67%</code> and the <code>top</code> property set to <code>93.5%</code>.</li>\n<li>The fourth <code>.cabin</code> should have the <code>left</code> property set to <code>-8.5%</code> and the <code>top</code> property set to <code>50%</code>.</li>\n<li>The fifth <code>.cabin</code> should have the <code>left</code> property set to <code>17%</code> and the <code>top</code> property set to <code>7%</code>.</li>\n<li>The sixth <code>.cabin</code> should have the <code>right</code> property set to <code>17%</code> and the <code>top</code> property set to <code>7%</code>.</li>\n</ul>\n</section>",
  "translationPending": false,
  "block": "learn-css-animation-by-building-a-ferris-wheel",
  "hasEditableBoundaries": true,
  "order": 17,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 14,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}