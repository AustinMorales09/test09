{
  "id": "614385513d91ae5c251c2052",
  "title": "Step 2",
  "challengeType": 0,
  "dashedName": "step-2",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        2,
        7
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  </head>\n  <body>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your code should have three self-closing <code>link</code> elements.</p>",
      "testString": "assert(document.querySelectorAll('link').length === 3);"
    },
    {
      "text": "<p>Your <code>link</code> element should be within your <code>head</code> element.</p>",
      "testString": "assert(document.querySelectorAll('head > link').length === 3);"
    },
    {
      "text": "<p>Your three <code>link</code> elements should have a <code>rel</code> attribute with the value <code>stylesheet</code>.</p>",
      "testString": "const links = [...document.querySelectorAll('link')];\nassert(links.every(link => link.getAttribute('rel') === 'stylesheet'));"
    },
    {
      "text": "<p>One of your link elements should have the <code>href</code> set to <code>https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&#x26;display=swap</code>.</p>",
      "testString": "const links = [...document.querySelectorAll('link')];\nassert(links.find(link => link.getAttribute('href') === 'https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&display=swap'));"
    },
    {
      "text": "<p>One of your link elements should have the <code>href</code> set to <code>https://use.fontawesome.com/releases/v5.8.2/css/all.css</code>.</p>",
      "testString": "const links = [...document.querySelectorAll('link')];\nassert(links.find(link => link.getAttribute('href') === 'https://use.fontawesome.com/releases/v5.8.2/css/all.css'));"
    },
    {
      "text": "<p>One of your <code>link</code> elements should have an <code>href</code> attribute with the value <code>styles.css</code>.</p>",
      "testString": "assert.match(code, /<link[\\s\\S]*?href\\s*=\\s*('|\"|`)(\\.\\/)?styles\\.css\\1/)"
    },
    {
      "text": "<p>Your code should have a <code>title</code> element.</p>",
      "testString": "const title = document.querySelector('title');\nassert.exists(title);"
    },
    {
      "text": "<p>Your project should have a title of <code>Magazine</code>.</p>",
      "testString": "const title = document.querySelector('title');\nassert.equal(title?.text?.trim()?.toLowerCase(), 'magazine')"
    },
    {
      "text": "<p>Remember, the casing and spelling matter for the title.</p>",
      "testString": "const title = document.querySelector('title');\nassert.equal(title?.text?.trim(), 'Magazine');"
    }
  ],
  "description": "<section id=\"description\">\n<p>Add a <code>title</code> element with the text <code>Magazine</code>, a <code>link</code> element for the <code>https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&#x26;display=swap</code> font stylesheet, a <code>link</code> for the <code>https://use.fontawesome.com/releases/v5.8.2/css/all.css</code> FontAwesome stylesheet, and a <code>link</code> for your <code>./styles.css</code> stylesheet.</p>\n<p>Your font stylesheet will load three separate fonts: <code>Anton</code>, <code>Baskervville</code>, and <code>Raleway</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-grid-by-building-a-magazine",
  "hasEditableBoundaries": true,
  "order": 15,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 1,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}