{
  "id": "614387cbefeeba5f3654a291",
  "title": "Step 7",
  "challengeType": 0,
  "dashedName": "step-7",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        33,
        37
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Magazine</title>\n    <link\n      href=\"https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n    />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n  <body>\n    <main>\n      <section class=\"heading\">\n        <header class=\"hero\">\n          <img\n            src=\"https://cdn.freecodecamp.org/platform/universal/fcc_meta_1920X1080-indigo.png\"\n            alt=\"freecodecamp logo\"\n            loading=\"lazy\"\n            class=\"hero-img\"\n            width=\"400\"\n          />\n          <h1 class=\"hero-title\">OUR NEW CURRICULUM</h1>\n          <p class=\"hero-subtitle\">\n            Our efforts to restructure our curriculum with a more project-based\n            focus\n          </p>\n        </header>\n\n      </section>\n    </main>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Magazine</title>\n    <link\n      href=\"https://fonts.googleapis.com/css?family=Anton%7CBaskervville%7CRaleway&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://use.fontawesome.com/releases/v5.8.2/css/all.css\"\n    />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n  <body>\n    <main>\n      <section class=\"heading\">\n        <header class=\"hero\">\n          <img\n            src=\"https://cdn.freecodecamp.org/platform/universal/fcc_meta_1920X1080-indigo.png\"\n            alt=\"freecodecamp logo\"\n            loading=\"lazy\"\n            class=\"hero-img\"\n            width=\"400\"\n          />\n          <h1 class=\"hero-title\">OUR NEW CURRICULUM</h1>\n          <p class=\"hero-subtitle\">\n            Our efforts to restructure our curriculum with a more project-based\n            focus\n          </p>\n        </header>\n\n      </section>\n    </main>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should create a new <code>div</code> element.</p>",
      "testString": "assert.exists(document.querySelector('div'));"
    },
    {
      "text": "<p>Your <code>div</code> element should come after your <code>header</code> element.</p>",
      "testString": "assert(document.querySelector('div')?.previousElementSibling?.localName === 'header');"
    },
    {
      "text": "<p>Your <code>div</code> element should have the <code>class</code> set to <code>author</code>.</p>",
      "testString": "assert(document.querySelector('div')?.className === 'author');"
    },
    {
      "text": "<p>You should create two new <code>p</code> elements.</p>",
      "testString": "assert(document.querySelectorAll('p')?.length === 3);"
    },
    {
      "text": "<p>Your two new <code>p</code> elements should be within your <code>div</code> element.</p>",
      "testString": "assert.exists(document.querySelector('div')?.querySelectorAll('p')?.length === 2);"
    },
    {
      "text": "<p>Your first new <code>p</code> element should have a <code>class</code> set to <code>author-name</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.className === 'author-name');"
    },
    {
      "text": "<p>Your first new <code>p</code> element should have the text <code>By freeCodeCamp</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.innerText === 'By freeCodeCamp');"
    },
    {
      "text": "<p>Your second new <code>p</code> element should have a <code>class</code> set to <code>publish-date</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelectorAll('p')?.[1]?.className === 'publish-date');"
    },
    {
      "text": "<p>Your second new <code>p</code> element should have the text <code>March 7, 2019</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelectorAll('p')?.[1]?.innerText === 'March 7, 2019');"
    },
    {
      "text": "<p>You should create a new <code>a</code> element.</p>",
      "testString": "assert.exists(document.querySelector('a'));"
    },
    {
      "text": "<p>Your <code>a</code> element should be within your first new <code>p</code> element.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.firstElementChild?.localName === 'a');"
    },
    {
      "text": "<p>Your <code>a</code> element should have the <code>href</code> set to <code>https://freecodecamp.org</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.firstElementChild?.getAttribute('href') === 'https://freecodecamp.org');"
    },
    {
      "text": "<p>Your <code>a</code> element should have the <code>target</code> set to <code>_blank</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.firstElementChild?.getAttribute('target') === '_blank');"
    },
    {
      "text": "<p>Your <code>a</code> element should surround the text <code>freeCodeCamp</code>.</p>",
      "testString": "assert(document.querySelector('div')?.querySelector('p')?.firstElementChild?.innerText === 'freeCodeCamp');"
    }
  ],
  "description": "<section id=\"description\">\n<p>After your <code>header</code> element, create a <code>div</code> with the <code>class</code> set to <code>author</code>.</p>\n<p>Within that <code>div</code>, create a <code>p</code> element with the <code>class</code> set to <code>author-name</code> and give it the text <code>By freeCodeCamp</code>. Wrap the <code>freeCodeCamp</code> portion in an <code>a</code> element with the <code>href</code> set to <code>https://freecodecamp.org</code>, and the <code>target</code> set to <code>_blank</code>.</p>\n<p>Below that, add a second <code>p</code> element with the class <code>publish-date</code> and the text <code>March 7, 2019</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-grid-by-building-a-magazine",
  "hasEditableBoundaries": true,
  "order": 15,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 6,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}