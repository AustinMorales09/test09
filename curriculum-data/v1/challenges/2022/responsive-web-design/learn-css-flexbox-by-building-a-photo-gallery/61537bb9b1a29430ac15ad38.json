{
  "id": "61537bb9b1a29430ac15ad38",
  "title": "Step 3",
  "challengeType": 0,
  "dashedName": "step-3",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        0,
        11
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    \n  </head>\n  <body>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    \n  </head>\n  <body>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>link</code> element should have an <code>href</code> attribute with the value <code>styles.css</code>.</p>",
      "testString": "assert.match(code, /<link[\\s\\S]*?href=('|\"|`)(\\.\\/)?styles\\.css\\1/)"
    },
    {
      "text": "<p>Your code should have a <code>title</code> element.</p>",
      "testString": "const title = document.querySelector('title');\nassert.exists(title);"
    },
    {
      "text": "<p>Your project should have a title of <code>Photo Gallery</code>.</p>",
      "testString": "const title = document.querySelector('title');\nassert.equal(title?.text?.trim()?.toLowerCase(), 'photo gallery')"
    },
    {
      "text": "<p>Remember, the casing and spelling matter for the title.</p>",
      "testString": "const title = document.querySelector('title');\nassert.equal(title?.text?.trim(), 'Photo Gallery');"
    }
  ],
  "description": "<section id=\"description\">\n<p>Within your <code>head</code> element, add a <code>title</code> element with the text set to <code>Photo Gallery</code>, and a <code>link</code> element to add your <code>styles.css</code> file to the page.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-flexbox-by-building-a-photo-gallery",
  "hasEditableBoundaries": true,
  "order": 6,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 2,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}