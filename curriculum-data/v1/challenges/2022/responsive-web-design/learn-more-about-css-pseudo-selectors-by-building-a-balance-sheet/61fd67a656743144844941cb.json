{
  "id": "61fd67a656743144844941cb",
  "title": "Step 4",
  "challengeType": 0,
  "dashedName": "step-4",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        12,
        15
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Balance Sheet</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <main>\n      <section>\n        <h1>\n          <span>\n          </span>\n        </h1>\n      </section>\n    </main>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Balance Sheet</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <main>\n      <section>\n        <h1>\n          <span>\n          </span>\n        </h1>\n      </section>\n    </main>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "",
      "error": null,
      "seed": ""
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your existing <code>span</code> element should have the <code>class</code> attribute set to <code>flex</code>.</p>",
      "testString": "assert(document.querySelector('h1')?.children?.[0]?.classList?.contains('flex'));"
    },
    {
      "text": "<p>Your existing <code>span</code> element should have two new <code>span</code> elements within it.</p>",
      "testString": "assert(document.querySelector('.flex')?.children?.[0]?.localName === 'span');\nassert(document.querySelector('.flex')?.children?.[1]?.localName === 'span');"
    },
    {
      "text": "<p>Your new <code>span</code> elements should not have a <code>class</code> attribute.</p>",
      "testString": "assert(!document.querySelector('.flex')?.children?.[0]?.classList?.length);\nassert(!document.querySelector('.flex')?.children?.[1]?.classList?.length);"
    },
    {
      "text": "<p>Your first new <code>span</code> element should have the text <code>AcmeWidgetCorp</code>.</p>",
      "testString": "assert(document.querySelector('.flex')?.children?.[0]?.textContent === 'AcmeWidgetCorp');"
    },
    {
      "text": "<p>Your second new <code>span</code> element should have the text <code>Balance Sheet</code>.</p>",
      "testString": "assert(document.querySelector('.flex')?.children?.[1]?.textContent === 'Balance Sheet');"
    }
  ],
  "description": "<section id=\"description\">\n<p>Screen readers announce HTML elements based on the document flow. We will eventually want the balance sheet to have a heading of \"Balance Sheet\" and a subheading of \"AcmeWidgetCorp\". However, this order does not make sense if announced by a screen reader.</p>\n<p>Give your existing <code>span</code> the <code>class</code> attribute set to <code>flex</code>, and add two <code>span</code> elements within it. Give the first the text <code>AcmeWidgetCorp</code>. Give the second the text <code>Balance Sheet</code>. You will use CSS to reverse the order of the text on the page, but the HTML order will make more sense for a screen reader.</p>\n</section>",
  "translationPending": false,
  "block": "learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet",
  "hasEditableBoundaries": true,
  "order": 10,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 3,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}