{
  "id": "5d822fd413a79914d39e98da",
  "title": "Step 18",
  "challengeType": 0,
  "dashedName": "step-18",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        16,
        18
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">    \n  <head>\n    <meta charset=\"UTF-8\">\n    <title>City Skyline</title>\n    <link href=\"styles.css\" rel=\"stylesheet\" />   \n  </head>\n\n  <body>\n    <div class=\"background-buildings\">\n      <div class=\"bb1\">\n        <div class=\"bb1a\"></div>\n        <div class=\"bb1b\"></div>\n        <div class=\"bb1c\"></div>\n        <div class=\"bb1d\"></div>\n      </div>\n\n    </div>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">    \n  <head>\n    <meta charset=\"UTF-8\">\n    <title>City Skyline</title>\n    <link href=\"styles.css\" rel=\"stylesheet\" />   \n  </head>\n\n  <body>\n    <div class=\"background-buildings\">\n      <div class=\"bb1\">\n        <div class=\"bb1a\"></div>\n        <div class=\"bb1b\"></div>\n        <div class=\"bb1c\"></div>\n        <div class=\"bb1d\"></div>\n      </div>\n\n    </div>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "* {\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100vh;\n  margin: 0;\n  overflow: hidden;\n}\n\n.background-buildings {\n  width: 100%;\n  height: 100%;\n}\n\n.bb1 {\n  width: 10%;\n  height: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  --building-color1: #aa80ff;\n}\n\n.bb1a {\n  width: 70%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1b {\n  width: 80%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1c {\n  width: 90%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1d {\n  width: 100%;\n  height: 70%;\n  background-color: var(--building-color1);\n}\n    ",
      "error": null,
      "seed": "* {\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100vh;\n  margin: 0;\n  overflow: hidden;\n}\n\n.background-buildings {\n  width: 100%;\n  height: 100%;\n}\n\n.bb1 {\n  width: 10%;\n  height: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  --building-color1: #aa80ff;\n}\n\n.bb1a {\n  width: 70%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1b {\n  width: 80%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1c {\n  width: 90%;\n  height: 10%;\n  background-color: var(--building-color1);\n}\n\n.bb1d {\n  width: 100%;\n  height: 70%;\n  background-color: var(--building-color1);\n}\n    "
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should create a <code>div</code> with a class of <code>bb2</code>.</p>",
      "testString": "assert.exists(document.querySelector('div.bb2'));"
    },
    {
      "text": "<p>You should create a <code>div</code> with a class of <code>bb3</code>.</p>",
      "testString": "assert.exists(document.querySelector('div.bb3'));"
    },
    {
      "text": "<p>You should create a <code>div</code> with a class of <code>bb4</code>.</p>",
      "testString": "assert.exists(document.querySelector('div.bb4'));"
    },
    {
      "text": "<p>You should create 3 new <code>div</code> elements.</p>",
      "testString": "assert.equal(document.querySelectorAll('div')?.length, 9);"
    },
    {
      "text": "<p>You should place these <code>div</code> elements within the <code>.background-buildings</code> element.</p>",
      "testString": "assert.equal(document.querySelector('div.background-buildings')?.children?.length, 4);"
    },
    {
      "text": "<p>You should place the elements in the correct order.</p>",
      "testString": "function __t(a, b) {\n  return [...document.querySelector(a)?.nextElementSibling?.classList]?.includes(b);\n}\nassert(__t('div.bb1','bb2') && __t('div.bb2','bb3') && __t('div.bb3','bb4'));"
    }
  ],
  "description": "<section id=\"description\">\n<p>Your first building looks pretty good now. Nest three new <code>div</code> elements in the <code>.background-buildings</code> container and give them the classes of <code>bb2</code>, <code>bb3</code>, and <code>bb4</code> in that order. These will be three more buildings for the background.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-variables-by-building-a-city-skyline",
  "hasEditableBoundaries": true,
  "order": 14,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 17,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}