{
  "id": "612eaf56b7ba3257fdbfb0db",
  "title": "Step 21",
  "challengeType": 0,
  "dashedName": "step-21",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        9,
        12
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Piano</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div id=\"piano\">\n      <div class=\"keys\">\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n      </div>\n    </div>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Piano</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n  </head>\n  <body>\n    <div id=\"piano\">\n      <div class=\"keys\">\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n        <div class=\"key black--key\"></div>\n      </div>\n    </div>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "html {\n  box-sizing: border-box;\n}\n\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n\n#piano {\n  background-color: #00471b;\n  width: 992px;\n  height: 290px;\n  margin: 80px auto;\n  padding: 90px 20px 0 20px;\n}\n\n.keys {\n  background-color: #040404;\n  width: 949px;\n  height: 180px;\n  padding-left: 2px;\n}\n\n.key {\n  background-color: #ffffff;\n  position: relative;\n  width: 41px;\n  height: 175px;\n  margin: 2px;\n  float: left;\n}\n\n.key.black--key::after {\n  background-color: #1d1e22;\n  content: \"\";\n  position: absolute;\n  left: -18px;\n  width: 32px;\n  height: 100px;\n}",
      "error": null,
      "seed": "html {\n  box-sizing: border-box;\n}\n\n*, *::before, *::after {\n  box-sizing: inherit;\n}\n\n#piano {\n  background-color: #00471b;\n  width: 992px;\n  height: 290px;\n  margin: 80px auto;\n  padding: 90px 20px 0 20px;\n}\n\n.keys {\n  background-color: #040404;\n  width: 949px;\n  height: 180px;\n  padding-left: 2px;\n}\n\n.key {\n  background-color: #ffffff;\n  position: relative;\n  width: 41px;\n  height: 175px;\n  margin: 2px;\n  float: left;\n}\n\n.key.black--key::after {\n  background-color: #1d1e22;\n  content: \"\";\n  position: absolute;\n  left: -18px;\n  width: 32px;\n  height: 100px;\n}"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should add a new <code>img</code> element.</p>",
      "testString": "assert(document.querySelectorAll('img')?.length === 1);"
    },
    {
      "text": "<p>Your <code>img</code> element should come before your first <code>.keys</code> element.</p>",
      "testString": "const img = document.querySelector('img');\nassert(img?.nextElementSibling?.className === 'keys');\nassert(img?.previousElementSibling === null);"
    },
    {
      "text": "<p>Your <code>img</code> element should have a <code>class</code> set to <code>logo</code>.</p>",
      "testString": "const img = document.querySelector('img');\nassert(img?.className === 'logo');"
    },
    {
      "text": "<p>Your <code>img</code> element should have a <code>src</code> set to <code>https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg</code>.</p>",
      "testString": "const img = document.querySelector('img');\nassert(img?.getAttribute('src') === 'https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg');"
    },
    {
      "text": "<p>Your <code>img</code> element should have an <code>alt</code> attribute set to <code>freeCodeCamp Logo</code>.</p>",
      "testString": "assert(document.querySelector('img')?.getAttribute('alt')?.toLowerCase() === 'freecodecamp logo');"
    },
    {
      "text": "<p>Remember that casing and spelling matter.</p>",
      "testString": "assert(document.querySelector('img')?.getAttribute('alt') === 'freeCodeCamp Logo');"
    }
  ],
  "description": "<section id=\"description\">\n<p>The piano needs the freeCodeCamp logo to make it official.</p>\n<p>Add an <code>img</code> element before your <code>.keys</code> element. Give the <code>img</code> a <code>class</code> of <code>logo</code>, and set the <code>src</code> to <code>https://cdn.freecodecamp.org/platform/universal/fcc_primary.svg</code>. Give it an <code>alt</code> text of <code>freeCodeCamp Logo</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-responsive-web-design-by-building-a-piano",
  "hasEditableBoundaries": true,
  "order": 12,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 20,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}