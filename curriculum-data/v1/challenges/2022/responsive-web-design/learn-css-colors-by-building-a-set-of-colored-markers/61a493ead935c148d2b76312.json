{
  "id": "61a493ead935c148d2b76312",
  "title": "Step 50",
  "challengeType": 0,
  "dashedName": "step-50",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Colored Markers</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n  </head>\n  <body>\n    <h1>CSS Color Markers</h1>\n    <div class=\"container\">\n      <div class=\"marker red\">\n      </div>\n      <div class=\"marker green\">\n      </div>\n      <div class=\"marker blue\">\n      </div>\n    </div>\n  </body>\n</html>",
      "error": null,
      "seed": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Colored Markers</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n  </head>\n  <body>\n    <h1>CSS Color Markers</h1>\n    <div class=\"container\">\n      <div class=\"marker red\">\n      </div>\n      <div class=\"marker green\">\n      </div>\n      <div class=\"marker blue\">\n      </div>\n    </div>\n  </body>\n</html>"
    },
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        15,
        19
      ],
      "history": [
        "styles.css"
      ],
      "name": "styles",
      "ext": "css",
      "path": "styles.css",
      "fileKey": "stylescss",
      "contents": "h1 {\n  text-align: center;\n}\n\n.container {\n  background-color: rgb(255, 255, 255);\n  padding: 10px 0;\n}\n\n.marker {\n  width: 200px;\n  height: 25px;\n  margin: 10px auto;\n}\n\n.red {\n  background: rgb(255, 0, 0);\n}\n\n.green {\n  background-color: #007F00;\n}\n\n.blue {\n  background-color: hsl(240, 100%, 50%);\n}\n",
      "error": null,
      "seed": "h1 {\n  text-align: center;\n}\n\n.container {\n  background-color: rgb(255, 255, 255);\n  padding: 10px 0;\n}\n\n.marker {\n  width: 200px;\n  height: 25px;\n  margin: 10px auto;\n}\n\n.red {\n  background: rgb(255, 0, 0);\n}\n\n.green {\n  background-color: #007F00;\n}\n\n.blue {\n  background-color: hsl(240, 100%, 50%);\n}\n"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Your <code>.red</code> CSS rule should have a <code>background</code> property with the value <code>linear-gradient(90deg)</code>.</p>",
      "testString": "assert.match(__helpers.removeWhiteSpace(code), /\\.red\\{.*?background:linear-gradient\\(90deg\\)/);"
    }
  ],
  "description": "<section id=\"description\">\n<p>The <code>linear-gradient</code> function is very flexible -- here is the basic syntax you'll use in this tutorial:</p>\n<pre><code class=\"language-css\">linear-gradient(gradientDirection, color1, color2, ...);\n</code></pre>\n<p><code>gradientDirection</code> is the direction of the line used for the transition. <code>color1</code> and <code>color2</code> are color arguments, which are the colors that will be used in the transition itself. These can be any type of color, including color keywords, hex, <code>rgb</code>, or <code>hsl</code>.</p>\n<p>Now you'll apply a red-to-green gradient along a 90 degree line to the first marker.</p>\n<p>First, in the <code>.red</code> CSS rule, set the <code>background</code> property to <code>linear-gradient()</code>, and pass it the value <code>90deg</code> as the <code>gradientDirection</code>.</p>\n</section>",
  "translationPending": false,
  "block": "learn-css-colors-by-building-a-set-of-colored-markers",
  "hasEditableBoundaries": true,
  "order": 2,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 49,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}