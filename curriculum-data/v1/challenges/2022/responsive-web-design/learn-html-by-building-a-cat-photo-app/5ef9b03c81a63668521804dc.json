{
  "id": "5ef9b03c81a63668521804dc",
  "title": "Step 44",
  "challengeType": 0,
  "dashedName": "step-44",
  "challengeFiles": [
    {
      "head": "",
      "tail": "",
      "id": "",
      "editableRegionBoundaries": [
        36,
        39
      ],
      "history": [
        "index.html"
      ],
      "name": "index",
      "ext": "html",
      "path": "index.html",
      "fileKey": "indexhtml",
      "contents": "<html>\n  <body>\n    <main>\n      <h1>CatPhotoApp</h1>\n      <section>\n        <h2>Cat Photos</h2>\n        <!-- TODO: Add link to cat photos -->\n        <p>See more <a target=\"_blank\" href=\"https://freecatphotoapp.com\">cat photos</a> in our gallery.</p>\n        <a href=\"https://freecatphotoapp.com\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n      </section>\n      <section>\n        <h2>Cat Lists</h2>\n        <h3>Things cats love:</h3>\n        <ul>\n          <li>cat nip</li>\n          <li>laser pointers</li>\n          <li>lasagna</li>\n        </ul>\n        <figure>\n          <img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg\" alt=\"A slice of lasagna on a plate.\">\n          <figcaption>Cats <em>love</em> lasagna.</figcaption>  \n        </figure>\n        <h3>Top 3 things cats hate:</h3>\n        <ol>\n          <li>flea treatment</li>\n          <li>thunder</li>\n          <li>other cats</li>\n        </ol>\n        <figure>\n          <img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/cats.jpg\" alt=\"Five cats looking around a field.\">\n          <figcaption>Cats <strong>hate</strong> other cats.</figcaption>  \n        </figure>\n      </section>\n      <section>\n        <h2>Cat Form</h2>\n        <form action=\"https://freecatphotoapp.com/submit-cat-photo\">\n \n          <input type=\"text\" name=\"catphotourl\" placeholder=\"cat photo URL\" required>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </section>\n    </main>\n  </body>\n</html>",
      "error": null,
      "seed": "<html>\n  <body>\n    <main>\n      <h1>CatPhotoApp</h1>\n      <section>\n        <h2>Cat Photos</h2>\n        <!-- TODO: Add link to cat photos -->\n        <p>See more <a target=\"_blank\" href=\"https://freecatphotoapp.com\">cat photos</a> in our gallery.</p>\n        <a href=\"https://freecatphotoapp.com\"><img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n      </section>\n      <section>\n        <h2>Cat Lists</h2>\n        <h3>Things cats love:</h3>\n        <ul>\n          <li>cat nip</li>\n          <li>laser pointers</li>\n          <li>lasagna</li>\n        </ul>\n        <figure>\n          <img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/lasagna.jpg\" alt=\"A slice of lasagna on a plate.\">\n          <figcaption>Cats <em>love</em> lasagna.</figcaption>  \n        </figure>\n        <h3>Top 3 things cats hate:</h3>\n        <ol>\n          <li>flea treatment</li>\n          <li>thunder</li>\n          <li>other cats</li>\n        </ol>\n        <figure>\n          <img src=\"https://cdn.freecodecamp.org/curriculum/cat-photo-app/cats.jpg\" alt=\"Five cats looking around a field.\">\n          <figcaption>Cats <strong>hate</strong> other cats.</figcaption>  \n        </figure>\n      </section>\n      <section>\n        <h2>Cat Form</h2>\n        <form action=\"https://freecatphotoapp.com/submit-cat-photo\">\n \n          <input type=\"text\" name=\"catphotourl\" placeholder=\"cat photo URL\" required>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </section>\n    </main>\n  </body>\n</html>"
    }
  ],
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>You should create an <code>input</code> element for your radio button. Check the syntax.</p>",
      "testString": "assert($('form > input').length >= 2);"
    },
    {
      "text": "<p>Your <code>input</code> element should have an opening tag, but not a closing tag.</p>",
      "testString": "assert($('form > input') && !code.match(/<\\/input\\>/g));"
    },
    {
      "text": "<p>You should only have added one <code>input</code> element for your radio button. Remove any extras.</p>",
      "testString": "assert($('form > input').length === 2);"
    },
    {
      "text": "<p>Your new <code>input</code> element should be above the existing <code>input</code> with <code>type</code> attribute set to <code>text</code>. You have them in the wrong order.</p>",
      "testString": "const existingInputElem = document.querySelector('form > input[type=\"text\"]');\nassert(\n  existingInputElem &&\n    existingInputElem.previousElementSibling.nodeName === 'INPUT'\n);"
    },
    {
      "text": "<p>Your new <code>input</code> element does not have a <code>type</code> attribute. Check that there is a space after the opening tag's name.</p>",
      "testString": "assert($('input')[0].hasAttribute('type'));"
    },
    {
      "text": "<p>Your new <code>input</code> element should have only one <code>type</code> attribute. Remove any extras.</p>",
      "testString": "assert($('input')[0]\n  .getAttributeNames()\n  .filter(attr => attr === 'type')\n  .length === 1\n);"
    },
    {
      "text": "<p>Your new <code>input</code> element should have a <code>type</code> attribute with the value <code>radio</code>. You have either omitted the value or have a typo. Remember that attribute values should be surrounded with quotation marks.</p>",
      "testString": "assert(\n  $('input')[0]\n    .getAttribute('type')\n    .match(/^radio$/i)\n);"
    },
    {
      "text": "<p>Although you have set the new <code>input</code> element's <code>type</code> attribute to <code>radio</code>, it is recommended to always surround the value of an attribute with quotation marks.</p>",
      "testString": "assert(!/\\<\\s*input\\s+type\\s*=\\s*radio/i.test(code));"
    },
    {
      "text": "<p>The <code>radio</code> button's <code> Indoor</code> text should be located after it instead of before it.</p>",
      "testString": "const radioInputElem = $('input')[0];\nassert(!radioInputElem.previousSibling.nodeValue.match(/Indoor/i));"
    },
    {
      "text": "<p>The text <code> Indoor</code> should be located directly to the right of your <code>radio</code> button. You have either omitted the text or have a typo.</p>",
      "testString": "const radioInputElem = $('input')[0];\nassert(\n  radioInputElem.nextSibling.nodeValue.replace(/\\s+/g, ' ').match(/\\s*Indoor/i)\n);"
    }
  ],
  "description": "<section id=\"description\">\n<p>You can use radio buttons for questions where you want only one answer out of multiple options.</p>\n<p>Here is an example of a radio button with the option of <code>cat</code>:</p>\n<pre><code class=\"language-html\">&#x3C;input type=\"radio\"> cat\n</code></pre>\n<p>Remember that <code>input</code> elements are <dfn>self-closing</dfn>.</p>\n<p>Before the text input, add a radio button with the option set as:</p>\n<p><code>Indoor</code></p>\n</section>",
  "translationPending": false,
  "block": "learn-html-by-building-a-cat-photo-app",
  "hasEditableBoundaries": true,
  "order": 0,
  "superOrder": 0,
  "certification": "responsive-web-design",
  "superBlock": "2022/responsive-web-design",
  "challengeOrder": 43,
  "required": [],
  "helpCategory": "HTML-CSS",
  "usesMultifileEditor": true,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}