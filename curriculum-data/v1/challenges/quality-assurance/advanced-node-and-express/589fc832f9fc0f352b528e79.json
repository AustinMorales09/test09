{
  "id": "589fc832f9fc0f352b528e79",
  "title": "Send and Display Chat Messages",
  "challengeType": 2,
  "forumTopicId": 301562,
  "dashedName": "send-and-display-chat-messages",
  "solutions": [],
  "assignments": [],
  "tests": [
    {
      "text": "<p>Server should listen for <code>'chat message'</code> and then emit it properly.</p>",
      "testString": "async (getUserInput) => {\n  const url = new URL(\"/_api/server.js\", getUserInput(\"url\"));\n  const res = await fetch(url);\n  const data = await res.text();\n  assert.match(\n    data,\n    /socket.on.*('|\")chat message('|\")[^]*io.emit.*('|\")chat message('|\").*username.*message/s,\n    'Your server should listen to the socket for \"chat message\" then emit to all users \"chat message\" with name and message in the data object'\n  );\n}"
    },
    {
      "text": "<p>Client should properly handle and display the new data from event <code>'chat message'</code>.</p>",
      "testString": "async (getUserInput) => {\n  const url = new URL(\"/public/client.js\", getUserInput(\"url\"));\n  const res = await fetch(url);\n  const data = await res.text();\n  assert.match(\n    data,\n    /socket.on.*('|\")chat message('|\")[^]*messages.*li/s,\n    'You should append a list item to #messages on your client within the \"chat message\" event listener to display the new message'\n  );\n}"
    }
  ],
  "description": "<section id=\"description\">\n<p>It's time you start allowing clients to send a chat message to the server to emit to all the clients! In your <code>client.js</code> file, you should see there is already a block of code handling when the message form is submitted.</p>\n<pre><code class=\"language-js\">$('form').submit(function() {\n  /*logic*/\n});\n</code></pre>\n<p>Within the form submit code, you should emit an event after you define <code>messageToSend</code> but before you clear the text box <code>#m</code>. The event should be named <code>'chat message'</code> and the data should just be <code>messageToSend</code>.</p>\n<pre><code class=\"language-js\">socket.emit('chat message', messageToSend);\n</code></pre>\n<p>Now, on your server, you should be listening to the socket for the event <code>'chat message'</code> with the data being named <code>message</code>. Once the event is received, it should emit the event <code>'chat message'</code> to all sockets using <code>io.emit</code>, sending a data object containing the <code>username</code> and <code>message</code>.</p>\n<p>In <code>client.js</code>, you should now listen for event <code>'chat message'</code> and, when received, append a list item to <code>#messages</code> with the username, a colon, and the message!</p>\n<p>At this point, the chat should be fully functional and sending messages across all clients!</p>\n<p>Submit your page when you think you've got it right. If you're running into errors, you can <a href=\"https://forum.freecodecamp.org/t/advanced-node-and-express/567135#send-and-display-chat-messages-11\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">check out the project completed up to this point</a>.</p>\n</section>",
  "translationPending": false,
  "block": "advanced-node-and-express",
  "hasEditableBoundaries": false,
  "order": 1,
  "superOrder": 6,
  "certification": "quality-assurance",
  "superBlock": "quality-assurance",
  "challengeOrder": 21,
  "required": [],
  "helpCategory": "JavaScript",
  "usesMultifileEditor": false,
  "disableLoopProtectTests": false,
  "disableLoopProtectPreview": false
}