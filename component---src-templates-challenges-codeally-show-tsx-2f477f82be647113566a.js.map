{"version":3,"file":"component---src-templates-challenges-codeally-show-tsx-2f477f82be647113566a.js","mappings":"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","sources":["webpack://@freecodecamp/client/./src/components/growth-book/codeally-down.tsx","webpack://@freecodecamp/client/./src/components/growth-book/codeally-button.tsx","webpack://@freecodecamp/client/./src/templates/Challenges/codeally/show.tsx","webpack://@freecodecamp/client/./src/templates/Challenges/components/challenge-heading.tsx"],"sourcesContent":["import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Alert } from '@freecodecamp/ui';\nimport { useFeature } from '@growthbook/growthbook-react';\nimport Spacer from '../../components/helpers/spacer';\n\nconst Down = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert variant='danger'>\n      <p>\n        <Trans i18nKey='intro:misc-text.course-maintenance'>\n          <a\n            href='https://www.freecodecamp.org/news/how-to-run-freecodecamps-relational-databases-curriculum-using-docker-vscode-and-coderoad'\n            rel='noreferrer'\n            target='_blank'\n          >\n            placeholder\n          </a>\n        </Trans>\n      </p>\n      <Spacer size='small' />\n      <p>{t('intro:misc-text.progress-wont-save')}</p>\n    </Alert>\n  );\n};\n\nconst Disabled = () => {\n  const { t } = useTranslation();\n  return (\n    <Alert variant='danger'>\n      <p>\n        <Trans i18nKey='intro:misc-text.course-disabled'>\n          <a\n            href='https://www.freecodecamp.org/news/how-to-run-freecodecamps-relational-databases-curriculum-using-docker-vscode-and-coderoad'\n            rel='noreferrer'\n            target='_blank'\n          >\n            placeholder\n          </a>\n        </Trans>\n      </p>\n      <Spacer size='small' />\n      <p>{t('intro:misc-text.progress-wont-save')}</p>\n    </Alert>\n  );\n};\n\nexport function CodeAllyDown(): JSX.Element | null {\n  const codeAllyDownFeature = useFeature('codeally_down');\n  const codeAllyDisabledFeature = useFeature('codeally_disabled');\n\n  return codeAllyDisabledFeature.on ? (\n    <Disabled />\n  ) : codeAllyDownFeature.on ? (\n    <Down />\n  ) : null;\n}\n","import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { useFeature } from '@growthbook/growthbook-react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@freecodecamp/ui';\n\ninterface CodeAllyButtonProps {\n  text: string;\n  onClick: () => void;\n}\n\nexport function CodeAllyButton(props: CodeAllyButtonProps): JSX.Element | null {\n  const codeAllyDisabledFeature = useFeature('codeally_disabled');\n  const { t } = useTranslation();\n\n  return (\n    <Button\n      onClick={codeAllyDisabledFeature.on ? () => {} : props.onClick}\n      disabled={codeAllyDisabledFeature.on}\n      variant='primary'\n      block={true}\n    >\n      <span className='sr-only'>, {t('aria.opens-new-window')}</span>\n      {props.text}&nbsp;&nbsp;\n      <FontAwesomeIcon icon={faExternalLinkAlt} />\n    </Button>\n  );\n}\n","// Package Utilities\nimport { graphql } from 'gatsby';\nimport React, { Component } from 'react';\nimport Helmet from 'react-helmet';\nimport type { TFunction } from 'i18next';\nimport { Trans, withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport type { Dispatch } from 'redux';\nimport { createSelector } from 'reselect';\nimport { Container, Col, Row, Alert } from '@freecodecamp/ui';\n\n// Local Utilities\nimport Spacer from '../../../components/helpers/spacer';\nimport LearnLayout from '../../../components/layouts/learn';\nimport ChallengeTitle from '../components/challenge-title';\nimport ChallengeHeading from '../components/challenge-heading';\nimport PrismFormatted from '../components/prism-formatted';\nimport { challengeTypes } from '../../../../../shared/config/challenge-types';\nimport CompletionModal from '../components/completion-modal';\nimport HelpModal from '../components/help-modal';\nimport Hotkeys from '../components/hotkeys';\nimport { updateUserToken } from '../../../redux/actions';\nimport {\n  completedChallengesSelector,\n  partiallyCompletedChallengesSelector,\n  isSignedInSelector,\n  userTokenSelector\n} from '../../../redux/selectors';\nimport {\n  challengeMounted,\n  updateChallengeMeta,\n  openModal,\n  updateSolutionFormValues,\n  initTests\n} from '../redux/actions';\nimport { isChallengeCompletedSelector } from '../redux/selectors';\nimport { createFlashMessage } from '../../../components/Flash/redux';\nimport {\n  ChallengeNode,\n  ChallengeMeta,\n  CompletedChallenge,\n  Test\n} from '../../../redux/prop-types';\nimport ProjectToolPanel from '../projects/tool-panel';\nimport SolutionForm from '../projects/solution-form';\nimport { FlashMessages } from '../../../components/Flash/redux/flash-messages';\nimport { SuperBlocks } from '../../../../../shared/config/superblocks';\nimport { CodeAllyDown } from '../../../components/growth-book/codeally-down';\nimport { postUserToken } from '../../../utils/ajax';\n\nimport './codeally.css';\nimport { CodeAllyButton } from '../../../components/growth-book/codeally-button';\n\n// Redux\nconst mapStateToProps = createSelector(\n  completedChallengesSelector,\n  isChallengeCompletedSelector,\n  isSignedInSelector,\n  partiallyCompletedChallengesSelector,\n  userTokenSelector,\n  (\n    completedChallenges: CompletedChallenge[],\n    isChallengeCompleted: boolean,\n    isSignedIn: boolean,\n    partiallyCompletedChallenges: CompletedChallenge[],\n    userToken: string | null\n  ) => ({\n    completedChallenges,\n    isChallengeCompleted,\n    isSignedIn,\n    partiallyCompletedChallenges,\n    userToken\n  })\n);\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      challengeMounted,\n      createFlashMessage,\n      openCompletionModal: () => openModal('completion'),\n      initTests,\n      updateUserToken,\n      updateChallengeMeta,\n      updateSolutionFormValues\n    },\n    dispatch\n  );\n\n// Types\ninterface ShowCodeAllyProps {\n  challengeMounted: (arg0: string) => void;\n  completedChallenges: CompletedChallenge[];\n  createFlashMessage: typeof createFlashMessage;\n  data: { challengeNode: ChallengeNode };\n  initTests: (xs: Test[]) => void;\n  isChallengeCompleted: boolean;\n  isSignedIn: boolean;\n  openCompletionModal: () => void;\n  pageContext: {\n    challengeMeta: ChallengeMeta;\n  };\n  partiallyCompletedChallenges: CompletedChallenge[];\n  t: TFunction;\n  updateChallengeMeta: (arg0: ChallengeMeta) => void;\n  updateUserToken: (arg0: string) => void;\n  updateSolutionFormValues: () => void;\n  userToken: string | null;\n}\n\nclass ShowCodeAlly extends Component<ShowCodeAllyProps> {\n  static displayName: string;\n  private container: React.RefObject<HTMLElement> = React.createRef();\n\n  componentDidMount(): void {\n    const {\n      challengeMounted,\n      data: {\n        challengeNode: {\n          challenge: {\n            fields: { tests },\n            challengeType,\n            helpCategory,\n            title\n          }\n        }\n      },\n      pageContext: { challengeMeta },\n      initTests,\n      updateChallengeMeta\n    } = this.props;\n    initTests(tests);\n    updateChallengeMeta({\n      ...challengeMeta,\n      title,\n      challengeType,\n      helpCategory\n    });\n    challengeMounted(challengeMeta.id);\n    this.container.current?.focus();\n  }\n\n  handleSubmit = ({\n    showCompletionModal\n  }: {\n    showCompletionModal: boolean;\n  }) => {\n    const {\n      completedChallenges,\n      createFlashMessage,\n      data: {\n        challengeNode: {\n          challenge: { id: challengeId }\n        }\n      },\n      openCompletionModal,\n      partiallyCompletedChallenges\n    } = this.props;\n\n    const isPartiallyCompleted = partiallyCompletedChallenges.some(\n      challenge => challenge.id === challengeId\n    );\n\n    const isCompleted = completedChallenges.some(\n      challenge => challenge.id === challengeId\n    );\n\n    if (!isPartiallyCompleted && !isCompleted) {\n      createFlashMessage({\n        type: 'danger',\n        message: FlashMessages.CompleteProjectFirst\n      });\n    } else if (showCompletionModal) {\n      openCompletionModal();\n    }\n  };\n\n  openGitpod = (userToken?: string) => {\n    const {\n      data: {\n        challengeNode: {\n          challenge: { url }\n        }\n      }\n    } = this.props;\n\n    const repoUrl = `https://github.com/${url}`;\n    const coderoadTutorial = encodeURIComponent(\n      `https://raw.githubusercontent.com/${url}/main/tutorial.json`\n    );\n    const gitpodDomain = `https://gitpod.io/?autostart=true#CODEROAD_TUTORIAL_URL=${coderoadTutorial},CODEROAD_DISABLE_RUN_ON_SAVE=true`;\n    const tokenEnv = userToken ? `,CODEROAD_WEBHOOK_TOKEN=${userToken}` : '';\n    const gitpodUrl = `${gitpodDomain}${tokenEnv}/${repoUrl}`;\n\n    window.open(gitpodUrl, '_blank');\n  };\n\n  startCourse = async () => {\n    const { isSignedIn, userToken, updateUserToken } = this.props;\n\n    if (!isSignedIn) {\n      this.openGitpod();\n    } else if (!userToken) {\n      const createUserTokenResponse = await postUserToken();\n      const { data = { userToken: null } } = createUserTokenResponse;\n\n      if (data?.userToken) {\n        updateUserToken(data.userToken);\n        this.openGitpod(data.userToken);\n      } else {\n        createFlashMessage({\n          type: 'danger',\n          message: FlashMessages.StartProjectErr\n        });\n      }\n    } else {\n      this.openGitpod(userToken);\n    }\n  };\n\n  render() {\n    const {\n      completedChallenges,\n      data: {\n        challengeNode: {\n          challenge: {\n            block,\n            challengeType,\n            description,\n            id: challengeId,\n            instructions,\n            notes,\n            superBlock,\n            title,\n            translationPending\n          }\n        }\n      },\n      isChallengeCompleted,\n      isSignedIn,\n      pageContext: {\n        challengeMeta: { nextChallengePath, prevChallengePath }\n      },\n      partiallyCompletedChallenges,\n      t,\n      updateSolutionFormValues\n    } = this.props;\n\n    const blockNameTitle = `${t(\n      `intro:${superBlock}.blocks.${block}.title`\n    )}: ${title}`;\n    const windowTitle = `${blockNameTitle} | freeCodeCamp.org`;\n\n    const isPartiallyCompleted = partiallyCompletedChallenges.some(\n      challenge => challenge.id === challengeId\n    );\n\n    const isCompleted = completedChallenges.some(\n      challenge => challenge.id === challengeId\n    );\n\n    return (\n      <Hotkeys\n        containerRef={this.container}\n        nextChallengePath={nextChallengePath}\n        prevChallengePath={prevChallengePath}\n      >\n        <LearnLayout>\n          <Helmet title={windowTitle} />\n          <Container>\n            <Row>\n              <Col md={8} mdOffset={2} sm={10} smOffset={1} xs={12}>\n                <Spacer size='medium' />\n                {superBlock === SuperBlocks.RelationalDb && <CodeAllyDown />}\n                <Spacer size='medium' />\n                <ChallengeTitle\n                  isCompleted={isChallengeCompleted}\n                  translationPending={translationPending}\n                >\n                  {title}\n                </ChallengeTitle>\n                <Spacer size='medium' />\n                <PrismFormatted text={description} />\n                <Spacer size='medium' />\n                <div className='ca-description'>\n                  <p>{t('learn.gitpod.intro')}</p>\n\n                  <ol>\n                    <li>\n                      <Trans i18nKey='learn.gitpod.step-1'>\n                        <a\n                          href='https://github.com/join'\n                          rel='noopener noreferrer'\n                          target='_blank'\n                          title={t('learn.source-code-link')}\n                        >\n                          placeholder\n                        </a>\n                      </Trans>\n                    </li>\n\n                    <li>{t('learn.gitpod.step-2')}</li>\n                    <li>{t('learn.gitpod.step-3')}</li>\n                    <li>\n                      {t('learn.gitpod.step-4')}\n                      <ul>\n                        <li>{t('learn.gitpod.step-5')}</li>\n                        <li>{t('learn.gitpod.step-6')}</li>\n                        <li>{t('learn.gitpod.step-7')}</li>\n                        <li>{t('learn.gitpod.step-8')}</li>\n                      </ul>\n                    </li>\n\n                    <li>{t('learn.gitpod.step-9')}</li>\n                  </ol>\n                </div>\n\n                <Spacer size='medium' />\n                {isSignedIn &&\n                  challengeType === challengeTypes.codeAllyCert && (\n                    <>\n                      <div className='ca-description'>\n                        {t('learn.complete-both-steps')}\n                      </div>\n                      <hr />\n                      <Spacer size='medium' />\n                      <ChallengeHeading\n                        heading={t('learn.step-1')}\n                        isCompleted={isPartiallyCompleted || isCompleted}\n                      />\n                      <Spacer size='medium' />\n                      <div className='ca-description'>\n                        {t('learn.runs-in-vm')}\n                      </div>\n                      <Spacer size='medium' />\n                      <PrismFormatted text={instructions} />\n                      <Spacer size='medium' />\n                    </>\n                  )}\n                <Alert variant='info'>\n                  <p>\n                    <Trans\n                      values={{ course: title }}\n                      i18nKey='learn.gitpod.continue-project'\n                    >\n                      <a\n                        href='https://gitpod.io/workspaces'\n                        rel='noopener noreferrer'\n                        target='_blank'\n                      >\n                        placeholder\n                      </a>\n                    </Trans>\n                  </p>\n                  <Trans i18nKey='learn.gitpod.learn-more'>\n                    <a\n                      href='https://forum.freecodecamp.org/t/using-gitpod-in-the-curriculum/668669'\n                      rel='noopener noreferrer'\n                      target='_blank'\n                    >\n                      placeholder\n                    </a>\n                  </Trans>\n                </Alert>\n                {isSignedIn && (\n                  <Alert variant='danger'>\n                    {t('learn.gitpod.logout-warning', { course: title })}\n                  </Alert>\n                )}\n                <CodeAllyButton\n                  text={\n                    challengeType === challengeTypes.codeAllyCert\n                      ? t('buttons.click-start-project')\n                      : t('buttons.click-start-course')\n                  }\n                  // `this.startCourse` being an async callback is acceptable\n                  //eslint-disable-next-line @typescript-eslint/no-misused-promises\n                  onClick={this.startCourse}\n                />\n                {isSignedIn &&\n                  challengeType === challengeTypes.codeAllyCert && (\n                    <>\n                      <hr />\n                      <Spacer size='medium' />\n                      <ChallengeHeading\n                        heading={t('learn.step-2')}\n                        isCompleted={isCompleted}\n                      />\n                      <Spacer size='medium' />\n                      <div className='ca-description'>\n                        {t('learn.submit-public-url')}\n                      </div>\n                      <Spacer size='medium' />\n                      <PrismFormatted text={notes} />\n                      <Spacer size='medium' />\n                      <SolutionForm\n                        challengeType={challengeType}\n                        description={description}\n                        onSubmit={this.handleSubmit}\n                        updateSolutionForm={updateSolutionFormValues}\n                      />\n                    </>\n                  )}\n                <Spacer size='xxSmall' />\n                <ProjectToolPanel />\n                <br />\n                <Spacer size='medium' />\n              </Col>\n              <CompletionModal />\n              <HelpModal challengeTitle={title} challengeBlock={block} />\n            </Row>\n          </Container>\n        </LearnLayout>\n      </Hotkeys>\n    );\n  }\n}\n\nShowCodeAlly.displayName = 'ShowCodeAlly';\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(ShowCodeAlly));\n\n// GraphQL\nexport const query = graphql`\n  query CodeAllyChallenge($slug: String!) {\n    challengeNode(challenge: { fields: { slug: { eq: $slug } } }) {\n      challenge {\n        block\n        fields {\n          tests {\n            text\n            testString\n          }\n        }\n        challengeType\n        description\n        helpCategory\n        id\n        instructions\n        notes\n        superBlock\n        title\n        translationPending\n        url\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport GreenPass from '../../../assets/icons/green-pass';\n\nimport './challenge-heading.css';\n\ninterface ChallengeHeadingProps {\n  heading: string;\n  isCompleted?: boolean;\n}\n\nfunction ChallengeHeading({\n  heading,\n  isCompleted = false\n}: ChallengeHeadingProps): JSX.Element {\n  const { t } = useTranslation();\n\n  return (\n    <div className='challenge-heading-wrap'>\n      <h2 className='challenge-heading'>{t(heading)}</h2>\n      {isCompleted && <GreenPass />}\n    </div>\n  );\n}\n\nChallengeHeading.displayName = 'ChallengeHeading';\n\nexport default ChallengeHeading;\n"],"names":["Down","t","useTranslation","React","Alert","variant","Trans","i18nKey","href","rel","target","Spacer","size","Disabled","CodeAllyDown","codeAllyDownFeature","useFeature","on","CodeAllyButton","props","codeAllyDisabledFeature","Button","onClick","disabled","block","className","text","FontAwesomeIcon","icon","faExternalLinkAlt","mapStateToProps","createSelector","completedChallengesSelector","isChallengeCompletedSelector","isSignedInSelector","partiallyCompletedChallengesSelector","userTokenSelector","completedChallenges","isChallengeCompleted","isSignedIn","partiallyCompletedChallenges","userToken","ShowCodeAlly","Component","constructor","arguments","container","handleSubmit","_ref","showCompletionModal","createFlashMessage","data","challengeNode","challenge","id","challengeId","openCompletionModal","this","isPartiallyCompleted","some","isCompleted","type","message","FlashMessages","CompleteProjectFirst","openGitpod","url","repoUrl","gitpodUrl","encodeURIComponent","window","open","startCourse","async","updateUserToken","createUserTokenResponse","postUserToken","StartProjectErr","componentDidMount","_this$container$curre","challengeMounted","fields","tests","challengeType","helpCategory","title","pageContext","challengeMeta","initTests","updateChallengeMeta","current","focus","render","description","instructions","notes","superBlock","translationPending","nextChallengePath","prevChallengePath","updateSolutionFormValues","windowTitle","Hotkeys","containerRef","LearnLayout","Helmet","Container","Row","Col","md","mdOffset","sm","smOffset","xs","SuperBlocks","RelationalDb","ChallengeTitle","PrismFormatted","challengeTypes","codeAllyCert","ChallengeHeading","heading","values","course","SolutionForm","onSubmit","updateSolutionForm","ProjectToolPanel","CompletionModal","HelpModal","challengeTitle","challengeBlock","displayName","connect","dispatch","bindActionCreators","openModal","withTranslation","GreenPass"],"sourceRoot":""}