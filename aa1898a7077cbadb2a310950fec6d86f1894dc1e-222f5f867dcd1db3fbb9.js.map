{"version":3,"file":"aa1898a7077cbadb2a310950fec6d86f1894dc1e-222f5f867dcd1db3fbb9.js","mappings":";gHAAAA,MAAMC,UAAUC,MAAQ,CACtB,QAAW,CAAC,CACVC,QAAS,kCACTC,YAAY,EACZC,QAAQ,GACP,CACDF,QAAS,mBACTC,YAAY,EACZC,QAAQ,IAEV,OAAU,CACRF,QAAS,iDACTE,QAAQ,GAEV,aAAc,CACZF,QAAS,2FACTC,YAAY,EACZE,OAAQ,CACN,YAAe,UAGnB,QAAW,6GACX,QAAW,qBACX,SAAY,cACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,wCCxBjB,IAaIN,EAAQ,SAAUO,GAEpB,IAAIC,EAAO,0CACPC,EAAW,EAGXC,EAAmB,CAAC,EACpBC,EAAI,CAsBNC,OAAQL,EAAMP,OAASO,EAAMP,MAAMY,OAsBnCC,4BAA6BN,EAAMP,OAASO,EAAMP,MAAMa,4BAUxDC,KAAM,CACJC,OAAQ,SAASA,EAAOC,GACtB,OAAIA,aAAkBC,EACb,IAAIA,EAAMD,EAAOE,KAAMH,EAAOC,EAAOG,SAAUH,EAAOI,OACpDC,MAAMC,QAAQN,GAChBA,EAAOO,IAAIR,GAEXC,EAAOQ,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,IAElF,EAiBAN,KAAM,SAAUO,GACd,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,GAAGK,MAAM,GAAI,EACrD,EAOAC,MAAO,SAAUC,GAMf,OALKA,EAAU,MACbN,OAAOO,eAAeD,EAAK,OAAQ,CACjCE,QAASzB,IAGNuB,EAAU,IACnB,EAWAG,MAAO,SAASC,EAAUX,EAAGY,GAE3B,IAAIF,EACAG,EACJ,OAHAD,EAAUA,GAAW,CAAC,EAGd1B,EAAEG,KAAKI,KAAKO,IAClB,IAAK,SAEH,GADAa,EAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,EAAQC,GACV,OAAOD,EAAQC,GAIjB,IAAK,IAAIC,KAFTJ,EAA0C,CAAC,EAC3CE,EAAQC,GAAMH,EACEV,EACVA,EAAEe,eAAeD,KACnBJ,EAAMI,GAAOH,EAAUX,EAAEc,GAAMF,IAGnC,OAAyBF,EAC3B,IAAK,QAEH,OADAG,EAAK3B,EAAEG,KAAKiB,MAAMN,GACdY,EAAQC,GACHD,EAAQC,IAEjBH,EAAQ,GACRE,EAAQC,GAAMH,EACd,EAA4CM,SAAQ,SAAUC,EAAGC,GAC/DR,EAAMQ,GAAKP,EAAUM,EAAGL,EAC1B,IACyBF,GAC3B,QACE,OAAOV,EAEb,EASAmB,YAAa,SAAUC,GACrB,KAAOA,GAAS,CACd,IAAIC,EAAItC,EAAKuC,KAAKF,EAAQG,WAC1B,GAAIF,EACF,OAAOA,EAAE,GAAGG,cAEdJ,EAAUA,EAAQK,aACpB,CACA,MAAO,MACT,EAQAC,YAAa,SAAUN,EAASO,GAG9BP,EAAQG,UAAYH,EAAQG,UAAUxB,QAAQ6B,OAAO7C,EAAM,MAAO,IAIlEqC,EAAQS,UAAUC,IAAI,YAAcH,EACtC,EAQAI,cAAe,WACb,GAAwB,oBAAbC,SACT,OAAO,KAET,GAAI,kBAAmBA,SACrB,OAAyBA,SAASD,cAOpC,IACE,MAAM,IAAIE,KACZ,CAAE,MAAOC,GAQP,IAAIC,GAAO,qCAAqCb,KAAKY,EAAIE,QAAU,IAAI,GACvE,GAAID,EAAK,CACP,IAAIE,EAAUL,SAASM,qBAAqB,UAC5C,IAAK,IAAIpB,KAAKmB,EACZ,GAAIA,EAAQnB,GAAGiB,KAAOA,EACpB,OAAOE,EAAQnB,EAGrB,CACA,OAAO,IACT,CACF,EAoBAqB,SAAU,SAAUnB,EAASG,EAAWiB,GAEtC,IADA,IAAIC,EAAK,MAAQlB,EACVH,GAAS,CACd,IAAIS,EAAYT,EAAQS,UACxB,GAAIA,EAAUa,SAASnB,GACrB,OAAO,EAET,GAAIM,EAAUa,SAASD,GACrB,OAAO,EAETrB,EAAUA,EAAQK,aACpB,CACA,QAASe,CACX,GASFhE,UAAW,CAITmE,MAAO1D,EACP2D,UAAW3D,EACX4D,KAAM5D,EACN6D,IAAK7D,EA6BL8D,OAAQ,SAAUlC,EAAImC,GACpB,IAAIjE,EAAOG,EAAEG,KAAKqB,MAAMxB,EAAEV,UAAUqC,IACpC,IAAK,IAAIC,KAAOkC,EACdjE,EAAK+B,GAAOkC,EAAMlC,GAEpB,OAAO/B,CACT,EA4EAkE,aAAc,SAAUpE,EAAQqE,EAAQC,EAAQC,GAE9C,IAAIC,GADJD,EAAOA,GAA4BlE,EAAW,WAC3BL,GAEfyE,EAAM,CAAC,EACX,IAAK,IAAIC,KAASF,EAChB,GAAIA,EAAQtC,eAAewC,GAAQ,CACjC,GAAIA,GAASL,EACX,IAAK,IAAIM,KAAYL,EACfA,EAAOpC,eAAeyC,KACxBF,EAAIE,GAAYL,EAAOK,IAMxBL,EAAOpC,eAAewC,KACzBD,EAAIC,GAASF,EAAQE,GAEzB,CAEF,IAAIE,EAAML,EAAKvE,GASf,OARAuE,EAAKvE,GAAUyE,EAGfpE,EAAEV,UAAUkF,IAAIxE,EAAEV,WAAW,SAAUsC,EAAKL,GACtCA,IAAUgD,GAAO3C,GAAOjC,IAC1B8E,KAAK7C,GAAOwC,EAEhB,IACOA,CACT,EAEAI,IAAK,SAASA,EAAI1D,EAAG4D,EAAUnE,EAAMmB,GACnCA,EAAUA,GAAW,CAAC,EACtB,IAAIN,EAAQpB,EAAEG,KAAKiB,MACnB,IAAK,IAAIY,KAAKlB,EACZ,GAAIA,EAAEe,eAAeG,GAAI,CACvB0C,EAASxD,KAAKJ,EAAGkB,EAAGlB,EAAEkB,GAAIzB,GAAQyB,GAClC,IAAI2C,EAAW7D,EAAEkB,GACb4C,EAAe5E,EAAEG,KAAKI,KAAKoE,GACV,WAAjBC,GAA8BlD,EAAQN,EAAMuD,IAGpB,UAAjBC,GAA6BlD,EAAQN,EAAMuD,MACpDjD,EAAQN,EAAMuD,KAAa,EAC3BH,EAAIG,EAAUD,EAAU1C,EAAGN,KAJ3BA,EAAQN,EAAMuD,KAAa,EAC3BH,EAAIG,EAAUD,EAAU,KAAMhD,GAKlC,CAEJ,GAEFmD,QAAS,CAAC,EAaVC,aAAc,SAAUC,EAAOL,GAC7B1E,EAAEgF,kBAAkBlC,SAAUiC,EAAOL,EACvC,EAgBAM,kBAAmB,SAAUC,EAAWF,EAAOL,GAC7C,IAAIQ,EAAM,CACRR,SAAUA,EACVO,UAAWA,EACXE,SAAU,oGAEZnF,EAAEoF,MAAMC,IAAI,sBAAuBH,GACnCA,EAAII,SAAW5E,MAAMM,UAAUG,MAAMoE,MAAML,EAAID,UAAUO,iBAAiBN,EAAIC,WAC9EnF,EAAEoF,MAAMC,IAAI,gCAAiCH,GAC7C,IAAK,IAAWhD,EAAPF,EAAI,EAAYE,EAAUgD,EAAII,SAAStD,MAC9ChC,EAAEyF,iBAAiBvD,GAAmB,IAAV6C,EAAgBG,EAAIR,SAEpD,EA6BAe,iBAAkB,SAAUvD,EAAS6C,EAAOL,GAE1C,IAAIjC,EAAWzC,EAAEG,KAAK8B,YAAYC,GAC9BiC,EAAUnE,EAAEV,UAAUmD,GAG1BzC,EAAEG,KAAKqC,YAAYN,EAASO,GAG5B,IAAIiD,EAASxD,EAAQK,cACjBmD,GAA4C,QAAlCA,EAAOC,SAASrD,eAC5BtC,EAAEG,KAAKqC,YAAYkD,EAAQjD,GAE7B,IACIyC,EAAM,CACRhD,QAASA,EACTO,SAAUA,EACV0B,QAASA,EACTyB,KALS1D,EAAQ2D,aAOnB,SAASC,EAAsBC,GAC7Bb,EAAIa,gBAAkBA,EACtB/F,EAAEoF,MAAMC,IAAI,gBAAiBH,GAC7BA,EAAIhD,QAAQ8D,UAAYd,EAAIa,gBAC5B/F,EAAEoF,MAAMC,IAAI,kBAAmBH,GAC/BlF,EAAEoF,MAAMC,IAAI,WAAYH,GACxBR,GAAYA,EAASxD,KAAKgE,EAAIhD,QAChC,CAQA,GAPAlC,EAAEoF,MAAMC,IAAI,sBAAuBH,IAGnCQ,EAASR,EAAIhD,QAAQK,gBAC2B,QAAlCmD,EAAOC,SAASrD,gBAA4BoD,EAAOO,aAAa,aAC5EP,EAAOQ,aAAa,WAAY,MAE7BhB,EAAIU,KAGP,OAFA5F,EAAEoF,MAAMC,IAAI,WAAYH,QACxBR,GAAYA,EAASxD,KAAKgE,EAAIhD,UAIhC,GADAlC,EAAEoF,MAAMC,IAAI,mBAAoBH,GAC3BA,EAAIf,QAIT,GAAIY,GAASnF,EAAMuG,OAAQ,CACzB,IAAIC,EAAS,IAAID,OAAOnG,EAAEqG,UAC1BD,EAAOE,UAAY,SAAUC,GAC3BT,EAAsBS,EAAIC,KAC5B,EACAJ,EAAOK,YAAYC,KAAKC,UAAU,CAChClE,SAAUyC,EAAIzC,SACdmD,KAAMV,EAAIU,KACVgB,gBAAgB,IAEpB,MACEd,EAAsB9F,EAAE6G,UAAU3B,EAAIU,KAAMV,EAAIf,QAASe,EAAIzC,gBAd7DqD,EAAsB9F,EAAEG,KAAKC,OAAO8E,EAAIU,MAgB5C,EAqBAiB,UAAW,SAAUlD,EAAMQ,EAAS1B,GAClC,IAAIyC,EAAM,CACRU,KAAMjC,EACNQ,QAASA,EACT1B,SAAUA,GAGZ,GADAzC,EAAEoF,MAAMC,IAAI,kBAAmBH,IAC1BA,EAAIf,QACP,MAAM,IAAIpB,MAAM,iBAAmBmC,EAAIzC,SAAW,qBAIpD,OAFAyC,EAAI7E,OAASL,EAAE8G,SAAS5B,EAAIU,KAAMV,EAAIf,SACtCnE,EAAEoF,MAAMC,IAAI,iBAAkBH,GACvB5E,EAAMqG,UAAU3G,EAAEG,KAAKC,OAAO8E,EAAI7E,QAAS6E,EAAIzC,SACxD,EAyBAqE,SAAU,SAAUnD,EAAMQ,GACxB,IAAI4C,EAAO5C,EAAQ4C,KACnB,GAAIA,EAAM,CACR,IAAK,IAAI1C,KAAS0C,EAChB5C,EAAQE,GAAS0C,EAAK1C,UAEjBF,EAAQ4C,IACjB,CACA,IAAIC,EAAY,IAAIC,EAGpB,OAFAC,EAASF,EAAWA,EAAUG,KAAMxD,GACpCyD,EAAazD,EAAMqD,EAAW7C,EAAS6C,EAAUG,KAAM,GA2Y3D,SAAiBE,GACf,IAAIC,EAAQ,GACRC,EAAOF,EAAKF,KAAKK,KACrB,KAAOD,IAASF,EAAKI,MACnBH,EAAMI,KAAKH,EAAKhG,OAChBgG,EAAOA,EAAKC,KAEd,OAAOF,CACT,CAlZWK,CAAQX,EACjB,EAMA5B,MAAO,CACLwC,IAAK,CAAC,EAaNhF,IAAK,SAAUiF,EAAMnD,GACnB,IAAIU,EAAQpF,EAAEoF,MAAMwC,IACpBxC,EAAMyC,GAAQzC,EAAMyC,IAAS,GAC7BzC,EAAMyC,GAAMH,KAAKhD,EACnB,EAUAW,IAAK,SAAUwC,EAAM3C,GACnB,IAAI4C,EAAY9H,EAAEoF,MAAMwC,IAAIC,GAC5B,GAAKC,GAAcA,EAAUC,OAG7B,IAAK,IAAWrD,EAAP1C,EAAI,EAAa0C,EAAWoD,EAAU9F,MAC7C0C,EAASQ,EAEb,GAEF5E,MAAOA,GAoBT,SAASA,EAAMC,EAAMC,EAASC,EAAOuH,GAUnCvD,KAAKlE,KAAOA,EASZkE,KAAKjE,QAAUA,EAQfiE,KAAKhE,MAAQA,EAEbgE,KAAKsD,OAAqC,GAA3BC,GAAc,IAAID,MACnC,CAwEA,SAASE,EAAazI,EAAS0I,EAAKvE,EAAMlE,GACxCD,EAAQ2I,UAAYD,EACpB,IAAIE,EAAQ5I,EAAQ4C,KAAKuB,GACzB,GAAIyE,GAAS3I,GAAc2I,EAAM,GAAI,CAEnC,IAAIC,EAAmBD,EAAM,GAAGL,OAChCK,EAAME,OAASD,EACfD,EAAM,GAAKA,EAAM,GAAGjH,MAAMkH,EAC5B,CACA,OAAOD,CACT,CAgBA,SAAShB,EAAazD,EAAMqD,EAAW7C,EAASoE,EAAWC,EAAUC,GACnE,IAAK,IAAIpE,KAASF,EAChB,GAAKA,EAAQtC,eAAewC,IAAWF,EAAQE,GAA/C,CAGA,IAAIqE,EAAWvE,EAAQE,GACvBqE,EAAWhI,MAAMC,QAAQ+H,GAAYA,EAAW,CAACA,GACjD,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASX,SAAUY,EAAG,CACxC,GAAIF,GAAWA,EAAQG,OAASvE,EAAQ,IAAMsE,EAC5C,OAEF,IAAIE,EAAaH,EAASC,GACtBhJ,EAASkJ,EAAWlJ,OACpBF,IAAeoJ,EAAWpJ,WAC1BC,IAAWmJ,EAAWnJ,OACtBe,EAAQoI,EAAWpI,MACvB,GAAIf,IAAWmJ,EAAWrJ,QAAQsJ,OAAQ,CAExC,IAAIC,EAAQF,EAAWrJ,QAAQyB,WAAWmH,MAAM,aAAa,GAC7DS,EAAWrJ,QAAUkD,OAAOmG,EAAWrJ,QAAQwJ,OAAQD,EAAQ,IACjE,CAIA,IADA,IAAIvJ,EAAUqJ,EAAWrJ,SAAWqJ,EAGhCI,EAAcV,EAAUf,KAAMU,EAAMM,EAAUS,IAAgBjC,EAAUS,QACtEgB,GAAWP,GAAOO,EAAQS,OADkDhB,GAAOe,EAAY1H,MAAMwG,OAAQkB,EAAcA,EAAYzB,KAAM,CAIjJ,IAAI2B,EAAMF,EAAY1H,MACtB,GAAIyF,EAAUe,OAASpE,EAAKoE,OAE1B,OAEF,KAAIoB,aAAe7I,GAAnB,CAGA,IACI8H,EADAgB,EAAc,EAElB,GAAI1J,EAAQ,CAEV,KADA0I,EAAQH,EAAazI,EAAS0I,EAAKvE,EAAMlE,KAC3B2I,EAAME,OAAS3E,EAAKoE,OAChC,MAEF,IAAIsB,EAAOjB,EAAME,MACbgB,EAAKlB,EAAME,MAAQF,EAAM,GAAGL,OAC5BwB,EAAIrB,EAIR,IADAqB,GAAKN,EAAY1H,MAAMwG,OAChBsB,GAAQE,GAEbA,IADAN,EAAcA,EAAYzB,MACTjG,MAAMwG,OAOzB,GAHAG,EADAqB,GAAKN,EAAY1H,MAAMwG,OAInBkB,EAAY1H,iBAAiBjB,EAC/B,SAIF,IAAK,IAAIkJ,EAAIP,EAAaO,IAAMxC,EAAUS,OAAS8B,EAAID,GAAyB,iBAAZE,EAAEjI,OAAqBiI,EAAIA,EAAEhC,KAC/F4B,IACAG,GAAKC,EAAEjI,MAAMwG,OAEfqB,IAGAD,EAAMxF,EAAKxC,MAAM+G,EAAKqB,GACtBnB,EAAME,OAASJ,CACjB,MAEE,KADAE,EAAQH,EAAazI,EAAS,EAAG2J,EAAK1J,IAEpC,SAKA4J,EAAOjB,EAAME,MAAjB,IACImB,EAAWrB,EAAM,GACjBpE,EAASmF,EAAIhI,MAAM,EAAGkI,GACtBK,EAAQP,EAAIhI,MAAMkI,EAAOI,EAAS1B,QAClCmB,EAAQhB,EAAMiB,EAAIpB,OAClBU,GAAWS,EAAQT,EAAQS,QAC7BT,EAAQS,MAAQA,GAElB,IAAIS,EAAaV,EAAYW,KAW7B,GAVI5F,IACF2F,EAAazC,EAASF,EAAW2C,EAAY3F,GAC7CkE,GAAOlE,EAAO+D,QAEhB8B,EAAY7C,EAAW2C,EAAYP,GAEnCH,EAAc/B,EAASF,EAAW2C,EADpB,IAAIrJ,EAAM+D,EAAO1E,EAASK,EAAE8G,SAAS2C,EAAU9J,GAAU8J,EAAUhJ,EAAOgJ,IAEpFC,GACFxC,EAASF,EAAWiC,EAAaS,GAE/BN,EAAc,EAAG,CAKnB,IAAIU,EAAgB,CAClBlB,MAAOvE,EAAQ,IAAMsE,EACrBO,MAAOA,GAET9B,EAAazD,EAAMqD,EAAW7C,EAAS8E,EAAYW,KAAM1B,EAAK4B,GAG1DrB,GAAWqB,EAAcZ,MAAQT,EAAQS,QAC3CT,EAAQS,MAAQY,EAAcZ,MAElC,CA/EA,CAgFF,CACF,CAlHA,CAoHJ,CAeA,SAASjC,IAEP,IAAIE,EAAO,CACT5F,MAAO,KACPqI,KAAM,KACNpC,KAAM,MAGJC,EAAO,CACTlG,MAAO,KACPqI,KAAMzC,EACNK,KAAM,MAERL,EAAKK,KAAOC,EAGZhD,KAAK0C,KAAOA,EAEZ1C,KAAKgD,KAAOA,EACZhD,KAAKsD,OAAS,CAChB,CAWA,SAASb,EAASG,EAAME,EAAMhG,GAE5B,IAAIiG,EAAOD,EAAKC,KACZuC,EAAU,CACZxI,MAAOA,EACPqI,KAAMrC,EACNC,KAAMA,GAKR,OAHAD,EAAKC,KAAOuC,EACZvC,EAAKoC,KAAOG,EACZ1C,EAAKU,SACEgC,CACT,CASA,SAASF,EAAYxC,EAAME,EAAMyC,GAE/B,IADA,IAAIxC,EAAOD,EAAKC,KACPxF,EAAI,EAAGA,EAAIgI,GAASxC,IAASH,EAAKI,KAAMzF,IAC/CwF,EAAOA,EAAKA,KAEdD,EAAKC,KAAOA,EACZA,EAAKoC,KAAOrC,EACZF,EAAKU,QAAU/F,CACjB,CAeA,GApWApC,EAAMP,MAAQW,EA8EdM,EAAMqG,UAAY,SAASA,EAAU7F,EAAG2B,GACtC,GAAgB,iBAAL3B,EACT,OAAOA,EAET,GAAIJ,MAAMC,QAAQG,GAAI,CACpB,IAAImJ,EAAI,GAIR,OAHAnJ,EAAEgB,SAAQ,SAAUoI,GAClBD,GAAKtD,EAAUuD,EAAGzH,EACpB,IACOwH,CACT,CACA,IAAI/E,EAAM,CACR3E,KAAMO,EAAEP,KACRC,QAASmG,EAAU7F,EAAEN,QAASiC,GAC9B0H,IAAK,OACLC,QAAS,CAAC,QAAStJ,EAAEP,MACrB8J,WAAY,CAAC,EACb5H,SAAUA,GAER6H,EAAUxJ,EAAEL,MACZ6J,IACE5J,MAAMC,QAAQ2J,GAChB5J,MAAMM,UAAU0G,KAAKnC,MAAML,EAAIkF,QAASE,GAExCpF,EAAIkF,QAAQ1C,KAAK4C,IAGrBtK,EAAEoF,MAAMC,IAAI,OAAQH,GACpB,IAAImF,EAAa,GACjB,IAAK,IAAIxC,KAAQ3C,EAAImF,WACnBA,GAAc,IAAMxC,EAAO,MAAQ3C,EAAImF,WAAWxC,IAAS,IAAIhH,QAAQ,KAAM,UAAY,IAE3F,MAAO,IAAMqE,EAAIiF,IAAM,WAAajF,EAAIkF,QAAQG,KAAK,KAAO,IAAMF,EAAa,IAAMnF,EAAI1E,QAAU,KAAO0E,EAAIiF,IAAM,GACtH,GAqPKvK,EAAMkD,SACT,OAAKlD,EAAM4K,kBAINxK,EAAEE,6BAELN,EAAM4K,iBAAiB,WAAW,SAAUjE,GAC1C,IAAIkE,EAAU/D,KAAKgE,MAAMnE,EAAIC,MACzB3G,EAAO4K,EAAQhI,SACfmD,EAAO6E,EAAQ7E,KACfgB,EAAiB6D,EAAQ7D,eAC7BhH,EAAM6G,YAAYzG,EAAE6G,UAAUjB,EAAM5F,EAAEV,UAAUO,GAAOA,IACnD+G,GACFhH,EAAM+K,OAEV,IAAG,GAEE3K,GAfEA,EAmBX,IAAI4K,EAAS5K,EAAEG,KAAK0C,gBAOpB,SAASgI,IACF7K,EAAEC,QACLD,EAAE8E,cAEN,CACA,GAXI8F,IACF5K,EAAEqG,SAAWuE,EAAO3H,IAChB2H,EAAO3E,aAAa,iBACtBjG,EAAEC,QAAS,KAQVD,EAAEC,OAAQ,CAOb,IAAI6K,EAAahI,SAASgI,WACP,YAAfA,GAA2C,gBAAfA,GAAgCF,GAAUA,EAAOG,MAC/EjI,SAAS0H,iBAAiB,mBAAoBK,GAE1CG,OAAOC,sBACTD,OAAOC,sBAAsBJ,GAE7BG,OAAOE,WAAWL,EAAgC,GAGxD,CACA,OAAO7K,CACT,CAjkCY,CAbkB,oBAAXgL,OAAyBA,OACb,oBAAtBG,mBAAqCC,gBAAgBD,kBAAoBC,KAChF,CAAC,GA6kCkCC,EAAOC,UAC1CD,EAAOC,QAAUjM,QAIG,IAAX,EAAAkM,IACT,EAAAA,EAAOlM,MAAQA,qBCvlCjB,SAAWA,GACT,IAAImM,EAAS,8EACbnM,EAAMC,UAAUmM,IAAM,CACpB,QAAW,mBACX,OAAU,CACRjM,QAASkD,OAAO,aAAe,sBAAsBsG,OAAS,IAAMwC,EAAOxC,OAAS,MAAQ,kBAAkBA,QAC9GrJ,OAAQ,CACN,KAAQ,WACR,6BAA8B,CAC5BH,QAAS,4FACTC,YAAY,EACZgB,MAAO,YAET,QAAW,CACTjB,QAAS,yCACTC,YAAY,KAKlB,IAAO,CAELD,QAASkD,OAAO,eAAiB8I,EAAOxC,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGtJ,QAAQ,EACRC,OAAQ,CACN,SAAY,QACZ,YAAe,UACf,OAAU,CACRH,QAASkD,OAAO,IAAM8I,EAAOxC,OAAS,KACtCvI,MAAO,SAIb,SAAY,CACVjB,QAASkD,OAAO,qDAAuD8I,EAAOxC,OAAS,iBACvFvJ,YAAY,GAEd,OAAU,CACRD,QAASgM,EACT9L,QAAQ,GAEV,SAAY,CACVF,QAAS,oFACTC,YAAY,GAEd,UAAa,gBACb,SAAY,CACVD,QAAS,kCACTC,YAAY,GAEd,YAAe,aAEjBJ,EAAMC,UAAUmM,IAAY,OAAE9L,OAAOoH,KAAO1H,EAAMC,UAAUmM,IAC5D,IAAIC,EAASrM,EAAMC,UAAUoM,OACzBA,IACFA,EAAOvB,IAAIwB,WAAW,QAAS,OAC/BD,EAAOvB,IAAIyB,aAAa,QAAS,OAEpC,CA1DD,CA0DGvM,yBC1DHA,MAAMC,UAAUuM,WAAaxM,MAAMC,UAAUuE,OAAO,QAAS,CAC3D,aAAc,CAACxE,MAAMC,UAAUC,MAAM,cAAe,CAClDC,QAAS,0GACTC,YAAY,IAEd,QAAW,CAAC,CACVD,QAAS,uBACTC,YAAY,GACX,CACDD,QAAS,mdACTC,YAAY,IAGd,SAAY,oGACZ,OAAU,CACRD,QAASkD,OAAO,aAAasG,OAAS,MAEtC,eAAeA,OAAS,IAExB,0BAA0BA,OAAS,IAEnC,4BAA4BA,OAAS,IAErC,sCAAsCA,OAAS,IAE/C,gBAAgBA,OAAS,IAEzB,oFAAoFA,OAAU,IAAM,YAAYA,QAChHvJ,YAAY,GAEd,SAAY,8FAEdJ,MAAMC,UAAUuM,WAAW,cAAc,GAAGrM,QAAU,uEACtDH,MAAMC,UAAUyE,aAAa,aAAc,UAAW,CACpD,MAAS,CACPvE,QAASkD,OAGT,0DAA0DsG,OAK1D,KAAKA,OAAS,MAAQ,iEAAiEA,OAAS,IAEhG,qIAAqIA,OAAS,IAE9I,kEAAkEA,QAClEvJ,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACN,eAAgB,CACdH,QAAS,4BACTC,YAAY,EACZgB,MAAO,iBACPd,OAAQN,MAAMC,UAAUwM,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnBtM,QAAS,gMACTiB,MAAO,YAET,UAAa,CAAC,CACZjB,QAAS,sIACTC,YAAY,EACZE,OAAQN,MAAMC,UAAUuM,YACvB,CACDrM,QAAS,qFACTC,YAAY,EACZE,OAAQN,MAAMC,UAAUuM,YACvB,CACDrM,QAAS,kEACTC,YAAY,EACZE,OAAQN,MAAMC,UAAUuM,YACvB,CACDrM,QAAS,8eACTC,YAAY,EACZE,OAAQN,MAAMC,UAAUuM,aAE1B,SAAY,8BAEdxM,MAAMC,UAAUyE,aAAa,aAAc,SAAU,CACnD,SAAY,CACVvE,QAAS,QACTE,QAAQ,EACRe,MAAO,WAET,kBAAmB,CACjBjB,QAAS,2EACTE,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBH,QAAS,QACTiB,MAAO,UAET,cAAiB,CACfjB,QAAS,mEACTC,YAAY,EACZE,OAAQ,CACN,4BAA6B,CAC3BH,QAAS,YACTiB,MAAO,eAETsG,KAAM1H,MAAMC,UAAUuM,aAG1B,OAAU,YAGd,kBAAmB,CACjBrM,QAAS,4EACTC,YAAY,EACZC,QAAQ,EACRe,MAAO,cAGXpB,MAAMC,UAAUyE,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClBvE,QAAS,oFACTC,YAAY,EACZgB,MAAO,cAGPpB,MAAMC,UAAUoM,SAClBrM,MAAMC,UAAUoM,OAAOvB,IAAIwB,WAAW,SAAU,cAIhDtM,MAAMC,UAAUoM,OAAOvB,IAAIyB,aAAa,yNAAyN5C,OAAQ,eAE3Q3J,MAAMC,UAAUyM,GAAK1M,MAAMC,UAAUuM,6BCtIrCxM,MAAMC,UAAUoM,OAAS,CACvB,QAAW,CACTlM,QAAS,8BACTE,QAAQ,GAEV,OAAU,CACRF,QAAS,iBACTE,QAAQ,GAEV,QAAW,CAETF,QAAS,uHACTE,QAAQ,EACRC,OAAQ,CACN,kBAAmB,CACjBH,QAAS,6BACTC,YAAY,EACZC,QAAQ,EACRC,OAAQ,MAEV,OAAU,CACRH,QAAS,kBACTE,QAAQ,GAEV,YAAe,eACf,cAAe,YACf,KAAQ,eAGZ,MAAS,CACPF,QAAS,4BACTE,QAAQ,GAEV,IAAO,CACLF,QAAS,uHACTE,QAAQ,EACRC,OAAQ,CACN,IAAO,CACLH,QAAS,iBACTG,OAAQ,CACN,YAAe,QACf,UAAa,iBAGjB,eAAgB,GAChB,aAAc,CACZH,QAAS,qCACTG,OAAQ,CACN,YAAe,CAAC,CACdH,QAAS,KACTiB,MAAO,eACN,CACDjB,QAAS,mBACTC,YAAY,MAIlB,YAAe,OACf,YAAa,CACXD,QAAS,YACTG,OAAQ,CACN,UAAa,mBAKrB,OAAU,CAAC,CACTH,QAAS,kBACTiB,MAAO,gBACN,uBAELpB,MAAMC,UAAUoM,OAAY,IAAE/L,OAAO,cAAcA,OAAe,OAAIN,MAAMC,UAAUoM,OAAe,OACrGrM,MAAMC,UAAUoM,OAAgB,QAAE/L,OAAO,mBAAmBA,OAASN,MAAMC,UAAUoM,OAGrFrM,MAAM+F,MAAMxC,IAAI,QAAQ,SAAUsC,GACf,WAAbA,EAAI3E,OACN2E,EAAImF,WAAkB,MAAInF,EAAI1E,QAAQK,QAAQ,QAAS,KAE3D,IACAE,OAAOO,eAAejC,MAAMC,UAAUoM,OAAOvB,IAAK,aAAc,CAY9D5I,MAAO,SAAoByK,EAASnM,GAClC,IAAIoM,EAAsB,CAAC,EAC3BA,EAAoB,YAAcpM,GAAQ,CACxCL,QAAS,oCACTC,YAAY,EACZE,OAAQN,MAAMC,UAAUO,IAE1BoM,EAA2B,MAAI,uBAC/B,IAAItM,EAAS,CACX,iBAAkB,CAChBH,QAAS,4BACTG,OAAQsM,IAGZtM,EAAO,YAAcE,GAAQ,CAC3BL,QAAS,UACTG,OAAQN,MAAMC,UAAUO,IAE1B,IAAIqM,EAAM,CAAC,EACXA,EAAIF,GAAW,CACbxM,QAASkD,OAAO,wFAAwFsG,OAAOnI,QAAQ,OAAO,WAC5H,OAAOmL,CACT,IAAI,KACJvM,YAAY,EACZC,QAAQ,EACRC,OAAQA,GAEVN,MAAMC,UAAUyE,aAAa,SAAU,QAASmI,EAClD,IAEFnL,OAAOO,eAAejC,MAAMC,UAAUoM,OAAOvB,IAAK,eAAgB,CAYhE5I,MAAO,SAAU4K,EAAUtM,GACzBR,MAAMC,UAAUoM,OAAOvB,IAAIxK,OAAO,gBAAgB+H,KAAK,CACrDlI,QAASkD,OAAO,aAAasG,OAAS,MAAQmD,EAAW,IAAM,iDAAiDnD,OAAQ,KACxHvJ,YAAY,EACZE,OAAQ,CACN,YAAa,WACb,aAAc,CACZH,QAAS,WACTG,OAAQ,CACN,MAAS,CACPH,QAAS,yCACTC,YAAY,EACZgB,MAAO,CAACZ,EAAM,YAAcA,GAC5BF,OAAQN,MAAMC,UAAUO,IAE1B,YAAe,CAAC,CACdL,QAAS,KACTiB,MAAO,eACN,WAKb,IAEFpB,MAAMC,UAAU8M,KAAO/M,MAAMC,UAAUoM,OACvCrM,MAAMC,UAAU+M,OAAShN,MAAMC,UAAUoM,OACzCrM,MAAMC,UAAUgN,IAAMjN,MAAMC,UAAUoM,OACtCrM,MAAMC,UAAUiN,IAAMlN,MAAMC,UAAUuE,OAAO,SAAU,CAAC,GACxDxE,MAAMC,UAAUkN,KAAOnN,MAAMC,UAAUiN,IACvClN,MAAMC,UAAUmN,KAAOpN,MAAMC,UAAUiN,IACvClN,MAAMC,UAAUoN,IAAMrN,MAAMC,UAAUiN,uBCrKtC,SAAWlN,GASTA,EAAMC,UAAUqN,IAAM,CAIpB,QAAW,CACTnN,QAAS,+CACTC,YAAY,GAId,mBAAoB,CAClBD,QAAS,sFACTC,YAAY,EACZE,OAAQN,EAAMC,UAAUuM,YAG1B,OAAU,CACRrM,QAAS,uEACTC,YAAY,EACZE,OAAQ,CACN,cAAe,CACbH,QAAS,WACTiB,MAAO,YAET,KAAQ,cAGZ,uBAAwB,CACtBjB,QAAS,qFACTC,YAAY,GAEd,OAAU,CACRD,QAAS,gBACTC,YAAY,EACZE,OAAQN,EAAMC,UAAUoM,QAE1B,QAAW,CACTlM,QAAS,kCACTC,YAAY,GAGd,eAAgB,CACdD,QAAS,sEACTC,YAAY,EACZE,OAAQ,CACN,KAAQ,CACNH,QAAS,iBACTG,OAAQ,CACN,QAAW,kBACX,YAAe,MAGnB,OAAU,CACRH,QAAS,gDACTiB,MAAO,WAETsG,KAAM1H,EAAMC,UAAUuM,aAG1B,QAAW,CACTrM,QAAS,yDACTC,YAAY,GAEd,MAAS,CAET,CACED,QAAS,qBACTC,YAAY,EACZE,OAAQ,CACN,QAAW,SACX,SAAY,oBACZ,YAAe,WAInB,CACEH,QAAS,iBACTC,YAAY,EACZE,OAAQ,CACN,KAAQ,CACNH,QAAS,SACTiB,MAAO,YAETsG,KAAM1H,EAAMC,UAAUuM,cAG1B,OAAU,CACRrM,QAAS,mDACTC,YAAY,EACZE,OAAQN,EAAMC,UAAUuM,YAE1B,aAAc,CACZrM,QAAS,oEACTC,YAAY,GAEd,IAAO,CACLD,QAAS,+DACTC,YAAY,EACZE,OAAQ,CACN,WAAc,CAAC,CACbH,QAAS,kBACTG,OAAQN,EAAMC,UAAUuM,YACvB,CACDrM,QAAS,YACTG,OAAQ,CACN,aAAc,CACZH,QAAS,uCACTC,YAAY,EACZE,OAAQN,EAAMC,UAAUuM,YAE1B,YAAa,2BACb,YAAe,cAGnB,YAAe,IACf,UAAW,WACX,aAAc,cAGlB,KAAQ,CAAC,CACPrM,QAAS,wBACTC,YAAY,EACZE,OAAQN,EAAMC,UAAUuM,aAE1B,YAAe,aAgBjB,IAdA,IAAIe,EAAiB,iFAAiF5D,OAGlG6D,EAAU,CAAC,CACbC,OAAQ,OACRrK,SAAU,QACT,CACDqK,OAAQ,SACRrK,SAAU,gBACT,MAAO,aAAc,OAAQ,aAAc,WAAY,CACxDqK,OAAQ,OACRrK,SAAU,QACT,UACCsK,EAAc,CAAC,EACV/K,EAAI,EAAGgL,EAAIH,EAAQ9E,OAAQ/F,EAAIgL,EAAGhL,IAAK,CAC9C,IAAI8K,EAASD,EAAQ7K,GACrB8K,EAA2B,iBAAXA,EAAsB,CACpCA,OAAQA,EACRrK,SAAUqK,GACRA,EACAzN,EAAMC,UAAUwN,EAAOrK,YACzBsK,EAAY,UAAYD,EAAOA,QAAU,CACvCtN,QAASkD,OAAOkK,EAAe/L,QAAQ,iBAAiB,WACtD,OAAOiM,EAAOA,MAChB,IAAI,KACJrN,YAAY,EACZE,OAAQ,CACN,cAAe,CACbH,QAAS,WACTiB,MAAO,YAET,KAAQ,CACNjB,QAAS,YACTiB,MAAO,CAACqM,EAAOrK,SAAU,YAAcqK,EAAOrK,UAC9C9C,OAAQN,EAAMC,UAAUwN,EAAOrK,aAKzC,CACApD,EAAMC,UAAUyE,aAAa,MAAO,SAAUgJ,EAC/C,CAhLD,CAgLG1N,yBChLHA,MAAMC,UAAU2N,OAAS,CACvB,QAAW,CACTzN,QAAS,eACTC,YAAY,EACZC,QAAQ,GAEV,uBAAwB,CACtBF,QAAS,sEACTE,QAAQ,EACRC,OAAQ,CACN,cAAiB,CAEfH,QAAS,sFACTC,YAAY,EACZE,OAAQ,CACN,cAAe,CACbH,QAAS,sBACTC,YAAY,GAEd,oBAAqB,CACnBD,QAAS,kBACTiB,MAAO,eAETsG,KAAM,OAGV,OAAU,YAGd,uBAAwB,CACtBvH,QAAS,uCACTE,QAAQ,EACRe,MAAO,UAET,OAAU,CACRjB,QAAS,mDACTE,QAAQ,GAEV,SAAY,CACVF,QAAS,4CACTC,YAAY,GAEd,aAAc,CACZD,QAAS,mBACTC,YAAY,GAEd,UAAa,CACXD,QAAS,2BACTC,YAAY,EACZgB,MAAO,CAAC,aAAc,eACtBd,OAAQ,CACN,YAAe,OAGnB,QAAW,wNACX,QAAW,shBACX,QAAW,0BACX,OAAU,mJACV,SAAY,uDACZ,YAAe,iBAEjBN,MAAMC,UAAU2N,OAAO,wBAAwBtN,OAAsB,cAAEA,OAAOoH,KAAO1H,MAAMC,UAAU2N,OACrG5N,MAAMC,UAAU4N,GAAK7N,MAAMC,UAAU2N,yBC9DrC5N,MAAMC,UAAU6N,IAAM,CACpB,QAAW,CACT3N,QAAS,gDACTC,YAAY,GAEd,SAAY,CAAC,CACXD,QAAS,sCACTE,QAAQ,GACP,YACH,OAAU,CACRF,QAAS,kDACTE,QAAQ,EACRD,YAAY,GAEd,WAAc,CACZD,QAAS,sCACTE,QAAQ,EACRD,YAAY,EACZE,OAAQ,CACN,YAAe,UAGnB,SAAY,4FAEZ,QAAW,u9EACX,QAAW,2BACX,OAAU,4CACV,SAAY,+HACZ,YAAe,kCC5BjB,SAAWN,GACTA,EAAMC,UAAU8N,WAAa/N,EAAMC,UAAUuE,OAAO,aAAc,CAChE,aAAc,CACZrE,QAAS,+KACTC,YAAY,EACZC,QAAQ,EACRC,OAAQ,MAEV,QAAW,0FAIbN,EAAMC,UAAU8N,WAAWC,QAAQ3F,KAAK,qDAExC,2FAEA,qCAGOrI,EAAMC,UAAU8N,WAAsB,iBACtC/N,EAAMC,UAAU8N,WAAW,oBAGlC,IAAIE,EAAajO,EAAMC,UAAUuE,OAAO,aAAc,CAAC,UAChDyJ,EAAW,cAClBjO,EAAMC,UAAU8N,WAAW,cAAczN,OAAS2N,EAClDjO,EAAMC,UAAUyE,aAAa,aAAc,WAAY,CACrD,UAAa,CACXvE,QAAS,qBACTG,OAAQ,CACN,GAAM,CACJH,QAAS,KACTiB,MAAO,YAET,SAAY,aAGhB,mBAAoB,CAElBjB,QAAS,yGACTE,QAAQ,EACRC,OAAQ,CACN,SAAY,4DACZ,QAAW,CACTH,QAAS,WAETiB,MAAO,aACPd,OAAQ2N,OAKhBjO,EAAMC,UAAUiO,GAAKlO,EAAMC,UAAU8N,UACtC,CArDD,CAqDG/N,yBCrDH,WACE,GAAqB,oBAAVA,OAA6C,oBAAbyD,SAA3C,CASA,IAAI0K,EAAc,eAOdC,EAAe,WAKfC,EAASrO,MAAMwF,QAAQ8I,YAAc,CAQvCC,QAAS,SAAU1L,EAAS2L,GAC1B,GAAwB,QAApB3L,EAAQ8J,SAAsB9J,EAAQS,UAAUa,SAASgK,GAA7D,CAGA,IAAIM,EAAiB5L,EAAQ6L,cAAc,sBAC3C,GAAKD,EAAL,CAGA,IAAIE,EAAkBC,SAAS/L,EAAQgM,aAAa,cAAe,KAAO,EACtEC,EAAgBH,GAAmBF,EAAeM,SAASrG,OAAS,GACpE8F,EAASG,IACXH,EAASG,GAEPH,EAASM,IACXN,EAASM,GAEX,IAAIE,EAAYR,EAASG,EACzB,OAAOF,EAAeM,SAASC,EAV/B,CAJA,CAeF,EASAC,OAAQ,SAAUpM,GAChBqM,EAAe,CAACrM,GAClB,EAWAsM,4BAA4B,GA4F1BC,OAAYC,EAChB1D,OAAOR,iBAAiB,UAAU,WAC5BkD,EAAOc,4BAA8BC,IAAczD,OAAO2D,aAG9DF,EAAYzD,OAAO2D,WACnBJ,EAAe7N,MAAMM,UAAUG,MAAMD,KAAK4B,SAAS0C,iBAAiB,OAASgI,KAC/E,IACAnO,MAAM+F,MAAMxC,IAAI,YAAY,SAAUsC,GACpC,GAAKA,EAAIU,KAAT,CAGA,IAAIA,EAA6BV,EAAIhD,QACjC0M,EAAgChJ,EAAKiJ,WAGzC,GAAKD,GAAQ,OAAOE,KAAKF,EAAIjJ,YAKzBC,EAAKmI,cAAc,uBAKlB1O,MAAMc,KAAKkD,SAASuC,EAAM4H,GAA/B,CAKA5H,EAAKjD,UAAUoM,OAAOvB,GAEtBoB,EAAIjM,UAAUC,IAAI4K,GAClB,IAEIwB,EAFA5G,EAAQlD,EAAIU,KAAKwC,MAAMqF,GACvBwB,EAAW7G,EAAQA,EAAML,OAAS,EAAI,EAEtCmH,EAAQ,IAAIxO,MAAMuO,EAAW,GAAG1E,KAAK,kBACzCyE,EAAqBlM,SAASqM,cAAc,SACzBjJ,aAAa,cAAe,QAC/C8I,EAAmB3M,UAAY,oBAC/B2M,EAAmBhJ,UAAYkJ,EAC3BN,EAAI3I,aAAa,gBACnB2I,EAAIQ,MAAMC,aAAe,eAAiBpB,SAASW,EAAIV,aAAa,cAAe,IAAM,IAE3FhJ,EAAIhD,QAAQoN,YAAYN,GACxBT,EAAe,CAACK,IAChBvP,MAAM+F,MAAMC,IAAI,eAAgBH,EAnBhC,CAjBA,CAqCF,IACA7F,MAAM+F,MAAMxC,IAAI,gBAAgB,SAAUsC,GACxCA,EAAIL,QAAUK,EAAIL,SAAW,CAAC,EAC9BK,EAAIL,QAAQ8I,aAAc,CAC5B,GAnNA,CA2EA,SAASY,EAAejJ,GAMtB,GAAuB,IALvBA,EAAWA,EAASwH,QAAO,SAAU5C,GACnC,IACIqF,EA2ER,SAAmBrN,GACjB,IAAKA,EACH,OAAO,KAET,OAAO8I,OAAOwE,iBAAmBA,iBAAiBtN,GAAWA,EAAQuN,cAAgB,IACvF,CAjFqBC,CAAUxF,GACC,eAC5B,MAAsB,aAAfqF,GAA4C,aAAfA,CACtC,KACaxH,OAAb,CAGA,IAAI4H,EAAQrK,EAAS1E,KAAI,SAAUsB,GACjC,IAAI0N,EAAc1N,EAAQ6L,cAAc,QACpCiB,EAAqB9M,EAAQ6L,cAAc,sBAC/C,GAAK6B,GAAgBZ,EAArB,CAKA,IAAIa,EAAkB3N,EAAQ6L,cAAc,uBACxC+B,EAAYF,EAAY/J,YAAYkK,MAAMtC,GACzCoC,KACHA,EAAkB/M,SAASqM,cAAc,SACzB9M,UAAY,qBAC5BuN,EAAYN,YAAYO,IAE1BA,EAAgB7J,UAAY,IAC5B6J,EAAgBT,MAAMY,QAAU,QAChC,IAAIC,EAAiBJ,EAAgBK,wBAAwBC,OAE7D,OADAN,EAAgB7J,UAAY,GACrB,CACL9D,QAASA,EACTgN,MAAOY,EACPM,YAAa,GACbH,eAAgBA,EAChBI,MAAOR,EAnBT,CAqBF,IAAG/C,OAAOwD,SACVX,EAAM7N,SAAQ,SAAUyO,GACtB,IAAIV,EAAkBU,EAAKF,MACvBnB,EAAQqB,EAAKrB,MACbkB,EAAcG,EAAKH,YACnBH,EAAiBM,EAAKN,eAC1BG,EAAYlB,EAAMnH,OAAS,QAAK2G,EAChCQ,EAAMpN,SAAQ,SAAU0O,EAAMlI,GAC5B,GAAIkI,GAAQA,EAAKzI,OAAS,EAAG,CAC3B,IAAImC,EAAI2F,EAAgBP,YAAYxM,SAASqM,cAAc,SAC3DjF,EAAEkF,MAAMY,QAAU,QAClB9F,EAAErE,YAAc2K,CAClB,MACEJ,EAAY9H,GAAS2H,CAEzB,GACF,IACAN,EAAM7N,SAAQ,SAAUyO,GAItB,IAHA,IAAIV,EAAkBU,EAAKF,MACvBD,EAAcG,EAAKH,YACnBK,EAAa,EACRzO,EAAI,EAAGA,EAAIoO,EAAYrI,OAAQ/F,SACf0M,IAAnB0B,EAAYpO,KACdoO,EAAYpO,GAAK6N,EAAgBzB,SAASqC,KAAcP,wBAAwBC,OAGtF,IACAR,EAAM7N,SAAQ,SAAUyO,GACtB,IAAIV,EAAkBU,EAAKF,MACvBK,EAAUH,EAAKrO,QAAQ6L,cAAc,sBACzC8B,EAAgBT,MAAMY,QAAU,OAChCH,EAAgB7J,UAAY,GAC5BuK,EAAKH,YAAYtO,SAAQ,SAAUqO,EAAQQ,GACzCD,EAAQtC,SAASuC,GAAYvB,MAAMe,OAASA,EAAS,IACvD,GACF,GA9DA,CA+DF,CAkED,CAvND","sources":["webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-clike.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-core.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-css.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-javascript.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-markup.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-pug.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-python.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-sql.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-typescript.js","webpack://@freecodecamp/client/../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js"],"sourcesContent":["Prism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};","/// <reference lib=\"WebWorker\"/>\n\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0;\n\n  // The grammar object for plaintext\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    /**\n     * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n     * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n     * own worker, you don't want it to do this.\n     *\n     * By setting this value to `true`, Prism will not add its own listeners to the worker.\n     *\n     * You obviously have to change this value before Prism executes. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.disableWorkerMessageHandler = true;\n     * // Load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function (o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function (obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */{};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return /** @type {any} */clone;\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            ( /** @type {Array} */ /** @type {any} */o).forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return /** @type {any} */clone;\n          default:\n            return o;\n        }\n      },\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function (element) {\n        while (element) {\n          var m = lang.exec(element.className);\n          if (m) {\n            return m[1].toLowerCase();\n          }\n          element = element.parentElement;\n        }\n        return 'none';\n      },\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function (element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n        // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n        element.classList.add('language-' + language);\n      },\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function () {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n        if ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n          return /** @type {any} */document.currentScript;\n        }\n\n        // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n\n          var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n          return null;\n        }\n      },\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function (element, className, defaultActivation) {\n        var no = 'no-' + className;\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      }\n    },\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || ( /** @type {any} */_.languages);\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n            var propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function (async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function (container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n      _.hooks.run('before-highlightall', env);\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n      _.hooks.run('before-all-elements-highlight', env);\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function (element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n      var grammar = _.languages[language];\n\n      // Set language on the element, if not present\n      _.util.setLanguage(element, language);\n\n      // Set language on the parent, for styling\n      var parent = element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        _.util.setLanguage(parent, language);\n      }\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n        _.hooks.run('before-insert', env);\n        env.element.innerHTML = env.highlightedCode;\n        _.hooks.run('after-highlight', env);\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n      }\n      _.hooks.run('before-sanity-check', env);\n\n      // plugins may change/add the parent/element\n      parent = env.element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n        parent.setAttribute('tabindex', '0');\n      }\n      if (!env.code) {\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n        return;\n      }\n      _.hooks.run('before-highlight', env);\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      if (!env.grammar) {\n        throw new Error('The language \"' + env.language + '\" has no grammar.');\n      }\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function (text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function (name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function (name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n    _.hooks.run('wrap', env);\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n  }\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n        for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n          var str = currentNode.value;\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n          if (str instanceof Token) {\n            continue;\n          }\n          var removeCount = 1; // this is the to parameter of removeBetween\n          var match;\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n            if (!match || match.index >= text.length) {\n              break;\n            }\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n            if (!match) {\n              continue;\n            }\n          }\n\n          // eslint-disable-next-line no-redeclare\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n          var removeFrom = currentNode.prev;\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n            // the reach might have been extended because of the rematching\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data);\n        var lang = message.language;\n        var code = message.code;\n        var immediateClose = message.immediateClose;\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n    return _;\n  }\n\n  // Get current script and highlight\n  var script = _.util.currentScript();\n  if (script) {\n    _.filename = script.src;\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n  return _;\n}(_self);\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */","(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        }\n        // See rest below\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);","Prism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: RegExp(\n    // lookbehind\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n    // Regex pattern:\n    // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n    // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n    // with the only syntax, so we have to define 2 different regex patterns.\n    /\\//.source + '(?:' + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + '|' +\n    // `v` flag syntax. This supports 3 levels of nested character classes.\n    /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + ')' +\n    // lookahead\n    /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nPrism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n\n  // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nPrism.languages.js = Prism.languages.javascript;","Prism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;","(function (Prism) {\n  // TODO:\n  // - Add CSS highlighting inside <style> tags\n  // - Add support for multi-line code blocks\n  // - Add support for interpolation #{} and !{}\n  // - Add support for tag interpolation #[]\n  // - Add explicit support for plain text using |\n  // - Add support for markup embedded in plain text\n\n  Prism.languages.pug = {\n    // Multiline stuff should appear before the rest\n\n    // This handles both single-line and multi-line comments\n    'comment': {\n      pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n      lookbehind: true\n    },\n    // All the tag-related part is in lookbehind\n    // so that it can be highlighted by the \"tag\" pattern\n    'multiline-script': {\n      pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    // See at the end of the file for known filters\n    'filter': {\n      pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true,\n      inside: {\n        'filter-name': {\n          pattern: /^:[\\w-]+/,\n          alias: 'variable'\n        },\n        'text': /\\S[\\s\\S]*/\n      }\n    },\n    'multiline-plain-text': {\n      pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n      lookbehind: true\n    },\n    'markup': {\n      pattern: /(^[\\t ]*)<.+/m,\n      lookbehind: true,\n      inside: Prism.languages.markup\n    },\n    'doctype': {\n      pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n      lookbehind: true\n    },\n    // This handle all conditional and loop keywords\n    'flow-control': {\n      pattern: /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n      lookbehind: true,\n      inside: {\n        'each': {\n          pattern: /^each .+? in\\b/,\n          inside: {\n            'keyword': /\\b(?:each|in)\\b/,\n            'punctuation': /,/\n          }\n        },\n        'branch': {\n          pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n          alias: 'keyword'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    'keyword': {\n      pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n      lookbehind: true\n    },\n    'mixin': [\n    // Declaration\n    {\n      pattern: /(^[\\t ]*)mixin .+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^mixin/,\n        'function': /\\w+(?=\\s*\\(|\\s*$)/,\n        'punctuation': /[(),.]/\n      }\n    },\n    // Usage\n    {\n      pattern: /(^[\\t ]*)\\+.+/m,\n      lookbehind: true,\n      inside: {\n        'name': {\n          pattern: /^\\+\\w+/,\n          alias: 'function'\n        },\n        rest: Prism.languages.javascript\n      }\n    }],\n    'script': {\n      pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'plain-text': {\n      pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n      lookbehind: true\n    },\n    'tag': {\n      pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n      lookbehind: true,\n      inside: {\n        'attributes': [{\n          pattern: /&[^(]+\\([^)]+\\)/,\n          inside: Prism.languages.javascript\n        }, {\n          pattern: /\\([^)]+\\)/,\n          inside: {\n            'attr-value': {\n              pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n              lookbehind: true,\n              inside: Prism.languages.javascript\n            },\n            'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n            'punctuation': /[!=(),]+/\n          }\n        }],\n        'punctuation': /:/,\n        'attr-id': /#[\\w\\-]+/,\n        'attr-class': /\\.[\\w\\-]+/\n      }\n    },\n    'code': [{\n      pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    'punctuation': /[.\\-!=|]+/\n  };\n  var filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n\n  // Non exhaustive list of available filters and associated languages\n  var filters = [{\n    filter: 'atpl',\n    language: 'twig'\n  }, {\n    filter: 'coffee',\n    language: 'coffeescript'\n  }, 'ejs', 'handlebars', 'less', 'livescript', 'markdown', {\n    filter: 'sass',\n    language: 'scss'\n  }, 'stylus'];\n  var all_filters = {};\n  for (var i = 0, l = filters.length; i < l; i++) {\n    var filter = filters[i];\n    filter = typeof filter === 'string' ? {\n      filter: filter,\n      language: filter\n    } : filter;\n    if (Prism.languages[filter.language]) {\n      all_filters['filter-' + filter.filter] = {\n        pattern: RegExp(filter_pattern.replace('<filter_name>', function () {\n          return filter.filter;\n        }), 'm'),\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          'text': {\n            pattern: /\\S[\\s\\S]*/,\n            alias: [filter.language, 'language-' + filter.language],\n            inside: Prism.languages[filter.language]\n          }\n        }\n      };\n    }\n  }\n  Prism.languages.insertBefore('pug', 'filter', all_filters);\n})(Prism);","Prism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;","Prism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};","(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  });\n\n  // The keywords TypeScript adds to JavaScript\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n  // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n  // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/);\n\n  // doesn't work with TS because TS is too complex\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property'];\n\n  // a version of typescript specifically for highlighting types\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);","(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  }\n\n  /**\n   * Plugin name which is used as a class name for <pre> which is activating the plugin\n   *\n   * @type {string}\n   */\n  var PLUGIN_NAME = 'line-numbers';\n\n  /**\n   * Regular expression used for determining line breaks\n   *\n   * @type {RegExp}\n   */\n  var NEW_LINE_EXP = /\\n(?!$)/g;\n\n  /**\n   * Global exports\n   */\n  var config = Prism.plugins.lineNumbers = {\n    /**\n     * Get node for provided line number\n     *\n     * @param {Element} element pre element\n     * @param {number} number line number\n     * @returns {Element|undefined}\n     */\n    getLine: function (element, number) {\n      if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n        return;\n      }\n      var lineNumberRows = element.querySelector('.line-numbers-rows');\n      if (!lineNumberRows) {\n        return;\n      }\n      var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n      var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n      if (number < lineNumberStart) {\n        number = lineNumberStart;\n      }\n      if (number > lineNumberEnd) {\n        number = lineNumberEnd;\n      }\n      var lineIndex = number - lineNumberStart;\n      return lineNumberRows.children[lineIndex];\n    },\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     *\n     * @param {HTMLElement} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function (element) {\n      resizeElements([element]);\n    },\n    /**\n     * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n     * the current viewport.\n     *\n     * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n     *\n     * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n     *\n     * @type {boolean}\n     */\n    assumeViewportIndependence: true\n  };\n\n  /**\n   * Resizes the given elements.\n   *\n   * @param {HTMLElement[]} elements\n   */\n  function resizeElements(elements) {\n    elements = elements.filter(function (e) {\n      var codeStyles = getStyles(e);\n      var whiteSpace = codeStyles['white-space'];\n      return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n    });\n    if (elements.length == 0) {\n      return;\n    }\n    var infos = elements.map(function (element) {\n      var codeElement = element.querySelector('code');\n      var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n      if (!codeElement || !lineNumbersWrapper) {\n        return undefined;\n      }\n\n      /** @type {HTMLElement} */\n      var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n      var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n      if (!lineNumberSizer) {\n        lineNumberSizer = document.createElement('span');\n        lineNumberSizer.className = 'line-numbers-sizer';\n        codeElement.appendChild(lineNumberSizer);\n      }\n      lineNumberSizer.innerHTML = '0';\n      lineNumberSizer.style.display = 'block';\n      var oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n      lineNumberSizer.innerHTML = '';\n      return {\n        element: element,\n        lines: codeLines,\n        lineHeights: [],\n        oneLinerHeight: oneLinerHeight,\n        sizer: lineNumberSizer\n      };\n    }).filter(Boolean);\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lines = info.lines;\n      var lineHeights = info.lineHeights;\n      var oneLinerHeight = info.oneLinerHeight;\n      lineHeights[lines.length - 1] = undefined;\n      lines.forEach(function (line, index) {\n        if (line && line.length > 1) {\n          var e = lineNumberSizer.appendChild(document.createElement('span'));\n          e.style.display = 'block';\n          e.textContent = line;\n        } else {\n          lineHeights[index] = oneLinerHeight;\n        }\n      });\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lineHeights = info.lineHeights;\n      var childIndex = 0;\n      for (var i = 0; i < lineHeights.length; i++) {\n        if (lineHeights[i] === undefined) {\n          lineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n        }\n      }\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var wrapper = info.element.querySelector('.line-numbers-rows');\n      lineNumberSizer.style.display = 'none';\n      lineNumberSizer.innerHTML = '';\n      info.lineHeights.forEach(function (height, lineNumber) {\n        wrapper.children[lineNumber].style.height = height + 'px';\n      });\n    });\n  }\n\n  /**\n   * Returns style declarations for the element\n   *\n   * @param {Element} element\n   */\n  function getStyles(element) {\n    if (!element) {\n      return null;\n    }\n    return window.getComputedStyle ? getComputedStyle(element) : element.currentStyle || null;\n  }\n  var lastWidth = undefined;\n  window.addEventListener('resize', function () {\n    if (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n      return;\n    }\n    lastWidth = window.innerWidth;\n    resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n  });\n  Prism.hooks.add('complete', function (env) {\n    if (!env.code) {\n      return;\n    }\n    var code = /** @type {Element} */env.element;\n    var pre = /** @type {HTMLElement} */code.parentNode;\n\n    // works only for <code> wrapped inside <pre> (not inline)\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    // Abort if line numbers already exists\n    if (code.querySelector('.line-numbers-rows')) {\n      return;\n    }\n\n    // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n    if (!Prism.util.isActive(code, PLUGIN_NAME)) {\n      return;\n    }\n\n    // Remove the class 'line-numbers' from the <code>\n    code.classList.remove(PLUGIN_NAME);\n    // Add the class 'line-numbers' to the <pre>\n    pre.classList.add(PLUGIN_NAME);\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n    var lines = new Array(linesNum + 1).join('<span></span>');\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n    if (pre.hasAttribute('data-start')) {\n      pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n    env.element.appendChild(lineNumbersWrapper);\n    resizeElements([pre]);\n    Prism.hooks.run('line-numbers', env);\n  });\n  Prism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n  });\n})();"],"names":["Prism","languages","clike","pattern","lookbehind","greedy","inside","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","extend","redef","insertBefore","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","name","callbacks","length","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","g","string","css","markup","addInlined","addAttribute","javascript","regex","js","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","pug","filter_pattern","filters","filter","all_filters","l","python","py","sql","typescript","keyword","typeInside","ts","PLUGIN_NAME","NEW_LINE_EXP","config","lineNumbers","getLine","number","lineNumberRows","querySelector","lineNumberStart","parseInt","getAttribute","lineNumberEnd","children","lineIndex","resize","resizeElements","assumeViewportIndependence","lastWidth","undefined","innerWidth","pre","parentNode","test","remove","lineNumbersWrapper","linesNum","lines","createElement","style","counterReset","appendChild","whiteSpace","getComputedStyle","currentStyle","getStyles","infos","codeElement","lineNumberSizer","codeLines","split","display","oneLinerHeight","getBoundingClientRect","height","lineHeights","sizer","Boolean","info","line","childIndex","wrapper","lineNumber"],"sourceRoot":""}